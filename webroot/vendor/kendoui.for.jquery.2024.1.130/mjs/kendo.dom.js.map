{"version":3,"file":"kendo.dom.js","names":["__meta__","id","name","category","depends","advanced","kendo","Node","this","node","NullNode","prototype","remove","parentNode","removeChild","attr","text","nodeName","style","children","NULL_NODE","Element","TextNode","nodeValue","force","String","HtmlNode","html","replace","appendTo","parent","document","createElement","index","length","render","appendChild","cached","cachedChildren","cachedLength","Math","abs","replaceChild","syncAttributes","removeAttributes","cachedAttr","value","cachedValue","setStyle","setAttribute","key","removeStyle","cachedStyle","undefined","removeAttribute","cssText","className","str","i","createTextNode","nodes","el","lastChild","replacedNode","outerHTML","firstChild","HTML_CONTAINER","innerHTML","replaceNode","insertHtml","push","child","nextSibling","slice","element","attrs","Tree","root","dom","window"],"sources":["kendo.dom.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\n\nvar __meta__ = {\n    id: \"dom\",\n    name: \"Virtual DOM\",\n    category: \"framework\",\n    depends: [ \"core\" ],\n    advanced: true\n};\n\n(function(kendo) {\n    function Node() {\n        this.node = null;\n    }\n\n    Node.prototype = {\n        remove: function() {\n            if (this.node.parentNode) {\n                this.node.parentNode.removeChild(this.node);\n            }\n            this.attr = {};\n        },\n        attr: {},\n        text: function() {\n            return \"\";\n        }\n    };\n\n    function NullNode() {\n    }\n\n    NullNode.prototype = {\n        nodeName: \"#null\",\n        attr: { style: {} },\n        children: [],\n        remove: function() {\n        }\n    };\n\n    var NULL_NODE = new NullNode();\n\n    function Element(nodeName, attr, children) {\n        this.nodeName = nodeName;\n\n        this.attr = attr || {};\n\n        this.children = children || [];\n    }\n\n    Element.prototype = new Node();\n\n    Element.prototype.appendTo = function(parent) {\n        var node = typeof(this.nodeName) === \"string\" ? document.createElement(this.nodeName) : this.nodeName;\n\n        var children = this.children;\n\n        for (var index = 0; index < children.length; index++) {\n            children[index].render(node, NULL_NODE);\n        }\n\n        parent.appendChild(node);\n\n        return node;\n    };\n\n    Element.prototype.render = function(parent, cached) {\n        var node;\n\n        if (cached.nodeName !== this.nodeName) {\n            cached.remove();\n\n            node = this.appendTo(parent);\n        } else {\n            node = cached.node;\n\n            var index;\n\n            var children = this.children;\n\n            var length = children.length;\n\n            var cachedChildren = cached.children;\n\n            var cachedLength = cachedChildren.length;\n\n            if (Math.abs(cachedLength - length) > 2) {\n                this.render({\n                    appendChild: function(node) {\n                        parent.replaceChild(node, cached.node);\n                    }\n                }, NULL_NODE);\n\n                return;\n            }\n\n            for (index = 0; index < length; index++) {\n                children[index].render(node, cachedChildren[index] || NULL_NODE);\n            }\n\n            for (index = length; index < cachedLength; index++) {\n                cachedChildren[index].remove();\n            }\n        }\n\n        this.node = node;\n\n        this.syncAttributes(cached.attr);\n\n        this.removeAttributes(cached.attr);\n    };\n\n    Element.prototype.syncAttributes = function(cachedAttr) {\n        var attr = this.attr;\n\n        for (var name in attr) {\n            var value = attr[name];\n\n            var cachedValue = cachedAttr[name];\n\n            if (name === \"style\") {\n                this.setStyle(value, cachedValue);\n            } else if (value !== cachedValue) {\n                this.setAttribute(name, value, cachedValue);\n            }\n        }\n    };\n\n    Element.prototype.setStyle = function(style, cachedValue) {\n        var node = this.node;\n        var key;\n\n        if (cachedValue) {\n            for (key in style) {\n                if (style[key] !== cachedValue[key]) {\n                    node.style[key] = style[key];\n                }\n            }\n        } else {\n            for (key in style) {\n                node.style[key] = style[key];\n            }\n        }\n    };\n\n    Element.prototype.removeStyle = function(cachedStyle) {\n        var style = this.attr.style || {};\n        var node = this.node;\n\n        for (var key in cachedStyle) {\n            if (style[key] === undefined) {\n                node.style[key] = \"\";\n            }\n        }\n    };\n\n    Element.prototype.removeAttributes = function(cachedAttr) {\n        var attr = this.attr;\n\n        for (var name in cachedAttr) {\n            if (name === \"style\") {\n                this.removeStyle(cachedAttr.style);\n            } else if (attr[name] === undefined) {\n                this.removeAttribute(name);\n            }\n        }\n    };\n\n    Element.prototype.removeAttribute = function(name) {\n        var node = this.node;\n\n        if (name === \"style\") {\n            node.style.cssText = \"\";\n        } else if (name === \"className\") {\n            node.className = \"\";\n        } else {\n            node.removeAttribute(name);\n        }\n    };\n\n    Element.prototype.setAttribute = function(name, value) {\n        var node = this.node;\n\n        if (node[name] !== undefined) {\n            node[name] = value;\n        } else {\n            node.setAttribute(name, value);\n        }\n    };\n\n    Element.prototype.text = function() {\n        var str = \"\";\n        for (var i = 0; i < this.children.length; ++i) {\n            str += this.children[i].text();\n        }\n        return str;\n    };\n\n    function TextNode(nodeValue, force) {\n        this.nodeValue = String(nodeValue);\n        this.force = force;\n    }\n\n    TextNode.prototype = new Node();\n\n    TextNode.prototype.nodeName = \"#text\";\n\n    TextNode.prototype.render = function(parent, cached) {\n        var node;\n\n        if (cached.nodeName !== this.nodeName || this.force) {\n            cached.remove();\n\n            node = document.createTextNode(this.nodeValue);\n\n            parent.appendChild(node);\n        } else {\n            node = cached.node;\n\n            if (this.nodeValue !== cached.nodeValue) {\n                if (node.parentNode) {\n                    // sometimes in IE parentNode is null (reason unknown),\n                    // and IE throws an error when you try to set a\n                    // parentless' nodeValue, because why not.\n                    node.nodeValue = this.nodeValue;\n                }\n            }\n        }\n\n        this.node = node;\n    };\n\n    TextNode.prototype.text = function() {\n        return this.nodeValue;\n    };\n\n    function HtmlNode(html, replace) {\n        this.html = html;\n        this.replace = replace;\n    }\n\n    HtmlNode.prototype = {\n       nodeName: \"#html\",\n       attr: {},\n       remove: function() {\n           for (var index = 0; index < this.nodes.length; index++) {\n               var el = this.nodes[index];\n               if (el.parentNode) {\n                   el.parentNode.removeChild(el);\n               }\n           }\n       },\n       render: function(parent, cached) {\n        var lastChild, replacedNode;\n           if (cached.nodeName !== this.nodeName || cached.html !== this.html || this.replace) {\n               if (this.replace && cached.replace && cached.nodes && cached.nodes.length && cached.nodes[0].outerHTML) {\n                // This could be changed to a for loop that replaces several nodes instead of the first one. Presently, there is no use-case scenario for that.\n                replacedNode = replaceNode(parent, cached.nodes[0], this.html);\n                lastChild = parent.lastChild;\n               } else {\n                cached.remove();\n                lastChild = parent.lastChild;\n                insertHtml(parent, this.html);\n               }\n               this.nodes = [];\n\n               if (replacedNode) {\n                this.nodes.push(replacedNode);\n               }\n\n               for (var child = lastChild ? lastChild.nextSibling : parent.firstChild; child; child = child.nextSibling) {\n                   this.nodes.push(child);\n               }\n           } else {\n               this.nodes = cached.nodes.slice(0);\n           }\n       }\n    };\n\n    var HTML_CONTAINER = document.createElement(\"div\");\n\n    function insertHtml(node, html) {\n        HTML_CONTAINER.innerHTML = html;\n\n        while (HTML_CONTAINER.firstChild) {\n            node.appendChild(HTML_CONTAINER.firstChild);\n        }\n    }\n\n    function replaceNode(parent, node, html) {\n        var firstChild;\n\n        HTML_CONTAINER.innerHTML = html;\n        firstChild = HTML_CONTAINER.firstChild;\n\n        parent.replaceChild(firstChild, node);\n\n        return firstChild;\n    }\n\n    function html(value, force) {\n        return new HtmlNode(value, force);\n    }\n\n    function element(nodeName, attrs, children) {\n        return new Element(nodeName, attrs, children);\n    }\n\n    function text(value, force) {\n        return new TextNode(value, force);\n    }\n\n    function Tree(root) {\n       this.root = root;\n       this.children = [];\n    }\n\n    Tree.prototype = {\n        html: html,\n        element: element,\n        text: text,\n        render: function(children) {\n            var cachedChildren = this.children;\n\n            var index;\n\n            var length;\n\n            for (index = 0, length = children.length; index < length; index++) {\n                var cached = cachedChildren[index];\n                if (!cached) {\n                    cached = NULL_NODE;\n                } else if (!cached.node || !cached.node.parentNode) {\n                    cached.remove();\n                    cached = NULL_NODE;\n                }\n                children[index].render(this.root, cached);\n            }\n\n            for (index = length; index < cachedChildren.length; index++) {\n                cachedChildren[index].remove();\n            }\n\n            this.children = children;\n        }\n    };\n\n    kendo.dom = {\n        html: html,\n        text: text,\n        element: element,\n        Tree: Tree,\n        Node: Node\n    };\n})(window.kendo);\n"]}