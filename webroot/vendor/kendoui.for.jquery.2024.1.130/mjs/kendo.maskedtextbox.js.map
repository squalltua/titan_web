{"version":3,"file":"kendo.maskedtextbox.js","names":["$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","__meta__","id","name","category","description","depends","undefined$1","global","window","min","Math","caret","keys","ui","Widget","NS","isPlainObject","setTimeout","STATEDISABLED","STATEINVALID","FOCUSED","DISABLED","READONLY","CHANGE","MOUSEUP","DROP","KEYDOWN","PASTE","ns","INPUT_EVENT_NAME","support","propertyChangeEvent","MaskedTextBox","extend","init","element","DOMElement","that","this","fn","call","_rules","rules","_wrapper","_tokenize","_form","addClass","attr","on","value","_togglePrompt","_old","_emptyMask","_oldValue","_timeoutId","_maskLength","val","clearTimeout","removeClass","_change","mask","length","is","parents","enable","readonly","_validationIcon","iconClass","_label","_applyCssClasses","floatingLabel","refresh","notify","clearPromptChar","unmaskOnPost","promptChar","culture","label","size","fillMode","rounded","events","L","C","A","a","setOptions","_unbindInput","_bindInput","destroy","off","_formElement","_resetHandler","_submitHandler","raw","_unmask","replace","RegExp","escapeRegExp","emptyMask","_mask","_unmaskedValue","_activeElement","show","_editable","disable","_keydown","bind","_drop","_trackChange","_inputHandler","browser","msie","version","join","_legacyIEInputHandler","toggleClass","prop","trigger","__changing","inputChange","backward","old","cursor","lengthDiff","mobile","mobileOS","__dropping","android","contentStart","str1","str2","i","stringDiffStart","content","substring","caretPos","endContent","_trimStartPromptChars","unmasked","_findCaretPosBackwards","count","indexOf","pos","caretStart","_find","__backward","e","input","type","__pasting","formId","form","closest","key","keyCode","BACKSPACE","ENTER","idx","step","charAt","tokens","start","end","valueLength","chr","current","empty","chrIdx","split","token","tokenIdx","tokensLength","result","test","isFunction","_blinkInvalidState","floating","labelText","_floatingLabelContainer","wrap","parent","FloatingLabel","guid","_inputLabel","style","cssText","width","className","_addInvalidState","_invalidStateTimeout","_removeInvalidState","rule","maskChars","numberFormat","getCulture","currency","symbol","l","text","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","kendo$1"],"sources":["kendo.maskedtextbox.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.floatinglabel.js';\nimport './kendo.icons.js';\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"maskedtextbox\",\n    name: \"MaskedTextBox\",\n    category: \"web\",\n    description: \"The MaskedTextBox widget allows to specify a mask type on an input field.\",\n    depends: [\"core\", \"floatinglabel\", \"icons\"]\n};\n\n(function($, undefined$1) {\n    var global = window;\n    var min = global.Math.min;\n    var kendo = global.kendo;\n    var caret = kendo.caret;\n    var keys = kendo.keys;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var NS = \".kendoMaskedTextBox\";\n    var isPlainObject = $.isPlainObject;\n    var setTimeout = window.setTimeout;\n\n    var LABELCLASSES = \"k-label k-input-label\";\n    var STATEDISABLED = \"k-disabled\";\n    var STATEINVALID = \"k-invalid\";\n    var FOCUSED = \"k-focus\";\n    var DISABLED = \"disabled\";\n    var READONLY = \"readonly\";\n    var CHANGE = \"change\";\n    var MOUSEUP = \"mouseup\";\n    var DROP = \"drop\";\n    var KEYDOWN = \"keydown\";\n    var PASTE = \"paste\";\n    var INPUT = \"input\";\n\n    function ns(name) { return name + NS; }\n\n    var INPUT_EVENT_NAME = ns(kendo.support.propertyChangeEvent ? \"propertychange\" : INPUT);\n\n    function stringDiffStart(str1, str2) {\n        var i = 0;\n        while (i < str2.length) {\n            if (str1[i] !== str2[i]) {\n                break;\n            }\n            i++;\n        }\n\n        return i;\n    }\n    var MaskedTextBox = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var DOMElement;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._rules = $.extend({}, that.rules, that.options.rules);\n\n            element = that.element;\n            DOMElement = element[0];\n\n            that._wrapper();\n            that._tokenize();\n            that._form();\n\n            that.element\n                .addClass(\"k-input-inner\")\n                .attr(\"autocomplete\", \"off\")\n                .on(\"focus\" + NS, function() {\n                    var value = DOMElement.value;\n\n                    if (!value) {\n                        DOMElement.value = that._old = that._emptyMask;\n                    } else {\n                        that._togglePrompt(true);\n                    }\n\n                    that._oldValue = value;\n                    that.wrapper.addClass(FOCUSED);\n\n                    that._timeoutId = setTimeout(function() {\n                        caret(element, 0, value ? that._maskLength : 0);\n                    });\n                })\n                .on(\"focusout\" + NS, function() {\n                    var value = element.val();\n\n                    clearTimeout(that._timeoutId);\n                    DOMElement.value = that._old = \"\";\n\n                    if (value !== that._emptyMask) {\n                        DOMElement.value = that._old = value;\n                    }\n\n                    that.wrapper.removeClass(FOCUSED);\n                    that._change();\n                    that._togglePrompt();\n                });\n\n            if (that.options.mask && that.options.mask.length > 0) {\n                that.element.attr(\"aria-placeholder\", that.options.mask);\n            }\n\n            var disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(element.is(\"[readonly]\"));\n            }\n\n            that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n\n            that.value(that.options.value || element.val());\n\n            that._label();\n            that._applyCssClasses();\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, suffixInsertAfter: that._validationIcon });\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"MaskedTextBox\",\n            clearPromptChar: false,\n            unmaskOnPost: false,\n            promptChar: \"_\",\n            culture: \"\",\n            rules: {},\n            value: \"\",\n            mask: \"\",\n            label: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            }\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        rules: {\n            \"0\": /\\d/,\n            \"9\": /\\d|\\s/,\n            \"#\": /\\d|\\s|\\+|\\-/,\n            \"L\": /[a-zA-Z]/,\n            \"?\": /[a-zA-Z]|\\s/,\n            \"&\": /\\S/,\n            \"C\": /./,\n            \"A\": /[a-zA-Z0-9]/,\n            \"a\": /[a-zA-Z0-9]|\\s/\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            that._rules = $.extend({}, that.rules, that.options.rules);\n\n            that._tokenize();\n\n            this._unbindInput();\n            this._bindInput();\n\n            that.value(that.element.val());\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.floatingLabel) {\n                that.floatingLabel.destroy();\n            }\n\n            that.element.off(NS);\n\n            if (that._formElement) {\n                that._formElement.off(\"reset\", that._resetHandler);\n                that._formElement.off(\"submit\", that._submitHandler);\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        raw: function() {\n            var unmasked = this._unmask(this.element.val(), 0);\n            return unmasked.replace(new RegExp(escapeRegExp(this.options.promptChar), \"g\"), \"\");\n        },\n\n        value: function(value) {\n            var element = this.element;\n            var emptyMask = this._emptyMask;\n\n            if (value === undefined$1) {\n                return this.element.val();\n            }\n\n            if (value === null) {\n                value = \"\";\n            }\n\n            if (!emptyMask) {\n                this._oldValue = value;\n                element.val(value);\n                return;\n            }\n\n            value = this._unmask(value + \"\");\n\n            element.val(value ? emptyMask : \"\");\n\n            this._mask(0, this._maskLength, value);\n            this._unmaskedValue = null;\n\n            value = element.val();\n            this._oldValue = value;\n\n            if (kendo._activeElement() !== element) {\n                if (value === emptyMask) {\n                    element.val(\"\");\n                } else {\n                    this._togglePrompt();\n                }\n            }\n\n            if (this.floatingLabel) {\n                this.floatingLabel.refresh();\n            }\n        },\n\n        _togglePrompt: function(show) {\n            var DOMElement = this.element[0];\n            var value = DOMElement.value;\n\n            if (this.options.clearPromptChar) {\n                if (!show) {\n                    value = value.replace(new RegExp(escapeRegExp(this.options.promptChar), \"g\"), \" \");\n                } else {\n                    value = this._oldValue;\n                }\n\n                DOMElement.value = this._old = value;\n            }\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        _bindInput: function() {\n            var that = this;\n\n            if (that._maskLength) {\n                that.element\n                    .on(ns(KEYDOWN), that._keydown.bind(that))\n                    .on(ns(DROP), that._drop.bind(that))\n                    .on(ns(CHANGE), that._trackChange.bind(that))\n                    .on(INPUT_EVENT_NAME, that._inputHandler.bind(that));\n\n\n                if (kendo.support.browser.msie) {\n                    var version = kendo.support.browser.version;\n                    if (version > 8 && version < 11) {\n                        var events = [ns(MOUSEUP), ns(DROP), ns(KEYDOWN), ns(PASTE)].join(\" \");\n                        that.element.on(events, that._legacyIEInputHandler.bind(that));\n                    }\n                }\n            }\n        },\n\n        _unbindInput: function() {\n            var events = [INPUT_EVENT_NAME, ns(KEYDOWN), ns(MOUSEUP), ns(DROP), ns(PASTE)].join(\" \");\n\n            this.element.off(events);\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var wrapper = that.wrapper;\n            var disable = options.disable;\n            var readonly = options.readonly;\n\n            that._unbindInput();\n\n            if (!readonly && !disable) {\n                element.prop(DISABLED, false)\n                       .prop(READONLY, false);\n\n                wrapper.removeClass(STATEDISABLED);\n\n                that._bindInput();\n            } else {\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly);\n\n                wrapper.toggleClass(STATEDISABLED, disable);\n            }\n        },\n\n        _change: function() {\n            var that = this;\n            var value = that.value();\n\n            if (value !== that._oldValue) {\n                that._oldValue = value;\n\n                that.trigger(CHANGE);\n                that.element.trigger(CHANGE);\n            }\n            else if (value === \"\" && that.__changing) {//ensure change is raised when empty value (mask is stripped from input content) for consistent ngjs model update\n                that.element.trigger(CHANGE);\n            }\n        },\n\n        inputChange: function(backward) {\n            var that = this;\n            var old = that._old;\n            var element = that.element[0];\n            var value = element.value;\n            var selection = caret(element);\n            var cursor = selection[1];\n            var lengthDiff = value.length - old.length;\n            var mobile = kendo.support.mobileOS;\n\n            if (that.__dropping && lengthDiff < 0) {//dropping in same input on WebKit is raised once for the removal phase and once for the adding phase\n                return;\n            }\n\n            if (lengthDiff === -1 && mobile.android && mobile.browser === \"chrome\") {\n                backward = true;\n            }\n\n            var contentStart = min(cursor, stringDiffStart(value, old));\n            var content = value.substring(contentStart, cursor);\n\n            element.value = value.substring(0, contentStart) + that._emptyMask.substring(contentStart);\n\n            var caretPos = that._mask(contentStart, cursor, content);\n            var endContent = that._trimStartPromptChars(value.substring(cursor), min(lengthDiff, caretPos - contentStart));\n\n            var unmasked = that._unmask(endContent, old.length - endContent.length);\n            that._mask(caretPos, caretPos, unmasked);\n\n            if (backward) {\n                caretPos = that._findCaretPosBackwards(contentStart);\n            }\n\n            caret(element, caretPos);\n\n            //clean-up flags\n            that.__dropping = false;\n        },\n\n        _trimStartPromptChars: function(content, count) {\n            var promptChar = this.options.promptChar;\n\n            while (count-- > 0 && content.indexOf(promptChar) === 0) {\n                content = content.substring(1);\n            }\n\n            return content;\n        },\n\n        _findCaretPosBackwards: function(pos) {\n            var caretStart = this._find(pos, true);\n            if (caretStart < pos) {\n                caretStart += 1;\n            }\n\n            return caretStart;\n        },\n\n        _inputHandler: function() {\n            if (kendo._activeElement() !== this.element[0]) {\n                return;\n            }\n\n            this.inputChange(this.__backward);\n        },\n\n        _legacyIEInputHandler: function(e) {\n            var that = this;\n            var input = that.element[0];\n            var value = input.value;\n            var type = e.type;\n\n            that.__pasting = (type === \"paste\");\n\n            setTimeout(function() {\n                if (type === \"mouseup\" && that.__pasting) {\n                    return;\n                }\n                if (input.value && input.value !== value) {\n                    that.inputChange(that.__backward);\n                }\n            });\n        },\n\n        _trackChange: function() {\n            var that = this;\n\n            that.__changing = true;\n            setTimeout(function() { that.__changing = false; });\n        },\n\n        _form: function() {\n            var that = this;\n            var element = that.element;\n            var formId = element.attr(\"form\");\n            var form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(element[0].value);\n                    });\n                };\n\n                that._submitHandler = function() {\n                    that.element[0].value = that._old = that.raw();\n                };\n\n                if (that.options.unmaskOnPost) {\n                    form.on(\"submit\", that._submitHandler);\n                }\n\n                that._formElement = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _keydown: function(e) {\n            var key = e.keyCode;\n\n            this.__backward = key === keys.BACKSPACE;\n\n            if (key === keys.ENTER) {\n                this._change();\n            }\n        },\n\n        _drop: function() {\n            this.__dropping = true;\n        },\n\n        _find: function(idx, backward) {\n            var value = this.element.val() || this._emptyMask;\n            var step = 1;\n\n            if (backward === true) {\n                step = -1;\n            }\n\n            while (idx > -1 || idx <= this._maskLength) {\n                if (value.charAt(idx) !== this.tokens[idx]) {\n                    return idx;\n                }\n\n                idx += step;\n            }\n\n            return -1;\n        },\n\n        _mask: function(start, end, value, backward) {\n            var element = this.element[0];\n            var current = element.value || this._emptyMask;\n            var empty = this.options.promptChar;\n            var valueLength;\n            var chrIdx = 0;\n            var unmasked;\n            var chr;\n            var idx;\n\n            start = this._find(start, backward);\n\n            if (start > end) {\n                end = start;\n            }\n\n            unmasked = this._unmask(current.substring(end), end);\n            value = this._unmask(value, start);\n            valueLength = value.length;\n\n            if (value) {\n                unmasked = unmasked.replace(new RegExp(\"^_{0,\" + valueLength + \"}\"), \"\");\n            }\n\n            value += unmasked;\n            current = current.split(\"\");\n            chr = value.charAt(chrIdx);\n\n            while (start < this._maskLength) {\n                current[start] = chr || empty;\n                chr = value.charAt(++chrIdx);\n\n                if (idx === undefined$1 && chrIdx > valueLength) {\n                    idx = start;\n                }\n\n                start = this._find(start + 1);\n            }\n\n            element.value = this._old = current.join(\"\");\n\n            if (kendo._activeElement() === element) {\n                if (idx === undefined$1) {\n                    idx = this._maskLength;\n                }\n\n                caret(element, idx);\n            }\n\n            return idx;\n        },\n\n        _unmask: function(value, idx) {\n            if (!value) {\n                return \"\";\n            }\n\n            if (this._unmaskedValue === value) {\n                return this._unmaskedValue;\n            }\n            value = (value + \"\").split(\"\");\n\n            var chr;\n            var token;\n            var chrIdx = 0;\n            var tokenIdx = idx || 0;\n\n            var empty = this.options.promptChar;\n\n            var valueLength = value.length;\n            var tokensLength = this.tokens.length;\n\n            var result = \"\";\n\n            while (tokenIdx < tokensLength) {\n                chr = value[chrIdx];\n                token = this.tokens[tokenIdx];\n\n                if (chr === token || chr === empty) {\n                    result += chr === empty ? empty : \"\";\n\n                    chrIdx += 1;\n                    tokenIdx += 1;\n                } else if (typeof token !== \"string\") {\n                    if ((token && token.test && token.test(chr)) || (kendo.isFunction(token) && token(chr))) {\n                        result += chr;\n                        tokenIdx += 1;\n                    } else {\n                        if (valueLength === 1) {\n                            this._blinkInvalidState();\n                        }\n                    }\n\n                    chrIdx += 1;\n                } else {\n                    tokenIdx += 1;\n                }\n\n                if (chrIdx >= valueLength) {\n                    break;\n                }\n            }\n            this._unmaskedValue = result;\n            return result;\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n\n                that._inputLabel = $(\"<label class='\" + LABELCLASSES + \"' for='\" + id + \"'>\" + labelText + \"</label>'\").insertBefore(that.wrapper);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var element = that.element;\n            var DOMElement = element[0];\n\n            var wrapper = element.wrap(\"<span class='k-input k-maskedtextbox'></span>\").parent();\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"100%\";\n            that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n        },\n\n        _blinkInvalidState: function() {\n            var that = this;\n\n            that._addInvalidState();\n            clearTimeout(that._invalidStateTimeout);\n            that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n        },\n\n        _addInvalidState: function() {\n            var that = this;\n\n            that.wrapper.addClass(STATEINVALID);\n            that._validationIcon.removeClass(\"k-hidden\");\n        },\n\n        _removeInvalidState: function() {\n            var that = this;\n\n            that.wrapper.removeClass(STATEINVALID);\n            that._validationIcon.addClass(\"k-hidden\");\n            that._invalidStateTimeout = null;\n        },\n\n        _tokenize: function() {\n            var tokens = [];\n            var tokenIdx = 0;\n\n            var mask = this.options.mask || \"\";\n            var maskChars = mask.split(\"\");\n            var length = maskChars.length;\n            var idx = 0;\n            var chr;\n            var rule;\n\n            var emptyMask = \"\";\n            var promptChar = this.options.promptChar;\n            var numberFormat = kendo.getCulture(this.options.culture).numberFormat;\n            var rules = this._rules;\n\n            for (; idx < length; idx++) {\n                chr = maskChars[idx];\n                rule = rules[chr];\n\n                if (rule) {\n                    tokens[tokenIdx] = rule;\n                    emptyMask += promptChar;\n                    tokenIdx += 1;\n                } else {\n                    if (chr === \".\" || chr === \",\") {\n                        chr = numberFormat[chr];\n                    } else if (chr === \"$\") {\n                        chr = numberFormat.currency.symbol;\n                    } else if (chr === \"\\\\\") {\n                        idx += 1;\n                        chr = maskChars[idx];\n                    }\n\n                    chr = chr.split(\"\");\n\n                    for (var i = 0, l = chr.length; i < l; i++) {\n                        tokens[tokenIdx] = chr[i];\n                        emptyMask += chr[i];\n                        tokenIdx += 1;\n                    }\n                }\n            }\n\n            this.tokens = tokens;\n\n            this._emptyMask = emptyMask;\n            this._maskLength = emptyMask.length;\n        }\n    });\n\n    function escapeRegExp(text) {\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    kendo.cssProperties.registerPrefix(\"MaskedTextBox\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"MaskedTextBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(MaskedTextBox);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}