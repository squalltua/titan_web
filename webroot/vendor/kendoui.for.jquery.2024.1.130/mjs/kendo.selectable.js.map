{"version":3,"file":"kendo.selectable.js","names":["__meta__","id","name","category","depends","advanced","$","undefined$1","kendo","window","Widget","ui","abs","Math","ARIASELECTED","SELECTED","ACTIVE","SELECTABLE","CHANGE","CHANGING","UNSELECT","UNSELECTING","INPUTSELECTOR_ICONSSELECTOR_FONT","INPUTSELECTOR_ICONSSELECTOR_SVG","replaceAll","INPUTSELECTOR_SVG_PARTS","split","map","selector","join","INPUTSELECTOR","msie","support","browser","supportEventDelegation","extend","on","find","trigger","end","off","Selectable","init","element","options","multiple","dragToSelect","that","this","fn","call","_marquee","_lastActive","addClass","relatedTarget","userEvents","UserEvents","global","allowSelection","filter","tap","_tap","bind","touchAction","_hold","_start","_move","_end","_select","events","inputSelectors","holdToDrag","noop","ignoreOverlapped","addIdToRanges","toggleable","_isElement","target","idx","elements","length","result","e","selected","ctrlKey","event","metaKey","shiftKey","selectedClass","whichCode","which","buttonCode","button","closest","_allowSelection","originalEvent","hasClass","add","_lastRange","compareElements","selectRange","_firstSelectee","_notify","_unselect","value","clear","_downTarget","_activated","_isActivated","currentElement","cancel","useAllItems","_items","sender","capture","appendTo","document","body","css","left","x","client","top","y","width","height","_selectElement","position","startLocation","location","initialDelta","_invalidateSelectables","preventDefault","rangeSelectedAttr","attr","uid","guid","remove","removeClass","i","_currentlyActive","related","toSelect","items","eq","collision","_collidesWithActiveElement","push","marqueeRect","activeElementRect","activeElements","elemRect","getBoundingClientRect","leftRight","isRtl","tempRect","right","bottom","overlaps","val","selectElement","each","selectedRanges","_","elem","rangeId","mapLocation","selectedSingleItems","toArray","preventNotify","isPrevented","aria","args","removeAttr","_activeElement","is","_allowPreventDefault","resetTouchEvents","start","tmp","continuousItems","inArray","destroy","toCompare","elementPosition","getOffset","_outerWidth","_outerHeight","firstRect","secondRect","parseOptions","selectable","selectableMode","mode","asLowerString","toLowerCase","indexOf","cell","plugin","jQuery","kendo$1"],"sources":["kendo.selectable.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.userevents.js';\n\nvar __meta__ = {\n    id: \"selectable\",\n    name: \"Selectable\",\n    category: \"framework\",\n    depends: [ \"core\", \"userevents\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        abs = Math.abs,\n        ARIASELECTED = \"aria-selected\",\n        SELECTED = \"k-selected\",\n        ACTIVE = \"k-selecting\",\n        SELECTABLE = \"k-selectable\",\n        CHANGE = \"change\",\n        CHANGING = \"changing\",\n        NS = \".kendoSelectable\",\n        UNSELECT = \"unselect\",\n        UNSELECTING = \"k-unselecting\",\n        INPUTSELECTOR_ICONSSELECTOR_FONT = \"span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,.k-icon.k-i-caret-alt-down,.k-icon.k-i-caret-alt-right,.k-icon.k-i-caret-alt-left\",\n        INPUTSELECTOR_ICONSSELECTOR_SVG = INPUTSELECTOR_ICONSSELECTOR_FONT.replaceAll('k-i', 'k-svg-i'),\n        INPUTSELECTOR_SVG_PARTS = INPUTSELECTOR_ICONSSELECTOR_SVG.split(\",\").map((selector) => selector + \" *\").join(\",\"),\n        INPUTSELECTOR = `input,a,textarea,.k-multiselect-wrap,select,button,${INPUTSELECTOR_ICONSSELECTOR_FONT},${INPUTSELECTOR_ICONSSELECTOR_SVG},${INPUTSELECTOR_SVG_PARTS},.k-button>span,.k-button>span *,.k-button>img,label.k-checkbox-label.k-no-text,span.k-numeric-wrap,.k-focusable`,\n        msie = kendo.support.browser.msie,\n        supportEventDelegation = false,\n        extend = $.extend;\n\n        (function($) {\n            (function() {\n                $('<div class=\"parent\"><span></span></div>')\n                .on(\"click\", \">*\", function() {\n                    supportEventDelegation = true;\n                })\n                .find(\"span\")\n                .trigger(\"click\")\n                .end()\n                .off();\n            })();\n        })($);\n\n    var Selectable = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                multiple,\n                dragToSelect;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._marquee = $(\"<div class='k-marquee'><div class='k-marquee-color'></div></div>\");\n            that._lastActive = null;\n            that.element.addClass(SELECTABLE);\n\n            that.relatedTarget = that.options.relatedTarget;\n\n            multiple = that.options.multiple;\n            dragToSelect = that.options.dragToSelect;\n\n            that.userEvents = new kendo.UserEvents(that.element, {\n                global: true,\n                allowSelection: true,\n                filter: (!supportEventDelegation ? \".\" + SELECTABLE + \" \" : \"\") + that.options.filter,\n                tap: that._tap.bind(that),\n                touchAction: multiple ? \"none\" : \"pan-x pan-y\"\n            });\n\n            if (multiple) {\n                if (dragToSelect) {\n                    that.userEvents\n                        .bind(\"hold\", that._hold.bind(that))\n                        .bind(\"start\", that._start.bind(that))\n                        .bind(\"move\", that._move.bind(that))\n                        .bind(\"end\", that._end.bind(that));\n                }\n                that.userEvents\n                   .bind(\"select\", that._select.bind(that));\n            }\n        },\n\n        events: [CHANGE, CHANGING, UNSELECT],\n\n        options: {\n            name: \"Selectable\",\n            filter: \">*\",\n            inputSelectors: INPUTSELECTOR,\n            multiple: false,\n            holdToDrag: false,\n            dragToSelect: true,\n            relatedTarget: $.noop,\n            ignoreOverlapped: false,\n            addIdToRanges: false,\n            toggleable: false,\n        },\n\n        _isElement: function(target) {\n            var elements = this.element;\n            var idx, length = elements.length, result = false;\n\n            target = target[0];\n\n            for (idx = 0; idx < length; idx ++) {\n                if (elements[idx] === target) {\n                    result = true;\n                    break;\n                }\n            }\n\n            return result;\n        },\n\n        _tap: function(e) {\n            var target = $(e.target),\n                that = this,\n                options = that.options,\n                ctrlKey = e.event.ctrlKey || e.event.metaKey,\n                multiple = that.options.multiple,\n                shiftKey = multiple && e.event.shiftKey,\n                selectedClass = that.options.selectedClass || SELECTED,\n                selected,\n                whichCode = e.event.which,\n                buttonCode = e.event.button;\n\n            //in case of hierarchy or right-click\n            if (!that._isElement(target.closest(\".\" + SELECTABLE)) || whichCode && whichCode == 3 || buttonCode && buttonCode == 2) {\n                return;\n            }\n\n            if (!this._allowSelection(e.event.target)) {\n                return;\n            }\n\n            if (that.trigger(CHANGING, { target: target, originalEvent: e.event })) {\n                return;\n            }\n\n            selected = target.hasClass(selectedClass);\n\n            target = target.add(that.relatedTarget(target));\n\n            if (!multiple) {\n                if (selected && ctrlKey) {\n                    that._unselect(target);\n                    that._notify(CHANGE, e);\n                } else if (!selected) {\n                    that.clear();\n                    that.value(target, e);\n                    that._notify(CHANGE, e);\n                }\n            } else {\n                if (shiftKey) {\n                    if (!that._lastRange || !compareElements(that._lastRange, target)) {\n                        that.selectRange(that._firstSelectee(), target, e);\n                        that._notify(CHANGE, e);\n                    }\n                    that._lastRange = target;\n                } else {\n                    that._lastRange = null;\n                    if (selected && (ctrlKey || options.toggleable)) {\n                        that._unselect(target);\n                        that._notify(CHANGE, e);\n                    } else if (ctrlKey || options.toggleable) {\n                        that.value(target, e);\n                        that._notify(CHANGE, e);\n                    } else if (!selected || that.value().length > 1) {\n                        that.clear();\n                        that.value(target, e);\n                        that._notify(CHANGE, e);\n                    }\n\n                    that._lastActive = that._downTarget = target;\n                }\n            }\n        },\n\n        _hold: function(e) {\n            if (this.options.holdToDrag) {\n                // serves as a drag hint to indicate start of selection\n                this._tap(e);\n            }\n\n            this._activated = true;\n        },\n\n        _isActivated: function() {\n            return this.options.holdToDrag ? this._activated : true;\n        },\n\n        _start: function(e) {\n            var that = this,\n                target = $(e.target),\n                selectedClass = that.options.selectedClass || SELECTED,\n                selected = target.hasClass(selectedClass),\n                currentElement,\n                ctrlKey = e.event.ctrlKey || e.event.metaKey;\n\n            if (!that._isActivated() || !this._allowSelection(e.event.target)) {\n                return;\n            }\n\n            if (that.trigger(CHANGING, { target: target, originalEvent: e.event })) {\n                that.userEvents.cancel();\n                return;\n            }\n\n            that._downTarget = target;\n\n            //in case of hierarchy\n            if (!that._isElement(target.closest(\".\" + SELECTABLE))) {\n                that.userEvents.cancel();\n                return;\n            }\n\n            if (that.options.useAllItems) {\n                that._items = that.element.find(that.options.filter);\n            } else {\n                currentElement = target.closest(that.element);\n                that._items = currentElement.find(that.options.filter);\n            }\n\n            e.sender.capture();\n\n            that._marquee\n                .appendTo(document.body)\n                .css({\n                    left: e.x.client + 1,\n                    top: e.y.client + 1,\n                    width: 0,\n                    height: 0\n                });\n\n            if (!ctrlKey) {\n                that.clear();\n            }\n\n            target = target.add(that.relatedTarget(target));\n            if (selected) {\n                that._selectElement(target, true);\n                if (ctrlKey) {\n                    target.addClass(UNSELECTING);\n                }\n            }\n        },\n\n        _move: function(e) {\n            var that = this,\n                position = {\n                    left: e.x.startLocation > e.x.location ? e.x.location : e.x.startLocation,\n                    top: e.y.startLocation > e.y.location ? e.y.location : e.y.startLocation,\n                    width: abs(e.x.initialDelta),\n                    height: abs(e.y.initialDelta)\n                };\n\n            if (!that._isActivated()) {\n                return;\n            }\n\n            that._marquee.css(position);\n\n            that._invalidateSelectables(position, (e.event.ctrlKey || e.event.metaKey));\n\n            e.preventDefault();\n        },\n\n        _end: function(e) {\n            var that = this,\n            rangeSelectedAttr = kendo.attr(\"range-selected\"),\n            uid = kendo.guid();\n\n            if (!that._isActivated()) {\n                return;\n            }\n\n            that._activated = false;\n\n            that._marquee.remove();\n\n            that._unselect(that.element\n                .find(that.options.filter + \".\" + UNSELECTING))\n                .removeClass(UNSELECTING);\n\n\n            var target = that.element.find(that.options.filter + \".\" + ACTIVE);\n            target = target.add(that.relatedTarget(target));\n\n            if (that.options.addIdToRanges) {\n                for (var i = 0; i < that._currentlyActive.length; i++) {\n                    $(that._currentlyActive[i]).attr(rangeSelectedAttr, uid);\n                }\n            }\n\n            if (!that._lastRange || !compareElements(that._lastRange, target)) {\n                that.value(target, e);\n                that._notify(CHANGE, e);\n            }\n            that._lastRange = target;\n            that._lastActive = that._downTarget;\n            that._items = null;\n        },\n\n        _invalidateSelectables: function(position, ctrlKey) {\n            var idx,\n                length,\n                target = this._downTarget[0],\n                items = this._items,\n                selectedClass = this.options.selectedClass || SELECTED,\n                related,\n                toSelect;\n\n            this._currentlyActive = [];\n\n            for (idx = 0, length = items.length; idx < length; idx ++) {\n                toSelect = items.eq(idx);\n                related = toSelect.add(this.relatedTarget(toSelect));\n\n                if (collision(toSelect, position)) {\n                    if (toSelect.hasClass(selectedClass)) {\n                        if (ctrlKey && target !== toSelect[0]) {\n                            related.removeClass(selectedClass).addClass(UNSELECTING);\n                        }\n                    } else if (!toSelect.hasClass(ACTIVE) && !toSelect.hasClass(UNSELECTING) && !this._collidesWithActiveElement(related, position)) {\n                        related.addClass(ACTIVE);\n                    }\n                    this._currentlyActive.push(related[0]);\n                } else {\n                    if (toSelect.hasClass(ACTIVE)) {\n                        related.removeClass(ACTIVE);\n                    } else if (ctrlKey && toSelect.hasClass(UNSELECTING)) {\n                        related.removeClass(UNSELECTING).addClass(selectedClass);\n                    }\n                }\n            }\n        },\n\n        _collidesWithActiveElement: function(element, marqueeRect) {\n            if (!this.options.ignoreOverlapped) {\n                return false;\n            }\n\n            var activeElements = this._currentlyActive;\n            var elemRect = element[0].getBoundingClientRect();\n            var activeElementRect;\n            var collision = false;\n            var isRtl = kendo.support.isRtl(element);\n            var leftRight = isRtl ? \"right\" : \"left\";\n            var tempRect = {};\n\n            marqueeRect.right = marqueeRect.left + marqueeRect.width;\n            marqueeRect.bottom = marqueeRect.top + marqueeRect.height;\n\n            for (var i = 0; i < activeElements.length; i++) {\n                activeElementRect = activeElements[i].getBoundingClientRect();\n                if (overlaps(elemRect, activeElementRect)) {\n                    tempRect[leftRight] = leftRight === \"left\" ? activeElementRect.right : activeElementRect.left;\n                    elemRect = extend({}, elemRect, tempRect);\n                    if (elemRect.left > elemRect.right) {\n                        return true;\n                    }\n                    collision = !overlaps(elemRect, marqueeRect);\n                }\n            }\n            return collision;\n        },\n\n        value: function(val) {\n            var that = this,\n                selectElement = that._selectElement.bind(that);\n\n            if (val) {\n                val.each(function() {\n                    selectElement(this);\n                });\n\n                return;\n            }\n\n            return that.element.find(that.options.filter + \".\" + (that.options.selectedClass || SELECTED));\n        },\n\n        selectedRanges: function() {\n            var that = this;\n            var rangeSelectedAttr = kendo.attr(\"range-selected\");\n            var map = {};\n\n            that.element.find(\"[\" + rangeSelectedAttr + \"]\").each(function(_, elem) {\n                var rangeId = $(elem).attr(rangeSelectedAttr);\n                var mapLocation = map[rangeId];\n\n                if (!mapLocation) {\n                    mapLocation = map[rangeId] = [];\n                }\n\n                mapLocation.push($(elem));\n            });\n\n            return map;\n        },\n\n        selectedSingleItems: function() {\n            var that = this;\n            var rangeSelectedAttr = kendo.attr(\"range-selected\");\n\n            return that.element.find(that.options.filter + \".\" + (that.options.selectedClass || SELECTED) + \":not([\" + rangeSelectedAttr + \"])\").toArray().map(function(elem) {\n                return $(elem);\n            });\n        },\n\n        _firstSelectee: function() {\n            var that = this,\n                selected;\n\n            if (that._lastActive !== null) {\n                return that._lastActive;\n            }\n\n            selected = that.value();\n            return selected.length > 0 ?\n                    selected[0] :\n                    that.element.find(that.options.filter)[0];\n        },\n\n        _selectElement: function(element, preventNotify) {\n            var toSelect = $(element),\n                selectedClass = this.options.selectedClass || SELECTED,\n                isPrevented = !preventNotify && this._notify(\"select\", { element: element });\n\n            toSelect.removeClass(ACTIVE);\n            if (!isPrevented) {\n                 toSelect.addClass(selectedClass);\n\n                if (this.options.aria) {\n                    toSelect.attr(ARIASELECTED, true);\n                }\n            }\n        },\n\n        _notify: function(name, args) {\n            args = args || { };\n            return this.trigger(name, args);\n        },\n\n        _unselect: function(element) {\n            if (this.trigger(UNSELECT, { element: element })) {\n                return;\n            }\n\n            var rangeSelectedAttr = kendo.attr(\"range-selected\");\n\n            element.removeClass(this.options.selectedClass || SELECTED).removeAttr(rangeSelectedAttr);\n\n            if (this.options.aria) {\n                element.attr(ARIASELECTED, false);\n            }\n\n            return element;\n        },\n\n        _select: function(e) {\n            if (this._allowSelection(e.event.target)) {\n                if (!msie || (msie && !$(kendo._activeElement()).is(this.options.inputSelectors))) {\n                    if (this._allowPreventDefault(e.event.target)) {\n                        e.preventDefault();\n                    }\n                }\n            }\n        },\n\n        _allowPreventDefault: function(target) {\n            var disallowedSelectors = \".k-table-td\";\n            // Required for the paste event in the Grid to work in Chrome.\n            return !$(target).is(disallowedSelectors);\n        },\n\n        _allowSelection: function(target) {\n            if ($(target).is(this.options.inputSelectors)) {\n                this.userEvents.cancel();\n                this._downTarget = null;\n                return false;\n            }\n\n            return true;\n        },\n\n        resetTouchEvents: function() {\n            this.userEvents.cancel();\n        },\n\n        clear: function() {\n            var items = this.element.find(this.options.filter + \".\" + (this.options.selectedClass || SELECTED));\n            this._unselect(items);\n        },\n\n        selectRange: function(start, end) {\n            var that = this,\n                idx,\n                tmp,\n                items;\n\n            that.clear();\n\n            if (that.element.length > 1) {\n                items = that.options.continuousItems();\n            }\n\n            if (!items || !items.length) {\n                items = that.element.find(that.options.filter);\n            }\n\n            start = $.inArray($(start)[0], items);\n            end = $.inArray($(end)[0], items);\n\n            if (start > end) {\n                tmp = start;\n                start = end;\n                end = tmp;\n            }\n\n            if (!that.options.useAllItems) {\n                end += that.element.length - 1;\n            }\n\n            for (idx = start; idx <= end; idx ++ ) {\n                that._selectElement(items[idx], true);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.element.off(NS);\n\n            that.userEvents.destroy();\n\n            that._marquee = that._lastActive = that.element = that.userEvents = null;\n        }\n    });\n\n    Selectable.parseOptions = function(selectable) {\n        var selectableMode = selectable.mode || selectable;\n        var asLowerString = typeof selectableMode === \"string\" && selectableMode.toLowerCase();\n        return {\n            multiple: asLowerString && asLowerString.indexOf(\"multiple\") > -1,\n            cell: asLowerString && asLowerString.indexOf(\"cell\") > -1\n        };\n    };\n\n    function compareElements(element, toCompare) {\n\n        if (element.length !== toCompare.length) {\n            return false;\n        }\n\n        for (var i = 0; i < element.length; i++) {\n            if (element[i] !== toCompare[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function collision(element, position) {\n        if (!element.is(\":visible\")) {\n            return false;\n        }\n\n        var elementPosition = kendo.getOffset(element),\n            right = position.left + position.width,\n            bottom = position.top + position.height;\n\n        elementPosition.right = elementPosition.left + kendo._outerWidth(element);\n        elementPosition.bottom = elementPosition.top + kendo._outerHeight(element);\n\n        return !(elementPosition.left > right ||\n            elementPosition.right < position.left ||\n            elementPosition.top > bottom ||\n            elementPosition.bottom < position.top);\n    }\n\n    function overlaps(firstRect, secondRect) {\n        return !(firstRect.right <= secondRect.left ||\n            firstRect.left >= secondRect.right ||\n            firstRect.bottom <= secondRect.top ||\n            firstRect.top >= secondRect.bottom);\n    }\n\n    kendo.ui.plugin(Selectable);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}