{"version":3,"file":"kendo.pivotgrid.js","names":["Navigation","constructor","options","this","tabIndex","root","eventHandlers","update","elements","Array","from","querySelectorAll","selectors","join","first","querySelector","last","all","length","current","find","el","matches","start","eventType","mouseEvents","ev","target","Element","closest","call","undefined","addEventListener","keyboardEvents","key","stop","removeEventListener","focusElement","element","previous","removeAttribute","classList","remove","setAttribute","String","focus","preventScroll","scrollableValuesSel","scrollableColumnHeaderSel","scrollableRowHeaderSel","emptyCellSel","tableSel","cellSel","scrollables","selectors$1","onEnter","nav","icon","index","indexOf","click","preventDefault","tryScrollLeft","scrollable","elToScroll","offsetLeft","scrollLeft","tryScrollRight","offsetWidth","tryScrollUp","scrollTop","offsetTop","tryScrollDown","offsetHeight","scrollTo","scrollFunc","forEach","scroll","tableMap","table","rows","colsCount","cells","map","c","colSpan","reduce","prev","cur","row","r","curColSpan","colSp","rowSp","rowSpan","ind","findIndex","val","curInd","navigationMap","columnHeader","rowHeader","values","emptyCell","emptyCellRow","fill","i","push","concat","getTargetPos","ctrlKey","metaKey","cellAt","pos","targetPos","nextPos","next","keyboardEvents$1","keydown","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","o","_target","_ev","nextElementSibling","HTMLElement","parentNode","setTimeout","confHeader","Enter","Space","Home","ro","Boolean","x","End","mouseEvents$1","hasAttribute","PivotGridNavigation","super","arguments","onEscape","pivot","previousElementSibling","confButton","pivotCell","navigate","dir","onDelete","Tab","shiftKey","Escape","Delete","Backspace","ConfiguratorNavigation","__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","ui","encode","htmlEncode","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","common","pivotgrid","fetchDiscover","normalizeFilter","Query","normalizeSort","toString","identity","extend","keys","isFunction","fetchData","createLocalDataState","createDataTree","sumAggregate","averageAggregate","minAggregate","maxAggregate","createDataState","toColumns","toRows","toTree","toData","headersReducer","RESIZE","READ","CHANGE","ERROR","PROGRESS","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","headerClass","colspan","rowspan","expandable","iconClass","role","expanded","COLLAPSEMEMBER","STATE_EXPANDED_ICONNAME","STATE_EXPANDED_SELECTOR","STATE_COLLAPSED_ICONNAME","HEADER_TEMPLATE","member","caption","PIVOTGRID_TREND_ICONS_MAP","KPISTATUS_TEMPLATE","dataItem","value","KPITREND_TEMPLATE","DATACELL_TEMPLATE","fmtValue","tableStyles","normalizeMeasures","measure","descriptor","descriptors","d","type","normalizeMembers","expand","slice","normalizeName","accumulateMembers","accumulator","rootTuple","tuple","level","idx","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","JSON","parse","descriptorsForMembers","axis","measures","firstTuple","tupleMembers","found","j","getName","hierarchy","addMissingPathMembers","tupletoSearch","findExistingTuple","tupleToDescriptors","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","isNumber","isNaN","isDate","getTime","loadLocalData","params","deferred","that","originalData","reader","_pristineData","columnSettings","_createSettings","columnAxes","rowSettings","rowAxes","stateArgs","dataTree","dataField","columnsData","filter","item","reverse","fields","sort","flattenSortDescriptors","_saveState","trigger","resolve","split","pop","createLocalMeasure","format","measureMap","sum","average","min","max","bind","uniqueName","functions","count","PivotCubeBuilder","init","dimensions","_normalizeDescriptors","keyField","_rootTuples","rootNames","measureAggregators","parts","aggregatorsLength","dimensionsSchema","measureIdx","rootNamesLength","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","flattenTree","mapItem","sortedMaps","sortTree","directParentName","fillSortTree","sortItemsTree","create","flatColumns","_expandedTuples","currentKeys","memberInfo","expandedNames","accumulatorKeys","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","_asTuples","rootInfo","expandedInfo","apply","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","column","columnKey","columnMeasureNames","rowMeasureNamesLength","rowMeasureNames","rowLength","columnLength","items","_addData","resultFunc","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","defaultAggregate","measureDescriptors","aggregators","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rowValue","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","aggregatedData","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","axes","PivotTransport","transport","discover","read","destroy","success","catalog","connection","cube","PivotDataSourceV2","schema","cubes","catalogs","hierarchies","levels","cubeSchema","_cubeSchema","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","callback","_data","_query","done","settings","dimensionsSettings","displayValueFunc","sortValueFunc","displayValue","sortValue","defaultHierarchy","restoreMeasure","memberType","distinct","levelUniqueName","childrenCardinality","isPrevented","_params","Deferred","newDataState","response","_preventRefresh","error","err","promise","measureAxes","schemaMeasures","command","restrictions","catalogName","cubeName","schemaKPIs","schemaDimensions","schemaHierarchies","dimensionName","dimensionUniqueName","schemaLevels","hierarchyName","hierarchyUniqueName","schemaCubes","schemaCatalogs","schemaMembers","_columnTuples","_rowTuples","_view","PivotDataSource","cubeBuilder","_skipNormalize","_axes","memberUniqueName","schemaData","dataGetter","_rawData","treeOp","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","_descriptorsForAxis","_process","e","page","pageSize","group","_updateLocalData","expandColumn","expandRow","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","sourceTuples","targetTuples","columnIdx","dataIdx","targetColumnsLength","membersCount","measuresLength","tupleIndex","adjustDataByColumn","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","source","isRoot","sourceAxes","startIndex","columnMeasures","rowMeasures","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","rowIndex","dataIndex","calcIndex","indices","buildDataIndices","Math","prepareDataOnColumns","parseSource","mergedColumns","mergeTuples","targetIndex","sourceIndex","parseInt","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toAdd","toJSON","drop","splice","_observe","_ranges","_addRange","_total","_pristineTotal","memberIdx","roots","indexes","tupleName","_addMissingDataItems","metadata","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","converter","_handleCustomErrors","status","reject","kpis","sortFunction","currentItem","newAxis","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentMember","parentPath","normalizeTupleMeasures","measureIndex","measurePosition","spliceIndex","baseHierarchyPath","memberName","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","crossJoinCommand","tmp","measureNames","rootName","rootLength","l","child","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeOptions","parentTagName","capitalize","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","serializeFilters","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","then","catch","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","transports","xmla","readers","removeExpr","expressions","PivotSettingTarget","addClass","_refreshHandler","refresh","template","actions","enabled","ns","emptyTemplate","_sortable","on","action","attr","hasClass","sortable","sortDirection","currentTarget","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","change","add","move","newIndex","_isKPI","validate","isMeasure","isArray","sortExpressions","_sort","skipExpr","allowUnsort","html","sortIcon","_sortIcon","off","sortExpr","PivotSettingTargetV2","parent","text","navigatable","chip","keyCode","DELETE","BACKSPACE","configuratorNavigation","DOWN","altKey","LEFT","RIGHT","UP","otherTarget","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","PivotConfiguratorButton","_element","_attachEvents","configurator","setOptions","toggle","pivotEl","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_ariaId","guid","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","wrapper","append","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","ariaId","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","_scrollable","button","is","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","autoBind","_aria","_initPivotGridNavigation","notify","height","columnWidth","emptyCellLabel","_windowResizeHandler","navigation","firstCell","_matchAriaAttributes","rowHeaderRows","rowHeaderCols","acc","curr","getAttribute","colHeaderRows","colHeaderCells","valueTableCells","firstColHeadersRow","firstColHeaderRowCellsIds","valueCellsIds","filterAndMap","idParts","cell","cellColIndex","colHeaderCellsIds","headerCellColIndex","headerCellColspan","arr","predicate","mapper","_progressHandler","_errorHandler","_requestStart","_error","_resize","div","scrollbar","style","setProperty","document","createElement","cssText","innerHTML","body","appendChild","scrollWidth","removeChild","columnsHeader","rowsHeader","_wheelScroll","delta","wheelDeltaY","one","css","_progress","progress","contentTable","columnTable","rowTable","width","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","columnTuple","hash","rowTuple","lastFocusedCellID","_activeElement","lastCellIdWithTabIndex","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","plugin","PivotGrid","columnBuilder","rowBuilder","support","isRtl","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","parseJSON","request","childrenLoaded","maxChildren","reorderable","kpiStatusTemplate","kpiTrendTemplate","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","pivotOptions","getIcons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","calculatedWidth","minWidth","ceil","_resetColspan","skipScrollbar","clientHeight","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","y","htmlNode","createMetadata","maxMembers","addColElements","addRowElements","addColumCell","rowEl","rowItem","cellEl","total","headerTemplate","columnHeaderRows","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","parentRow","rowKey","notFirst","collapsed","measureRow","_cell","_content","childRow","childrenLength","allCell","nextMember","cellChildren","memberCollapsed","rootLevelNum","cellIconEl","maxcolSpan","allRow","firstMemberName","tuplePath","hasChild","axisInfo","axisInfoMember","skipChildren","firstEmpty","_buildRow","templateInfo","cellContent","startIdx","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","background","color","contentRows","columnRows","rowRows","_freezePane","colSplit","rowSplit","workbook","sheets","freezePane","PivotExcelMixin","proto","excel","saveAsExcel","proxyURL","fileName","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","prototype","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","jQuery","kendo$1"],"sources":["kendo.pivotgrid.js"],"mappings":"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","sourcesContent":["import './kendo.pivot.common.js';\nimport './kendo.dom.js';\nimport './kendo.data.js';\nimport './kendo.icons.js';\n\nclass Navigation {\n    constructor(options) {\n        this.tabIndex = 0;\n        this.root = null;\n        this.eventHandlers = {};\n        this.update = () => { };\n        this.tabIndex = options.tabIndex;\n    }\n    get elements() {\n        return this.root ? Array.from(this.root.querySelectorAll(this.selectors.join(','))) : [];\n    }\n    get first() {\n        return (this.root && this.root.querySelector(this.selectors.join(','))) || null;\n    }\n    get last() {\n        const all = this.elements;\n        return all[all.length - 1] || null;\n    }\n    get current() {\n        return this.elements.find(el => el.matches(':focus'));\n    }\n    start(root) {\n        this.root = root;\n        for (const eventType in this.mouseEvents) {\n            if (this.mouseEvents[eventType]) {\n                this.eventHandlers[eventType] = (ev => {\n                    const target = ev.target instanceof Element && ev.target.closest(this.selectors.join(','));\n                    if (target) {\n                        this.mouseEvents[eventType].call(undefined, target, this, ev);\n                    }\n                });\n                root.addEventListener(eventType, this.eventHandlers[eventType]);\n            }\n        }\n        for (const eventType in this.keyboardEvents) {\n            if (this.keyboardEvents[eventType]) {\n                this.eventHandlers[eventType] = (ev => {\n                    const target = ev.target instanceof Element && ev.target.closest(this.selectors.join(','));\n                    const key = ev.key === ' ' ? 'Space' : ev.key;\n                    if (target && this.keyboardEvents[eventType][key]) {\n                        this.keyboardEvents[eventType][key].call(undefined, target, this, ev);\n                    }\n                });\n                root.addEventListener(eventType, this.eventHandlers[eventType]);\n            }\n        }\n    }\n    stop() {\n        if (this.root) {\n            for (const eventType in this.eventHandlers) {\n                if (this.eventHandlers[eventType]) {\n                    this.root.removeEventListener(eventType, this.eventHandlers[eventType]);\n                }\n            }\n        }\n        this.root = null;\n    }\n    focusElement(element, previous) {\n        if (element) {\n            if (previous) {\n                previous.removeAttribute('tabindex');\n                previous.classList.remove('k-focus');\n            }\n            element.setAttribute('tabindex', String(this.tabIndex));\n            element.focus({ preventScroll: true });\n        }\n    }\n}\n\nconst scrollableValuesSel = '.k-pivotgrid .k-pivotgrid-values';\nconst scrollableColumnHeaderSel = '.k-pivotgrid .k-pivotgrid-column-headers';\nconst scrollableRowHeaderSel = '.k-pivotgrid .k-pivotgrid-row-headers';\nconst emptyCellSel = '.k-pivotgrid > .k-pivotgrid-empty-cell';\nconst tableSel = 'table.k-pivotgrid-table';\nconst cellSel = '.k-pivotgrid-cell';\nconst scrollables = [scrollableValuesSel, scrollableColumnHeaderSel, scrollableRowHeaderSel].join(',');\nconst selectors$1 = [\n    emptyCellSel,\n    [scrollableColumnHeaderSel, tableSel, cellSel].join(' '),\n    [scrollableRowHeaderSel, tableSel, cellSel].join(' '),\n    [scrollableValuesSel, tableSel, cellSel].join(' ')\n];\nconst onEnter = (target, nav, ev) => {\n    const icon = target.querySelector('.k-icon, .k-svg-icon');\n    if (icon) {\n        const index = nav.elements.indexOf(target);\n        nav.update = () => {\n            nav.focusElement(nav.elements[index], null);\n            nav.update = () => { };\n        };\n        icon.click();\n        ev.preventDefault();\n    }\n};\nconst tryScrollLeft = (target, scrollable, elToScroll) => {\n    if (target.offsetLeft < scrollable.scrollLeft) {\n        elToScroll.scrollLeft = target.offsetLeft;\n    }\n};\nconst tryScrollRight = (target, scrollable, elToScroll) => {\n    if (target.offsetLeft + target.offsetWidth > scrollable.scrollLeft + scrollable.offsetWidth &&\n        target.offsetWidth < scrollable.offsetWidth) {\n        elToScroll.scrollLeft = target.offsetLeft + target.offsetWidth - scrollable.offsetWidth;\n    }\n};\nconst tryScrollUp = (target, scrollable, elToScroll) => {\n    if (scrollable.scrollTop && target.offsetTop < scrollable.scrollTop) {\n        elToScroll.scrollTop = target.offsetTop;\n    }\n};\nconst tryScrollDown = (target, scrollable, elToScroll) => {\n    if (target.offsetTop + target.offsetHeight > scrollable.scrollTop + scrollable.offsetHeight &&\n        target.offsetHeight < scrollable.offsetHeight) {\n        elToScroll.scrollTop = target.offsetTop + target.offsetHeight - scrollable.offsetHeight;\n    }\n};\nconst scrollTo = (target, root, scrollFunc) => {\n    const elToScroll = root.querySelector(scrollableValuesSel);\n    const scrollable = target && target.closest(scrollables);\n    if (!elToScroll || !scrollable || !target) {\n        return;\n    }\n    scrollFunc.forEach(scroll => scroll(target, scrollable, elToScroll));\n};\nconst tableMap = (table) => {\n    const rows = Array.from(table.rows);\n    const colsCount = Array.from((rows && rows[0] && rows[0].cells) || [])\n        .map(c => c.colSpan)\n        .reduce((prev, cur) => prev + cur, 0);\n    const map = rows.map(() => new Array(colsCount));\n    rows.forEach((row, r) => {\n        let curColSpan = 0;\n        Array.from(row.cells).forEach((c) => {\n            for (let colSp = 0; colSp < c.colSpan; colSp++) {\n                for (let rowSp = 0; rowSp < c.rowSpan; rowSp++) {\n                    const ind = map[r + rowSp].findIndex((val, curInd) => curInd >= curColSpan && !val);\n                    map[r + rowSp][ind] = c;\n                }\n                curColSpan++;\n            }\n        });\n    });\n    return map;\n};\nconst navigationMap = (root) => {\n    const columnHeader = tableMap(root.querySelector([scrollableColumnHeaderSel, tableSel].join(' ')));\n    const rowHeader = tableMap(root.querySelector([scrollableRowHeaderSel, tableSel].join(' ')));\n    const values = tableMap(root.querySelector([scrollableValuesSel, tableSel].join(' ')));\n    const emptyCell = root.querySelector(emptyCellSel);\n    const emptyCellRow = new Array(rowHeader[0].length).fill(emptyCell);\n    const map = [];\n    for (let i = 0; i < columnHeader.length; i++) {\n        map.push(emptyCellRow.concat(columnHeader[i]));\n    }\n    for (let i = 0; i < rowHeader.length; i++) {\n        map.push(rowHeader[i].concat(values[i]));\n    }\n    return map;\n};\nconst getTargetPos = (map, target) => {\n    for (let r = 0; r < map.length; r++) {\n        for (let c = 0; c < map[r].length; c++) {\n            if (map[r][c] === target) {\n                return [r, c];\n            }\n        }\n    }\n    return [-1, -1];\n};\nconst ctrlKey = (ev) => ev.ctrlKey || ev.metaKey;\nconst cellAt = (root, target, pos) => {\n    const map = navigationMap(root);\n    let targetPos = getTargetPos(map, target);\n    let nextPos = [targetPos[0] + pos[0], targetPos[1] + pos[1]];\n    let next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n    while (next && next === target) {\n        nextPos = [nextPos[0] + pos[0], nextPos[1] + pos[1]];\n        next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n    }\n    return next;\n};\nconst keyboardEvents$1 = {\n    keydown: {\n        ArrowLeft: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [0, -1]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n        },\n        ArrowRight: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [0, 1]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollDown, tryScrollUp]);\n        },\n        ArrowUp: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [-1, 0]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n        },\n        ArrowDown: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [1, 0]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollUp, tryScrollDown]);\n        },\n        o: (_target, nav, _ev) => {\n            if (!nav.root) {\n                return;\n            }\n            // FIX: ADDED manually to fix an issue where depending on the order of the config element and button\n            // you either can open the configurator with Ctrl+O, or you can close the configurator with ESC\n            let next = nav.root.nextElementSibling;\n            if (!(next && next instanceof HTMLElement)) {\n                return;\n            }\n\n            if (!next.matches('div.k-pivotgrid-configurator-button')) {\n                next = next.nextElementSibling;\n            }\n\n            if (next && next instanceof HTMLElement && next.matches('div.k-pivotgrid-configurator-button')) {\n                if (!nav.root.parentNode || nav.root.parentNode.querySelector(\".k-pivotgrid-configurator.k-hidden\")) {\n                    next.click();\n                }\n\n                setTimeout(() => {\n                    if (nav.root.parentNode) {\n                        const confHeader = nav.root.parentNode.querySelector('.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview');\n                        if (confHeader instanceof HTMLElement) {\n                            confHeader.setAttribute('tabindex', String(nav.tabIndex));\n                            confHeader.focus();\n                        }\n                    }\n                }, 0);\n            }\n        },\n        Enter: onEnter,\n        Space: onEnter,\n        Home: (target, nav, ev) => {\n            const map = navigationMap(nav.root);\n            const ctrl = ctrlKey(ev);\n            let row = ctrl ? map[0] : (map.find(ro => Boolean(ro.find(x => x === target))) || []);\n            let next = row[0];\n            if (next) {\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n                ev.preventDefault();\n            }\n        },\n        End: (target, nav, ev) => {\n            const map = navigationMap(nav.root);\n            const ctrl = ctrlKey(ev);\n            let row = ctrl ? map[map.length - 1] : (map.find(ro => Boolean(ro.find(x => x === target))) || []);\n            let next = row && row[row.length - 1] || null;\n            if (next) {\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollUp, tryScrollDown]);\n                ev.preventDefault();\n            }\n        }\n    }\n};\nconst mouseEvents$1 = {\n    click: (target, nav) => {\n        if (target && target instanceof HTMLElement) {\n            const prev = nav.elements.find(c => c.hasAttribute('tabindex')) || null;\n            nav.focusElement(target, prev);\n        }\n    }\n};\n/**\n * The PivotGrid keyboard navigation functionality.\n *\n * Usage:\n *\n * On Initialize\n * const navigation = new PivotGridNavigation({ tabindex: 0 });\n *\n * Turn on\n * navigation.start(rootDomElement);\n *\n * On After Update\n * navigation.update();\n *\n * On Destroy / Turn off\n * navigation.stop();\n */\nclass PivotGridNavigation extends Navigation {\n    constructor() {\n        super(...arguments);\n        this.selectors = selectors$1;\n        this.mouseEvents = mouseEvents$1;\n        this.keyboardEvents = keyboardEvents$1;\n    }\n}\n\nconst selectors = [\n    '.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview',\n    '.k-pivotgrid-configurator-content .k-chip',\n    '.k-pivotgrid-configurator-actions button'\n];\nconst onEscape = (_target, nav, ev) => {\n    if (ev.target instanceof HTMLElement) {\n        if (nav.root) {\n            const pivot = nav.root.previousElementSibling;\n            const confButton = nav.root.nextElementSibling;\n            const pivotCell = Array.from(pivot instanceof HTMLElement ? pivot.querySelectorAll('[tabindex]') : []).find((c) => c.tabIndex >= 0);\n            if (pivotCell instanceof HTMLElement) {\n                pivotCell.focus();\n                if (confButton instanceof HTMLElement) {\n                    confButton.click();\n                }\n            }\n        }\n    }\n};\nconst navigate = (target, nav, ev, dir) => {\n    ev.preventDefault();\n    const all = nav.elements;\n    let index = all.indexOf(target) + dir;\n    if (index < 0) {\n        index = all.length - 1;\n    }\n    nav.focusElement(all[index % all.length], target);\n};\nconst onDelete = (target, nav, ev) => {\n    if (ev.target instanceof HTMLElement) {\n        const deleteButton = ev.target.querySelector('.k-icon.k-i-x-circle, .k-svg-icon.k-svg-i-x-circle');\n        if (deleteButton instanceof HTMLElement) {\n            ev.preventDefault();\n            navigate(target, nav, ev, -1);\n        }\n    }\n};\nconst keyboardEvents = {\n    keydown: {\n        Tab: (target, nav, ev) => {\n            navigate(target, nav, ev, ev.shiftKey ? -1 : 1);\n        },\n        Escape: onEscape,\n        Delete: onDelete,\n        Backspace: onDelete\n    }\n};\nconst mouseEvents = {\n    click: (target, nav) => {\n        if (target && target instanceof HTMLElement) {\n            const prev = nav.elements.find((c) => c.hasAttribute('tabindex')) || null;\n            nav.focusElement(target, prev);\n        }\n    }\n};\n/**\n * The PivotGrid Configurator keyboard navigation functionality.\n *\n * Usage:\n *\n * On Initialize\n * const navigation = new ConfiguratorNavigation({ tabindex: 0 });\n *\n * Turn on\n * navigation.start(rootDomElement);\n *\n * On After Update\n * navigation.update();\n *\n * On Destroy / Turn off\n * navigation.stop();\n */\nclass ConfiguratorNavigation extends Navigation {\n    constructor() {\n        super(...arguments);\n        this.selectors = selectors;\n        this.mouseEvents = mouseEvents;\n        this.keyboardEvents = keyboardEvents;\n    }\n}\n\nvar __meta__ = {\n    id: \"pivotgrid\",\n    name: \"PivotGrid\",\n    category: \"web\",\n    description: \"The PivotGrid widget is a data summarization tool.\",\n    depends: [ \"dom\", \"data\", \"data.xml\", \"sortable\", \"pivot.common\", \"icons\" ],\n    features: [{\n        id: \"pivotgrid-configurator\",\n        name: \"Configurator\",\n        description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n        depends: [ \"pivot.configurator\" ]\n    }, {\n        id: \"pivotgrid-filtering\",\n        name: \"Filtering\",\n        description: \"Support for filtering\",\n        depends: [ \"pivot.fieldmenu\" ]\n    }, {\n        id: \"pivotgrid-excel-export\",\n        name: \"Excel export\",\n        description: \"Export pivot grid data as Excel spreadsheet\",\n        depends: [ \"ooxml\" ]\n    }, {\n        id: \"pivotgrid-pdf-export\",\n        name: \"PDF export\",\n        description: \"Export pivot grid data as PDF\",\n        depends: [ \"pdf\", \"drawing\" ]\n    }, {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Class = kendo.Class,\n        Comparer = kendo.data.Comparer,\n        Widget = ui.Widget,\n        DataSource = kendo.data.DataSource,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        common = window.kendo.pivotgrid.common,\n        fetchDiscover = common.fetchDiscover,\n        normalizeFilter = kendo.data.Query.normalizeFilter,\n        normalizeSort = kendo.data.Query.normalizeSort,\n        toString = {}.toString,\n        identity = function(o) { return o; },\n        map = $.map,\n        extend = $.extend,\n        keys = kendo.keys,\n        isFunction = kendo.isFunction,\n        fetchData = common.fetchData,\n        createLocalDataState = common.createLocalDataState,\n        createDataTree = common.createDataTree,\n        sumAggregate = common.sumAggregate,\n        averageAggregate = common.averageAggregate,\n        minAggregate = common.minAggregate,\n        maxAggregate = common.maxAggregate,\n        createDataState = common.createDataState,\n        toColumns = common.toColumns,\n        toRows = common.toRows,\n        toTree = common.toTree,\n        toData = common.toData,\n        headersReducer = common.headersReducer,\n        RESIZE = \"resize\",\n        READ = \"read\",\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        MEASURES = \"Measures\",\n        STATERESET = \"stateReset\",\n        AUTO = \"auto\",\n        DIV = \"<div></div>\",\n        NS = \".kendoPivotGrid\",\n        ROW_TOTAL_KEY = \"__row_total__\",\n        DATABINDING = \"dataBinding\",\n        DATABOUND = \"dataBound\",\n        EXPANDMEMBER = \"expandMember\",\n        HEADERTEMPLATE = ({ id, key, headerClass, colspan, rowspan, expandable, iconClass, role, expanded }) => `<th id=\"${id}\" role=\"${role}\" ${expandable ? `aria-expanded=\"${expanded}\"` : ''}  data-key=\"${encode(key)}\" class=\"k-table-th ${encode(headerClass)}\" ${colspan ? 'colspan=\"' + encode(colspan) + '\"' : ''} ${rowspan ? 'rowspan=\"' + encode(rowspan) + '\"' : ''}>` +\n                                    `${expandable ? kendo.ui.icon($('<span role=\"presentation\" class=\"k-pivotgrid-toggle\"></span>'), { icon: `chevron-${encode(iconClass)}` }) : ''}` +\n                                '</th>',\n        COLLAPSEMEMBER = \"collapseMember\",\n        STATE_EXPANDED_ICONNAME = \"caret-alt-down\",\n        STATE_EXPANDED_SELECTOR = `.k-i-${STATE_EXPANDED_ICONNAME},.k-svg-i-${STATE_EXPANDED_ICONNAME}`,\n        STATE_COLLAPSED_ICONNAME = \"caret-alt-right\",\n        HEADER_TEMPLATE = ({ member }) => `<span>${encode(member.caption || member.name)}</span>`,\n        PIVOTGRID_TREND_ICONS_MAP = {\n            \"kpi-trend-decrease\": \"caret-alt-down\",\n            \"kpi-trend-increase\": \"caret-alt-up\",\n            \"kpi-trend-equal\": \"minus\",\n        },\n        KPISTATUS_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: `kpi-status-${dataItem.value > 0 ? \"open\" : dataItem.value < 0 ? \"deny\" : \"hold\"}` }),\n        KPITREND_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: PIVOTGRID_TREND_ICONS_MAP[`kpi-trend-${dataItem.value > 0 ? \"increase\" : dataItem.value < 0 ? \"decrease\" : \"equal\"}`] }),\n        DATACELL_TEMPLATE = ({ dataItem }) => `${dataItem ? encode(dataItem.fmtValue || dataItem.value) || \"&nbsp;\" : \"&nbsp;\"}`,\n        LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                            '<tr>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-rowheaders\"></div>' +\n                                '</td>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-table\"></div>' +\n                                '</td>' +\n                            '</tr>' +\n                        '</table>';\n        var AXIS_ROWS = \"rows\";\n        var AXIS_COLUMNS = \"columns\";\n\n        var tableStyles = {\n            tableRow: \"k-table-row\",\n            header: \"k-header k-table-th\",\n            headerTable: \"k-grid-header-table k-table k-table-md\",\n            table: \"k-table k-table-md\",\n            contentTable: \"k-grid-table k-table k-table-md\",\n            tbody: \"k-table-tbody\",\n            tableCell: \"k-table-td\"\n        };\n\n    function normalizeMeasures(measure) {\n        var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: d };\n            }\n            return $.extend(true, d, { name: d.name, type: d.type });\n        });\n    }\n\n    function normalizeMembers(member) {\n        var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: [d], expand: false };\n            }\n            return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n        });\n    }\n\n    function normalizeName(name) {\n        if (name.indexOf(\" \") !== -1) {\n            name = '[\"' + name + '\"]';\n        }\n\n        return name;\n    }\n\n    function accumulateMembers(accumulator, rootTuple, tuple, level) {\n        var idx, length;\n        var children;\n        var member;\n\n        if (!tuple) {\n            tuple = rootTuple;\n        }\n\n        if (!level) {\n            level = 0;\n        }\n\n        member = tuple.members[level];\n\n        if (!member || member.measure) { //return if no member or measure\n            return;\n        }\n\n        children = member.children;\n        length = children.length;\n\n        if (tuple === rootTuple) {\n            accumulator[kendo.stringify([member.name])] = !!length;\n        } else if (length) {\n            accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n        }\n\n        if (length) {\n            for (idx = 0; idx < length; idx++) {\n                accumulateMembers(accumulator, rootTuple, children[idx], level);\n            }\n        }\n\n        accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n    }\n\n    function descriptorsForAxes(tuples) {\n        var result = {};\n\n        if (tuples.length) {\n            accumulateMembers(result, tuples[0]);\n        }\n\n        var descriptors = [];\n        for (var k in result) {\n            descriptors.push({ name: JSON.parse(k), expand: result[k] });\n        }\n\n        return descriptors;\n    }\n\n    function addMissingPathMembers(members, axis) {\n        var tuples = axis.tuples || [];\n        var firstTuple = tuples[0];\n\n        if (firstTuple && members.length < firstTuple.members.length) {\n            var tupleMembers = firstTuple.members;\n\n            for (var idx = 0; idx < tupleMembers.length; idx++) {\n                if (tupleMembers[idx].measure) {\n                    continue;\n                }\n\n                var found = false;\n                for (var j = 0; j < members.length; j++) {\n                    if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                }\n            }\n        }\n    }\n\n    function tupleToDescriptors(tuple) {\n        var result = [];\n        var members = tuple.members;\n\n        for (var idx = 0; idx < members.length; idx++) {\n            if (members[idx].measure) {\n                continue;\n            }\n\n            //make tuple name an array\n            result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n        }\n\n        return result;\n    }\n\n    function descriptorsForMembers(axis, members, measures) {\n        axis = axis || {};\n\n        addMissingPathMembers(members, axis);\n\n        if (measures.length > 1) {\n            members.push({\n                name: MEASURES,\n                measure: true,\n                children: normalizeMembers(measures)\n            });\n        }\n\n        var tupletoSearch = {\n            members: members\n        };\n\n        if (axis.tuples) {\n            var result = findExistingTuple(axis.tuples, tupletoSearch);\n            if (result.tuple) {\n                members = tupleToDescriptors(result.tuple);\n            }\n        }\n\n        return members;\n    }\n\n    function createAggregateGetter(m) {\n        var measureGetter = kendo.getter(m.field, true);\n        return function(aggregatorContext, state) {\n            return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n        };\n    }\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function getScollWidth() {\n        var scrollbar = 0;\n        var div;\n        if (document && document.createElement) {\n            div = document.createElement('div');\n\n            div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n            div.innerHTML = '&nbsp;';\n            document.body.appendChild(div);\n\n            scrollbar = div.offsetWidth - div.scrollWidth;\n\n            document.body.removeChild(div);\n        }\n\n        return scrollbar;\n    }\n\n    function loadLocalData(data, params, deferred) {\n        var that = this;\n        var originalData = (that.reader.data(data) || []).slice(0);\n        if (originalData && !that._pristineData) {\n            that._pristineData = originalData;\n        }\n        var columnSettings = that._createSettings(params.columnAxes);\n        var rowSettings = that._createSettings(params.rowAxes);\n        var measures = that.measures();\n        var dataTree = createDataTree(originalData, rowSettings, columnSettings, measures, { dataField: \"aggregate\", columnsData: \"columns\" }, that.filter() || []);\n\n        var stateArgs = {\n            dataTree: dataTree,\n            columnSettings: columnSettings,\n            rowSettings: rowSettings,\n            columnAxes: params.columnAxes,\n            rowAxes: params.rowAxes,\n            measures: measures.map(function(item) { return item; }).reverse(),\n            fields: { dataField: \"aggregate\", columnsData: \"columns\" },\n            sort: flattenSortDescriptors(params.sort || [])\n        };\n\n        that._saveState(createLocalDataState(stateArgs));\n        that.trigger(CHANGE);\n        deferred.resolve();\n    }\n\n    function flattenSortDescriptors(descriptors) {\n        var result = [];\n        for (var i = 0; i < descriptors.length; i++) {\n            result.push({\n                dir: descriptors[i].dir,\n                field: descriptors[i].field.split(\".\").pop()\n            });\n        }\n        return result;\n    }\n\n    function createLocalMeasure(field, key, format, aggregate) {\n        var formatFunc = function(value) { return kendo.format(this.format, value); };\n        var measureMap = {\n            \"sum\": sumAggregate,\n            \"average\": averageAggregate,\n            \"min\": minAggregate,\n            \"max\": maxAggregate,\n        };\n        var valueFunc = function(item) { return item[this.field]; };\n        var measure = {\n                value: valueFunc.bind({ field: field }),\n                aggregate: measureMap[aggregate],\n                caption: key,\n                uniqueName: key,\n                type: 2,\n                name: [key]\n            };\n        if (format) {\n            measure.aggregate.format = formatFunc.bind({ format: format });\n        }\n\n        return measure;\n    }\n\n    function getIcons(sortIcon, options, pivotOptions) {\n        var sortable = options.sortable,\n            filterable = options.filterable,\n            reorderable = pivotOptions.reorderable,\n            result = \"\";\n\n        if (sortable) {\n            result += sortIcon ? `<span class=\"k-chip-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n        }\n\n        if (filterable || sortable) {\n            result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n        }\n        if (reorderable) {\n            result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n        }\n\n        return result;\n    }\n\n    var functions = {\n        sum: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(value, state) {\n            return (state.accumulator || 0) + 1;\n        },\n        average: {\n            aggregate: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (state.count === undefined$1) {\n                    state.count = 0;\n                }\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                if (isNumber(value)) {\n                    state.count++;\n                }\n\n                return accumulator;\n            },\n            result: function(state) {\n                var accumulator = state.accumulator;\n\n                if (isNumber(accumulator)) {\n                    accumulator = accumulator / state.count;\n                }\n\n                return accumulator;\n            }\n        },\n        max: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    var PivotCubeBuilder = Class.extend({\n        init: function(options) {\n            this.options = extend({}, this.options, options);\n            this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n            this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n        },\n\n        _normalizeDescriptors: function(keyField, descriptors) {\n            descriptors = descriptors || {};\n            var fields = {};\n            var field;\n\n            if (toString.call(descriptors) === \"[object Array]\") {\n                for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                    field = descriptors[idx];\n                    if (typeof field === \"string\") {\n                        fields[field] = {};\n                    } else if (field[keyField]) {\n                        fields[field[keyField]] = field;\n                    }\n                }\n                descriptors = fields;\n            }\n\n            return descriptors;\n        },\n\n        _rootTuples: function(rootNames, measureAggregators) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var root, name, parts;\n            var measureIdx = 0;\n            var idx;\n\n            var rootNamesLength = rootNames.length;\n            var result = [];\n            var keys = [];\n\n            if (rootNamesLength || measureAggregators.length) {\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                    root = { members: [] };\n\n                    for (idx = 0; idx < rootNamesLength; idx++) {\n                        name = rootNames[idx];\n                        parts = name.split(\"&\");\n\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                            name: name,\n                            levelName: name,\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: parts.length > 1 ? parts[0] : undefined$1,\n                            hierarchy: name\n                        };\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (measureAggregators[measureIdx]).caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: false,\n                            parentName: undefined$1,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    result[result.length] = root;\n                }\n\n                keys.push(ROW_TOTAL_KEY);\n            }\n\n            return {\n                keys: keys,\n                tuples: result\n            };\n        },\n\n        _sortMap: function(map, sortDescriptors) {\n            var sortedMaps = [];\n            var sortTree = [];\n            var flattenTree = [];\n            var mapItem;\n            var key;\n\n            for (key in map) {\n                if (!map[key].directParentName) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            //if there are no root this means that something is expanding\n            //and we should only sort that part of the tree\n            if (!sortTree.length) {\n                for (key in map) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            fillSortTree(sortTree, map);\n\n            // fill tree recursive\n            for (var i = 0; i < sortDescriptors.length; i++) {\n                sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n            }\n\n            flattenTree = flatColumns(sortTree);\n\n            //we need to flatten the structure so the tuples can build correctly\n            for (var j = 0; j < flattenTree.length; j++) {\n                mapItem = map[flattenTree[j].name];\n                mapItem.index = j;\n                sortedMaps[j] = mapItem;\n            }\n\n            return sortedMaps;\n        },\n\n        _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var measureIdx;\n            var tuple;\n\n            var key;\n            var mapItem;\n            var current;\n            var currentKeys;\n            var accumulator = [];\n            var accumulatorKeys = [];\n            var memberInfo;\n\n            var expandedNames;\n            var parts;\n            var name;\n            var idx;\n\n            if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                map = this._sortMap(map, sortDescriptors);\n            }\n\n            for (key in map) {\n                mapItem = map[key];\n                memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                current = accumulator[memberInfo.index] || [];\n                currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                expandedNames = memberInfo.member.names;\n\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                    tuple = { members: [] };\n                    for (idx = 0; idx < expandedNames.length; idx++) {\n                        if (idx === memberInfo.member.expandedIdx) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: mapItem.value,\n                                name: mapItem.name,\n                                hasChildren: false,\n                                levelNum: 1,\n                                levelName: mapItem.parentName + mapItem.name,\n                                parentName: mapItem.parentName,\n                                hierarchy: mapItem.parentName + mapItem.name\n                            };\n\n                            if (measureIdx === 0) {\n                                currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                            }\n                        } else {\n                            name = expandedNames[idx];\n                            parts = name.split(\"&\");\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                hierarchy: name\n                            };\n                        }\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        tuple.members[tuple.members.length] = {\n                            children: [],\n                            caption: measureAggregators[measureIdx].caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: undefined$1,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    current[current.length] = tuple;\n                }\n\n                accumulator[memberInfo.index] = current;\n                accumulatorKeys[memberInfo.index] = currentKeys;\n            }\n\n            return {\n                keys: accumulatorKeys,\n                tuples: accumulator\n            };\n        },\n\n        _findExpandedMember: function(members, parentName) {\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].uniquePath === parentName) {\n                    return {\n                        member: members[idx],\n                        index: idx\n                    };\n                }\n            }\n        },\n\n        _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n            measureAggregators = measureAggregators || [];\n\n            var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n            var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n            return {\n                keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n            };\n        },\n\n        _measuresInfo: function(measures, rowAxis) {\n            var idx = 0;\n            var length = measures && measures.length;\n\n            var aggregateNames = [];\n            var resultFuncs = {};\n            var formats = {};\n\n            var descriptors = (this.measures || {});\n            var measure;\n            var name;\n\n            for (; idx < length; idx++) {\n                name = measures[idx].descriptor.name;\n                measure = descriptors[name] || {};\n\n                aggregateNames.push(name);\n\n                if (measure.result) {\n                    resultFuncs[name] = measure.result;\n                }\n\n                if (measure.format) {\n                    formats[name] = measure.format;\n                }\n            }\n\n            return {\n                names: aggregateNames,\n                formats: formats,\n                resultFuncs: resultFuncs,\n                rowAxis: rowAxis\n            };\n        },\n\n        _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n            var result = [];\n\n            var aggregates;\n            var name, i, j, k, n;\n            var row, column, columnKey;\n\n            var rowMeasureNamesLength = 1;\n            var rowMeasureNames = [];\n            var columnMeasureNames;\n\n            var rowLength = rowKeys.length || 1;\n            var columnLength = columnKeys.length || 1;\n\n            if (measuresInfo.rowAxis) {\n                rowMeasureNames = measuresInfo.names;\n                rowMeasureNamesLength = rowMeasureNames.length;\n            } else {\n                columnMeasureNames = measuresInfo.names;\n            }\n\n            for (i = 0; i < rowLength; i++) {\n                row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                for (n = 0; n < rowMeasureNamesLength; n++) {\n                    if (measuresInfo.rowAxis) {\n                        columnMeasureNames = [rowMeasureNames[n]];\n                    }\n\n                    for (j = 0; j < columnLength; j++) {\n                        columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                        column = row.items[columnKey];\n\n                        if (columnKey === ROW_TOTAL_KEY) {\n                            aggregates = row.aggregates;\n                        } else {\n                            aggregates = column ? column.aggregates : {};\n                        }\n\n                        for (k = 0; k < columnMeasureNames.length; k++) {\n                            name = columnMeasureNames[k];\n                            this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                        }\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        _addData: function(result, value, format, resultFunc) {\n            var fmtValue = \"\";\n            var ordinal;\n\n            if (value) {\n                value = resultFunc ? resultFunc(value) : value.accumulator;\n                fmtValue = format ? kendo.format(format, value) : value;\n            }\n\n            ordinal = result.length;\n\n            result[ordinal] = {\n                ordinal: ordinal,\n                value: value || \"\",\n                fmtValue: fmtValue\n            };\n        },\n\n        _matchDescriptors: function(dataItem, descriptor, getters) {\n            var parts;\n            var parentField;\n            var expectedValue;\n\n            var names = descriptor.names;\n            var idx = descriptor.expandedIdx;\n            var value;\n\n            while (idx > 0) {\n                parts = names[--idx].split(\"&\");\n                if (parts.length > 1) {\n                    parentField = parts[0];\n                    expectedValue = parts[1];\n\n                    value = getters[parentField](dataItem);\n                    value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                    if (value != expectedValue) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n            var result = {};\n            var state;\n            var name;\n\n            for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                name = measureAggregators[measureIdx].descriptor.name;\n                state = totalItem.aggregates[name] || { };\n                state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                result[name] = state;\n            }\n\n            return result;\n        },\n\n        _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n            var value;\n            var descriptor;\n            var column;\n            var totalItem;\n            var key, name, parentName, path;\n            var dataItem = aggregatorContext.dataItem;\n            var idx = 0;\n\n            for (; idx < descriptors.length; idx++) {\n                descriptor = descriptors[idx];\n\n                //checks whether the dataItem is relevant to the descriptors\n                if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                    continue;\n                }\n\n                path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                name = descriptor.names[descriptor.expandedIdx];\n\n\n                value = getters[name](dataItem);\n                value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                parentName = name;\n                name = name + \"&\" + value;\n                key = path + name;\n\n                column = columns[key] || {\n                    index: state.columnIndex,\n                    parentName: parentName,\n                    name: name,\n                    directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                    uniquePath: path + parentName,\n                    childrenMap: {},\n                    value: value\n                };\n\n                if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                    columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                }\n\n                totalItem = rowTotal.items[key] || {\n                    aggregates: {}\n                };\n\n                rowTotal.items[key] = {\n                    index: column.index,\n                    aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                };\n\n                if (updateColumn) {\n                    if (!columns[key]) {\n                        state.columnIndex++;\n                    }\n                    columns[key] = column;\n                }\n            }\n        },\n\n        _measureAggregators: function(options) {\n            var measureDescriptors = options.measures || [];\n            var measures = this.measures || {};\n            var aggregators = [];\n            var descriptor, measure, idx, length;\n            var defaultAggregate, aggregate;\n\n            if (measureDescriptors.length) {\n                for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                    descriptor = measureDescriptors[idx];\n                    measure = measures[descriptor.name];\n                    defaultAggregate = null;\n\n                    if (measure) {\n                        aggregate = measure.aggregate;\n                        if (typeof aggregate === \"string\") {\n                            defaultAggregate = functions[aggregate.toLowerCase()];\n\n                            if (!defaultAggregate) {\n                                throw new Error(\"There is no such aggregate function\");\n                            }\n\n                            measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                            measure.result = defaultAggregate.result;\n                        }\n\n\n                        aggregators.push({\n                            descriptor: descriptor,\n                            caption: measure.caption,\n                            result: measure.result,\n                            aggregator: createAggregateGetter(measure)\n                        });\n                    }\n                }\n            } else {\n                aggregators.push({\n                    descriptor: { name: \"default\" },\n                    caption: \"default\",\n                    aggregator: function() { return 1; }\n                });\n            }\n\n            return aggregators;\n        },\n\n        _buildGetters: function(names) {\n            var result = {};\n            var parts;\n            var name;\n\n            for (var idx = 0; idx < names.length; idx++) {\n                name = names[idx];\n                parts = name.split(\"&\");\n\n                if (parts.length > 1) {\n                    result[parts[0]] = kendo.getter(parts[0], true);\n                } else {\n                    result[name] = kendo.getter(normalizeName(name), true);\n                }\n            }\n\n            return result;\n        },\n\n        _parseDescriptors: function(descriptors) {\n            var parsedDescriptors = parseDescriptors(descriptors);\n            var rootNames = getRootNames(parsedDescriptors.root);\n            var expanded = parsedDescriptors.expanded;\n            var result = [];\n\n            for (var idx = 0; idx < expanded.length; idx++) {\n                result.push(mapNames(expanded[idx].name, rootNames));\n            }\n\n            return {\n                root: rootNames,\n                expanded: result\n            };\n        },\n\n        _filter: function(data, filter) {\n            if (!filter) {\n                return data;\n            }\n\n            var expr;\n            var idx = 0;\n            var filters = filter.filters;\n\n            for (; idx < filters.length; idx++) {\n                expr = filters[idx];\n\n                if (expr.operator === \"in\") {\n                    filters[idx] = this._normalizeFilter(expr);\n                }\n            }\n\n            return new kendo.data.Query(data).filter(filter).data;\n        },\n\n        _normalizeFilter: function(filter) {\n            var value = filter.value.split(\",\");\n            var result = [];\n\n            if (!value.length) {\n                return value;\n            }\n\n            for (var idx = 0; idx < value.length; idx++) {\n                result.push({\n                    field: filter.field,\n                    operator: \"eq\",\n                    value: value[idx]\n                });\n            }\n\n            return {\n                logic: \"or\",\n                filters: result\n            };\n        },\n\n        process: function(data, options) {\n            data = data || [];\n            options = options || {};\n\n            data = this._filter(data, options.filter);\n\n            var measures = options.measures || [];\n\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n\n            var columnDescriptors = options.columns || [];\n            var rowDescriptors = options.rows || [];\n\n            if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columnDescriptors = rowDescriptors;\n                rowDescriptors = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length) {\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && measures.length) {\n                columnDescriptors = normalizeMembers(options.measures);\n            }\n\n            columnDescriptors = this._parseDescriptors(columnDescriptors);\n            rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n            var aggregatedData = {};\n            var columns = {};\n            var rows = {};\n\n            var rowValue;\n            var state = { columnIndex: 0 };\n\n            var measureAggregators = this._measureAggregators(options);\n\n            var columnGetters = this._buildGetters(columnDescriptors.root);\n            var rowGetters = this._buildGetters(rowDescriptors.root);\n\n            var processed = false;\n\n            var expandedColumns = columnDescriptors.expanded;\n            var expandedRows = rowDescriptors.expanded;\n\n            var dataItem;\n            var aggregatorContext;\n            var hasExpandedRows = expandedRows.length !== 0;\n\n            var rowIdx, rowDescriptor, rowName, rowTotal;\n            var key, path, parentName, value;\n            var columnsInfo, rowsInfo;\n            var length = data.length;\n            var idx = 0;\n\n            if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                processed = true;\n\n                for (idx = 0; idx < length; idx++) {\n                    dataItem = data[idx];\n\n                    aggregatorContext = {\n                        dataItem: dataItem,\n                        index: idx\n                    };\n\n                    rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                        items: {},\n                        aggregates: {}\n                    };\n\n                    this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                    rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                    aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                    for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                        rowDescriptor = expandedRows[rowIdx];\n\n                        if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                            continue;\n                        }\n\n                        path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                        rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                        parentName = rowName;\n\n                        rowValue = rowGetters[rowName](dataItem);\n                        rowValue = rowValue !== undefined$1 ? rowValue.toString() : rowValue;\n\n                        rowName = rowName + \"&\" + rowValue;\n                        key = path + rowName;\n\n                        rows[key] = {\n                            uniquePath: path + parentName,\n                            parentName: parentName,\n                            name: rowName,\n                            value: rowValue\n                        };\n\n                        value = aggregatedData[key] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                        value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                        aggregatedData[key] = value;\n                    }\n                }\n            }\n\n            if (processed && length) {\n                if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                    columnDescriptors = {\n                        root: [],\n                        expanded: []\n                    };\n                }\n\n                columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                columns = columnsInfo.tuples;\n                rows = rowsInfo.tuples;\n\n                aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n            } else {\n                aggregatedData = columns = rows = [];\n            }\n\n            return {\n                axes: {\n                    columns: { tuples: columns },\n                    rows: { tuples: rows }\n                },\n                data: aggregatedData\n            };\n        }\n    });\n\n    var PivotTransport = Class.extend({\n        init: function(options, transport) {\n            this.transport = transport;\n            this.options = transport.options || {};\n\n            if (!this.transport.discover) {\n                if (isFunction(options.discover)) {\n                    this.discover = options.discover;\n                }\n            }\n        },\n        read: function(options) {\n            return this.transport.read(options);\n        },\n        update: function(options) {\n            return this.transport.update(options);\n        },\n        create: function(options) {\n            return this.transport.create(options);\n        },\n        destroy: function(options) {\n            return this.transport.destroy(options);\n        },\n        discover: function(options) {\n            if (this.transport.discover) {\n                return this.transport.discover(options);\n            }\n            options.success({});\n        },\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        }\n    });\n\n    var PivotDataSourceV2 = DataSource.extend({\n        init: function(options) {\n\n            var cube = ((options || {}).schema || {}).cube;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                this.cubeSchema = $.extend(schema, this._cubeSchema(cube));\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                //schema: schema\n            }, options));\n\n            var transportOptions = this.options.transport || {};\n            if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                this._online = true;\n                this.transport = new XmlaTransportV2(transportOptions);\n            } else {\n                this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n            }\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            var measures = this.cubeSchema ? this.cubeSchema.measures() : this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                this._measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        axes: function() {\n            return {\n                columns: normalizeAxis(this.columns()),\n                rows: normalizeAxis(this.rows())\n            };\n        },\n\n        catalog: function(val) {\n            if (val === undefined$1) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        cube: function(val) {\n            if (val === undefined$1) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            if (this._data === undefined$1 || this._data.length === 0) {\n                var fn = function() {\n                    if (isFunction(callback)) {\n                        callback.call(that);\n                    }\n                };\n\n                return this._query().done(fn);\n            }\n        },\n\n        _createSettings: function(axes) {\n            var settings = [];\n            var key;\n            var dimensions = this.cubeSchema.dimensionsSettings();\n            var displayValueFunc = function(item) { return item[this.key]; };\n            var sortValueFunc = function(value) { return value; };\n            for (var i = 0; i < axes.length; i++) {\n                key = axes[i].name[0];\n                settings.push({\n                    key: key,\n                    displayValue: displayValueFunc.bind({ key: key }),\n                    sortValue: sortValueFunc,\n                    caption: (dimensions[key] || {}).caption || key\n                });\n            }\n            return settings;\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensionsSettings: function() {\n                    return cube.dimensions;\n                },\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                restoreMeasure: function(measures, measure) {\n                    for (var i = 0; i < measures.length; i++) {\n                        if (!measures[i].aggregate) {\n                            measures[i].aggregate = measure.aggregate;\n                            measures[i].value = measure.value;\n                            measures[i].caption = measure.caption;\n                            measures[i].uniqueName = measure.uniqueName;\n                            measures[i].type = 2;\n                        }\n                    }\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push(createLocalMeasure(measures[key].field, key, measures[key].format, measures[key].aggregate));\n                    }\n\n                    return result;\n                },\n                memberType: function(name) {\n                    var getter = kendo.getter(normalizeName(name), true);\n                    var data = this.options.data || this._pristineData || [];\n                    if (!data.length) {\n                        return null;\n                    }\n\n                    return typeof getter(data[0]);\n                }.bind(this),\n                members: function(name) {\n                    var data = this.options.data || this._pristineData || [];\n                    var result = [];\n                    var distinct = {};\n                    var getter;\n                    var value;\n                    var idx = 0;\n\n                    if (name.indexOf(\"[(ALL)]\") !== -1) {\n                        return [\n                            {\n                                caption: cube.dimensions[name.split(\".\")[0]].caption || name,\n                                levelUniqueName: name,\n                                name: name,\n                                childrenCardinality: 1,\n                                uniqueName: name\n                            }\n                        ];\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0 || value === false) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value + \"\",\n                                name: value + \"\",\n                                childrenCardinality: 0,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        read: function(data) {\n            var that = this;\n            var isPrevented = that.trigger(REQUESTSTART, { type: READ });\n            var params = that._params(data);\n            var deferred = $.Deferred();\n            if (!isPrevented) {\n                that.trigger(PROGRESS);\n\n                if (that.options.data) {\n                    loadLocalData.call(that, that.options.data, params, deferred);\n                } else if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                    that.transport.read({\n                        data: params,\n                        success: function(newDataState) {\n                            that._saveState(newDataState);\n                            that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                            that.trigger(CHANGE);\n                            if (that._preventRefresh) {\n                                that._preventRefresh = false;\n                            }\n                            deferred.resolve();\n                        },\n                        error: function(err) {\n                            that.trigger(ERROR, { error: err });\n                        }\n                    });\n                } else {\n                    that.transport.read({\n                        success: function(data) {\n                            loadLocalData.call(that, data, params, deferred);\n                        },\n                        error: function(err) {\n                            that.trigger(ERROR, { error: err });\n                        }\n                    });\n                }\n            }\n            return deferred.promise();\n        },\n\n        _params: function(data) {\n            var that = this;\n            var options = DataSource.fn._params.call(that, data);\n\n            options = extend({\n                columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                measuresAxis: that.measuresAxis(),\n                measureAxes: that._measures\n            }, options);\n\n            if ((this.options.type || \"\").toLowerCase() === \"xmla\") {\n                options.connection = that.options.transport.connection;\n            }\n\n            if (options.filter) {\n                options.filter = normalizeFilter(options.filter);\n                options.filter = (options.filter || {}).filters;\n            }\n\n            if (options.sort) {\n                options.sort = normalizeSort(options.sort);\n            }\n\n            return options;\n        },\n\n        discover: function(options) {\n            var that = this,\n                transport = that.transport;\n\n            if (transport.discover) {\n                return transport.discover(options);\n            }\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n            return that.discover(\n                {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }, function(response) {\n                    return response;\n                });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaKPIs\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaDimensions\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n               command: \"schemaHierarchies\",\n               restrictions: {\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube(),\n                   dimensionUniqueName: dimensionName\n               }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaLevels\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube(),\n                    hierarchyUniqueName: hierarchyName\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCubes\",\n                restrictions: {\n                    catalogName: that.transport.catalog()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCatalogs\"\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaMembers\",\n                restrictions: extend({\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube()\n                }, restrictions)\n            }, function(response) {\n                return response;\n            });\n        },\n\n        _saveState: function(state) {\n            var that = this;\n\n            that._columnTuples = state.columns;\n            that._rowTuples = state.rows;\n            that._view = that._data = state.data;\n        },\n\n        columns: function(val) {\n            if (val === undefined$1) {\n                return this._columns;\n            }\n\n            this._columns = normalizeMembers(val);\n            this.read();\n        },\n\n        rows: function(val) {\n            if (val === undefined$1) {\n                return this._rows;\n            }\n\n            this._rows = normalizeMembers(val);\n\n            this.read();\n        },\n\n        measures: function(val) {\n            if (val === undefined$1) {\n                return this._measures;\n            }\n\n            this._measures = normalizeMeasures(val);\n\n            this.read();\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            return options;\n        },\n\n        _query: function(options) {\n            var that = this;\n            var params = extend({}, {\n                sort: that.sort(),\n                measuresAxis: that.measuresAxis(),\n                filter: that.filter()\n            }, options);\n            this._mergeState(params);\n\n            return this.read();\n        },\n    });\n\n    var PivotDataSource = DataSource.extend({\n        init: function(options) {\n            var cube = ((options || {}).schema || {}).cube;\n            var measuresAxis = \"columns\";\n            var measures;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                schema = $.extend(schema, this._cubeSchema(cube));\n                this.cubeBuilder = new PivotCubeBuilder(cube);\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                schema: schema\n            }, options));\n\n            this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            measures = this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n            this._measuresAxis = measuresAxis;\n\n            this._skipNormalize = 0;\n            this._axes = {};\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                hierarchies: function() {\n                    return [];\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push({\n                            name: key,\n                            caption: key,\n                            uniqueName: key,\n                            aggregator: key\n                        });\n                    }\n\n                    return result;\n                },\n                members: function(response, restrictions) {\n                    var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                    var schemaData = this.options.schema.data;\n                    var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                    var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                    var result = [];\n                    var getter;\n                    var value;\n                    var idx = 0;\n                    var distinct = {};\n\n                    if (name) {\n                        name = name.split(\".\")[0];\n                    }\n\n                    if (!restrictions.treeOp) {\n                        result.push({\n                            caption: cube.dimensions[name].caption || name,\n                            childrenCardinality: \"1\",\n                            dimensionUniqueName: name,\n                            hierarchyUniqueName: name,\n                            levelUniqueName: name,\n                            name: name,\n                            uniqueName: name\n                        });\n\n                        return result;\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value,\n                                childrenCardinality: \"0\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: value,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        catalog: function(val) {\n            if (val === undefined$1) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this._axes = {};\n            this.data([]);\n        },\n\n        cube: function(val) {\n            if (val === undefined$1) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._axes = {};\n            this._mergeState({});// clears current state\n            this.data([]);\n        },\n\n        axes: function() {\n            return this._axes;\n        },\n\n        columns: function(val) {\n            if (val === undefined$1) {\n                return this._columns;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._columns = normalizeMembers(val);\n            this.query({\n                columns: val,\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        rows: function(val) {\n            if (val === undefined$1) {\n                return this._rows;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._rows = normalizeMembers(val);\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: val,\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measures: function(val) {\n            if (val === undefined$1) {\n                return this._measures;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: normalizeMeasures(val),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        _expandPath: function(path, axis) {\n            var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n            var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n            var members = normalizeMembers(path);\n            var memberToExpand = getName(members[members.length - 1]);\n\n            this._lastExpanded = origin;\n\n            members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n            for (var idx = 0; idx < members.length; idx++) {\n                var memberName = getName(members[idx]);\n\n                if (memberName === memberToExpand) {\n                    if (members[idx].expand) {\n                        return;\n                    }\n                    members[idx].expand = true;\n                } else {\n                    members[idx].expand = false;\n                }\n            }\n\n            var descriptors = {};\n            descriptors[origin] = members;\n            descriptors[other] = this._descriptorsForAxis(other);\n\n            this._query(descriptors);\n        },\n\n        _descriptorsForAxis: function(axis) {\n            var axes = this.axes();\n            var descriptors = this[axis]() || [];\n\n            if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                descriptors = descriptorsForAxes(axes[axis].tuples || []);\n            }\n            return descriptors;\n        },\n\n        columnsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"columns\");\n        },\n\n        rowsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"rows\");\n        },\n\n        _process: function(data, e) {\n            this._view = data;\n\n            e = e || {};\n            e.items = e.items || this._view;\n\n            this.trigger(CHANGE, e);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            if (!options) {\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n            }\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate(),\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures()\n            }, options));\n        },\n\n        query: function(options) {\n            var state = this._mergeState(options);\n\n            if (this._data.length && this.cubeBuilder) {\n                this._params(state);\n                this._updateLocalData(this._pristineData);\n\n                return $.Deferred().resolve().promise();\n            }\n\n            return this.read(state);\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            if (options !== undefined$1) {\n                this._measures = normalizeMeasures(options.measures);\n\n                if (options.columns) {\n                    options.columns = normalizeMembers(options.columns);\n                } else if (!options.columns) {\n                    this._columns = [];\n                }\n\n                if (options.rows) {\n                    options.rows = normalizeMembers(options.rows);\n                } else if (!options.rows) {\n                    this._rows = [];\n                }\n            }\n            return options;\n        },\n\n        filter: function(val) {\n            if (val === undefined$1) {\n                return this._filter;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n            this._query({ filter: val, page: 1 });\n        },\n\n        expandColumn: function(path) {\n            this._expandPath(path, \"columns\");\n        },\n\n        expandRow: function(path) {\n            this._expandPath(path, \"rows\");\n        },\n\n        success: function(data) {\n            var originalData;\n            if (this.cubeBuilder) {\n                originalData = (this.reader.data(data) || []).slice(0);\n            }\n            DataSource.fn.success.call(this, data);\n            if (originalData) {\n                this._pristineData = originalData;\n            }\n        },\n\n        _processResult: function(data, axes) {\n            if (this.cubeBuilder) {\n                var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                data = processedData.data;\n                axes = processedData.axes;\n            }\n\n            var columnIndexes, rowIndexes;\n            var tuples, resultAxis, measures, axisToSkip;\n            var columnDescriptors = this.columns();\n            var rowDescriptors = this.rows();\n            var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n            if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            this._axes = {\n                columns: normalizeAxis(this._axes.columns),\n                rows: normalizeAxis(this._axes.rows)\n            };\n\n            axes = {\n                columns: normalizeAxis(axes.columns),\n                rows: normalizeAxis(axes.rows)\n            };\n\n            columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n            rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n            if (this._skipNormalize > 0) {\n                this._skipNormalize -= 1;\n            }\n\n            if (!this.cubeBuilder) {\n                data = this._normalizeData({\n                    columnsLength: axes.columns.tuples.length,\n                    rowsLength: axes.rows.tuples.length,\n                    columnIndexes: columnIndexes,\n                    rowIndexes: rowIndexes,\n                    data: data\n                });\n            }\n\n            if (this._lastExpanded == \"rows\") {\n                tuples = axes.columns.tuples;\n                measures = this._columnMeasures();\n                resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"columns\";\n                    axes.columns = resultAxis;\n                    adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.columns.tuples, measures),\n                            rowsLength: axes.rows.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            } else if (this._lastExpanded == \"columns\") {\n                tuples = axes.rows.tuples;\n                measures = this._rowMeasures();\n                resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"rows\";\n                    axes.rows = resultAxis;\n                    adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.rows.tuples, measures),\n                            rowsLength: axes.columns.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            }\n\n            this._lastExpanded = null;\n\n            var result = this._mergeAxes(axes, data, axisToSkip);\n            this._axes = result.axes;\n\n            return result.data;\n        },\n\n        _readData: function(data) {\n            var axes = this.reader.axes(data);\n            var newData = this.reader.data(data);\n\n            if (this.cubeBuilder) {\n                this._rawData = newData;\n            }\n\n            return this._processResult(newData, axes);\n        },\n\n        _createTuple: function(tuple, measure, buildRoot) {\n            var members = tuple.members;\n            var length = members.length;\n            var root = { members: [] };\n            var levelName, levelNum;\n            var name, parentName;\n            var hasChildren;\n            var hierarchy;\n            var caption;\n            var member;\n            var idx = 0;\n\n            if (measure) {\n                length -= 1;\n            }\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum);\n\n                name = member.name;\n                parentName = member.parentName;\n                caption = member.caption || name;\n                hasChildren = member.hasChildren;\n                hierarchy = member.hierarchy;\n                levelName = member.levelName;\n\n                if (buildRoot) {\n                    caption = \"All\";\n                    if (levelNum === 0) {\n                        parentName = member.name;\n                    } else {\n                        levelNum -= 1;\n                    }\n\n                    hasChildren = true;\n                    name = hierarchy = levelName = parentName;\n                }\n\n                root.members.push({\n                    name: name,\n                    children: [],\n                    caption: caption,\n                    levelName: levelName,\n                    levelNum: levelNum.toString(),\n                    hasChildren: hasChildren,\n                    hierarchy: hierarchy,\n                    parentName: !buildRoot ? parentName : \"\"\n                });\n            }\n\n            if (measure) {\n                root.members.push({\n                    name: measure.name,\n                    children: []\n                });\n            }\n\n            return root;\n        },\n\n        _hasRoot: function(target, source, descriptors) {\n            if (source.length) {\n                return findExistingTuple(source, target).tuple;\n            }\n\n            var members = target.members;\n            var member;\n            var descriptor;\n\n            var isRoot = true;\n            var levelNum;\n\n            for (var idx = 0, length = members.length; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum) || 0;\n                descriptor = descriptors[idx];\n\n                if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                    isRoot = false;\n                    break;\n                }\n            }\n\n            return isRoot;\n        },\n\n        _mergeAxes: function(sourceAxes, data, axisToSkip) {\n            var columnMeasures = this._columnMeasures();\n            var rowMeasures = this._rowMeasures();\n            var axes = this.axes();\n            var startIndex, tuples;\n\n            var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n            var newRowsLength = sourceAxes.rows.tuples.length;\n\n            var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n            var newColumnsLength = sourceAxes.columns.tuples.length;\n\n            if (axisToSkip == \"columns\") {\n                newColumnsLength = oldColumnsLength;\n                tuples = sourceAxes.columns.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                data = prepareDataOnColumns(tuples, data);\n            }\n\n            var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n            if (axisToSkip == \"rows\") {\n                newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                tuples = sourceAxes.rows.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                data = prepareDataOnRows(tuples, data);\n            }\n            var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n            axes.columns.tuples = mergedColumns.tuples;\n            axes.rows.tuples = mergedRows.tuples;\n\n            if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                //columns are expanded\n                startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                var offset = oldColumnsLength + newColumnsLength;\n                data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n            } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                //rows are expanded\n                startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n            }\n\n            if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                data = [];\n            }\n\n            return {\n                axes: axes,\n                data: data\n            };\n        },\n\n        _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n            var data = this.data().toJSON();\n            var rowIndex, index, drop = 0, toAdd;\n            var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n            rowsLength = Math.max(rowsLength, 1);\n\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                drop = columnMeasures;\n                offset -= columnMeasures;\n            }\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                index = columnIndex + (rowIndex * offset);\n                toAdd = newData.splice(0, columnsLength);\n                toAdd.splice(0, drop);\n                [].splice.apply(data, [index, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n            var data = this.data().toJSON();\n            var idx, dataIndex, toAdd;\n            var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n            columnsLength = Math.max(columnsLength, 1);\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                rowsLength -= rowMeasures;\n                newData.splice(0, columnsLength * rowMeasures);\n            }\n\n            for (idx = 0; idx < rowsLength; idx++) {\n                toAdd = newData.splice(0, columnsLength);\n                dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _columnMeasures: function() {\n            var measures = this.measures();\n            var columnMeasures = [];\n\n            if (this.measuresAxis() === \"columns\") {\n                if (this.columns().length === 0) {\n                    columnMeasures = measures;\n                } else if (measures.length > 1) {\n                    columnMeasures = measures;\n                }\n            }\n\n            return columnMeasures;\n        },\n\n        _rowMeasures: function() {\n            var measures = this.measures();\n            var rowMeasures = [];\n\n            if (this.measuresAxis() === \"rows\") {\n                if (this.rows().length === 0) {\n                    rowMeasures = measures;\n                } else if (measures.length > 1) {\n                    rowMeasures = measures;\n                }\n            }\n\n            return rowMeasures;\n        },\n\n        _updateLocalData: function(data, state) {\n            if (this.cubeBuilder) {\n                if (state) {\n                    this._requestData = state;\n                }\n                data = this._processResult(data);\n            }\n\n            this._data = this._observe(data);\n\n            this._ranges = [];\n            this._addRange(this._data);\n\n            this._total = this._data.length;\n            this._pristineTotal = this._total;\n            this._process(this._data);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined$1) {\n                this._pristineData = value.slice(0);\n                this._updateLocalData(value, {\n                        columns: this.columns(),\n                        rows: this.rows(),\n                        measures: this.measures()\n                    });\n            } else {\n                return that._data;\n            }\n        },\n\n        _normalizeTuples: function(tuples, source, descriptors, measures) {\n            var length = measures.length || 1;\n            var idx = 0;\n\n            var roots = [];\n            var indexes = {};\n            var measureIdx = 0;\n            var tuple, memberIdx, last;\n\n            if (!tuples.length) {\n                return;\n            }\n\n            if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                this._skipNormalize = 0;\n                for (; idx < length; idx++) {\n                    roots.push(this._createTuple(tuples[0], measures[idx], true));\n                    indexes[idx] = idx;\n                }\n\n                tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                idx = length;\n            }\n\n            if (measures.length) {\n                last = tuple = tuples[idx];\n                memberIdx = tuple.members.length - 1;\n\n                while (tuple) {\n                    if (measureIdx >= length) {\n                        measureIdx = 0;\n                    }\n\n                    if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                        tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                        indexes[idx] = idx;\n                    }\n\n                    idx += 1;\n                    measureIdx += 1;\n                    tuple = tuples[idx];\n\n                    if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                        for (; measureIdx < length; measureIdx++) {\n                            tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                            indexes[idx] = idx;\n                            idx += 1;\n                        }\n                        tuple = tuples[idx];\n                    }\n                    last = tuple;\n                }\n            }\n\n            return indexes;\n        },\n\n        _addMissingDataItems: function(result, metadata) {\n            while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined$1) {\n                for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                    result = addEmptyDataItem(result);\n                }\n            }\n\n            while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined$1) {\n                result = addEmptyDataItem(result);\n            }\n\n            return result;\n        },\n\n        _normalizeOrdinals: function(result, dataItem, metadata) {\n            var lastOrdinal = metadata.lastOrdinal;\n\n            if (!dataItem) {\n                return addEmptyDataItem(result);\n            }\n\n            if ((dataItem.ordinal - lastOrdinal) > 1) {\n                lastOrdinal += 1;\n\n                while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                    result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                    lastOrdinal += 1;\n                }\n            }\n\n            dataItem.ordinal = result.length;\n            result[result.length] = dataItem;\n\n            return result;\n        },\n\n        _normalizeData: function(options) {\n            var data = options.data;\n            var dataIdx = 0;\n            var dataItem;\n            var result = [];\n            var lastOrdinal;\n            var length;\n\n            options.lastOrdinal = 0;\n            options.columnIndexes = options.columnIndexes || {};\n            options.rowIndexes = options.rowIndexes || {};\n            options.columnsLength = options.columnsLength || 1;\n            options.rowsLength = options.rowsLength || 1;\n            options.length = options.columnsLength * options.rowsLength;\n            length = options.length;\n\n            if (data.length === length) {\n                return data;\n            }\n\n            while (result.length < length) {\n                dataItem = data[dataIdx++];\n                if (dataItem) {\n                    lastOrdinal = dataItem.ordinal;\n                }\n\n                result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                options.lastOrdinal = lastOrdinal;\n            }\n\n            return result;\n        },\n\n        discover: function(options, converter) {\n            var that = this,\n                transport = that.transport;\n\n            return $.Deferred(function(deferred) {\n                transport.discover(extend({\n                    success: function(response) {\n                       response = that.reader.parse(response);\n\n                        if (that._handleCustomErrors(response)) {\n                            return;\n                        }\n\n                        if (converter) {\n                            response = converter(response);\n                        }\n                        deferred.resolve(response);\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, options));\n            }).promise().done(function() {\n                that.trigger(\"schemaChange\");\n            });\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.measures(response);\n            });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaKPIs\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.kpis(response);\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaDimensions\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.dimensions(response);\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaHierarchies\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        dimensionUniqueName: dimensionName\n                    }\n                }\n            }, function(response) {\n                return that.reader.hierarchies(response);\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                }\n            }, function(response) {\n                return that.reader.levels(response);\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                }\n            }, function(response) {\n                return that.reader.cubes(response);\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCatalogs\"\n                }\n            }, function(response) {\n                return that.reader.catalogs(response);\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n            var success = (function(restrictions) {\n                return function(response) {\n                    return that.reader.members(response, restrictions);\n                };\n            }(restrictions));\n\n            return that.discover({\n                data: {\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                   }, restrictions)\n                }\n            }, success);\n        },\n\n        _params: function(data) {\n            if (this._clearAxesData) {\n                this._axes = {};\n                this._data = this._observe([]);\n                this._clearAxesData = false;\n                this.trigger(STATERESET);\n            }\n\n            var options = DataSource.fn._params.call(this, data);\n\n            options = extend({\n                measures: this.measures(),\n                measuresAxis: this.measuresAxis(),\n                columns: this.columns(),\n                rows: this.rows()\n            }, options);\n\n            if (this.cubeBuilder) {\n                this._requestData = options;\n            }\n\n            return options;\n        }\n    });\n\n    function flatColumns(columns) {\n        var result = [];\n        for (var idx = 0; idx < columns.length; idx++) {\n            result.push(columns[idx]);\n            if (columns[idx].children) {\n                result = result.concat(flatColumns(columns[idx].children));\n            }\n        }\n\n        return result;\n    }\n\n    function sortItemsTree(field, items, sortFunction) {\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].children && items[i].children.length) {\n                sortItemsTree(field, items[i].children, sortFunction);\n            }\n        }\n        if (items[0].parentName != field) {\n            return;\n        }\n        items = items.sort(sortFunction);\n    }\n\n    function fillSortTree(items, map) {\n        for (var i = 0; i < items.length; i++) {\n            var currentItem = map[items[i].name];\n\n            if (!$.isEmptyObject(currentItem.childrenMap)) {\n                items[i].children = [];\n                for (var name in currentItem.childrenMap) {\n                    items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                }\n\n                fillSortTree(items[i].children, map);\n            }\n        }\n    }\n\n    function addEmptyDataItem(result) {\n        result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n        return result;\n    }\n\n    function validateAxis(newAxis, axis, measures) {\n        if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n            return axis;\n        }\n\n        return;\n    }\n\n    function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var columnsLength = sourceTuples.length;\n        var targetColumnsLength = membersCount(targetTuples, measures);\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                dataIdx += columnIdx % measuresLength;\n\n                data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n            }\n        }\n    }\n\n    function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var rowsLength = sourceTuples.length;\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n            dataIdx *= measuresLength;\n            dataIdx += rowIdx % measuresLength;\n\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n            }\n        }\n    }\n\n    function tupleIndex(tuple, collection) {\n        return findExistingTuple(collection, tuple).index;\n    }\n\n    function membersCount(tuples, measures) {\n        if (!tuples.length) {\n            return 0;\n        }\n\n        var queue = tuples.slice();\n        var current = queue.shift();\n        var result = 1;\n\n        while (current) {\n            if (current.members) {\n                [].push.apply(queue, current.members);\n            } else if (current.children) {\n                if (!current.measure) {\n                    result += current.children.length;\n                }\n                [].push.apply(queue, current.children);\n            }\n\n            current = queue.shift();\n        }\n\n        if (measures.length) {\n            result = result * measures.length;\n        }\n\n        return result;\n    }\n\n    function normalizeAxis(axis) {\n        if (!axis) {\n            axis = {\n                tuples: []\n            };\n        }\n\n        if (!axis.tuples) {\n            axis.tuples = [];\n        }\n\n        return axis;\n    }\n\n    function findDataIndex(tuple, memberIndex, measures) {\n        if (!tuple) {\n            return 0;\n        }\n\n        var measuresLength = Math.max(measures.length, 1);\n        var tuples = tuple.members.slice(0, memberIndex);\n        var current = tuples.shift();\n\n        //the initial value is equal to the total number of measures\n        //as the measures member is not extracted from the members of the starting tuple\n        //but should be calculated in the final result\n        var counter = measuresLength;\n\n        while (current) {\n            if (current.name === MEASURES) {\n                //subtract 1 as the measures member has been already counted as a single standard member\n                //but we are interested in the total number of measures instead\n                counter += (measuresLength - 1);\n            } else if (current.children) {\n                //is member\n                [].push.apply(tuples, current.children);\n            } else {\n                //is tuple\n                counter ++;\n                [].push.apply(tuples, current.members);\n            }\n\n            current = tuples.shift();\n        }\n\n        return counter;\n    }\n\n    function mergeTuples(target, source, measures) {\n        if (!source[0]) {\n            return {\n                parsedRoot: null,\n                tuples: target,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var result = findExistingTuple(target, source[0]);\n\n        if (!result.tuple) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var targetMembers = result.tuple.members;\n        var sourceMembers = source[0].members;\n        var memberIndex = -1;\n\n        if (targetMembers.length !== sourceMembers.length) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n            if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                    memberIndex = idx;\n                }\n\n                targetMembers[idx].children = sourceMembers[idx].children;\n            }\n        }\n\n        measures = Math.max(measures.length, 1);\n\n        return {\n            parsedRoot: result.tuple,\n            index: result.index * measures,\n            memberIndex: memberIndex,\n            tuples: target\n        };\n    }\n\n    function equalTuples(first, second) {\n        var equal = true;\n        var idx, length;\n\n        first = first.members;\n        second = second.members;\n\n        for (idx = 0, length = first.length; idx < length; idx++) {\n            if (first[idx].measure || second[idx].measure) {\n                continue;\n            }\n\n            equal = equal && (getName(first[idx]) === getName(second[idx]));\n        }\n\n        return equal;\n    }\n\n    function findExistingTuple(tuples, toFind) {\n        var idx, length, tuple, found, counter = 0;\n        var memberIndex, membersLength, member;\n\n        for (idx = 0, length = tuples.length; idx < length; idx++) {\n            tuple = tuples[idx];\n            if (equalTuples(tuple, toFind)) {\n                return {\n                    tuple: tuple,\n                    index: counter\n                };\n            }\n\n            counter ++;\n\n            for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                member = tuple.members[memberIndex];\n                if (member.measure) {\n                    //counter += member.children.length;\n                    continue;\n                }\n                found = findExistingTuple(member.children, toFind);\n                counter += found.index;\n                if (found.tuple) {\n                    return {\n                        tuple: found.tuple,\n                        index: counter\n                    };\n                }\n            }\n        }\n\n        return {\n            index: counter\n        };\n    }\n\n    function addMembers(members, map) {\n        var member, i, len, path = \"\";\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            path += member.name;\n            if (!map[path]) {\n                map[path] = member;\n            }\n        }\n    }\n\n\n    function findParentMember(tuple, map) {\n        var members = tuple.members;\n        var i, len, member, path = \"\";\n        var parentPath = \"\";\n        var parentMember;\n\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            if (parentMember) {\n                if (map[path + member.name]) {\n                    path += member.name;\n                    parentMember = map[path];\n                    continue;\n                } else if (map[path + member.parentName]) {\n                    return map[path + member.parentName];\n                } else if (map[parentPath + member.parentName]) {\n                    return map[parentPath + member.parentName];\n                } else {\n                    return map[parentPath];\n                }\n            }\n\n            path += member.name;\n            parentMember = map[member.parentName];\n\n            if (!parentMember) {\n                parentMember = map[path];\n                if (!parentMember) {\n                    return null;\n                }\n            }\n\n            if (parentMember) {\n                parentPath += parentMember.name;\n            }\n        }\n\n        return parentMember;\n    }\n\n    function measurePosition(tuple, measures) {\n        if (measures.length === 0) {\n            return -1;\n        }\n\n        var measure = measures[0];\n        var members = tuple.members;\n        for (var idx = 0, len = members.length; idx < len; idx ++) {\n            if (members[idx].name == measure.name) {\n                return idx;\n            }\n        }\n    }\n\n    function normalizeTupleMeasures(tuple, index) {\n        if (index < 0) {\n            return;\n        }\n        var member = {\n            name: MEASURES,\n            measure: true,\n            children: [\n                $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n            ]\n        };\n        tuple.members.splice(index, 1, member);\n        tuple.dataIndex = undefined$1;\n    }\n\n    function parseSource(tuples, measures) {\n        if (tuples.length < 1) {\n            return [];\n        }\n        var result = [];\n        var map = { };\n        var measureIndex = measurePosition(tuples[0], measures);\n\n        for (var i = 0; i < tuples.length; i++) {\n            var tuple = tuples[i];\n\n            //keep the old data index of the tuple\n            tuple.dataIndex = i;\n\n            normalizeTupleMeasures(tuple, measureIndex);\n            var parentMember = findParentMember(tuple, map);\n\n            if (parentMember) {\n                if (measureIndex < 0 || !parentMember.measure) {\n                    parentMember.children.push(tuple);\n                } else {\n                    parentMember.children.push(tuple.members[measureIndex].children[0]);\n                }\n            } else {\n                result.push(tuple);\n            }\n\n            addMembers(tuple.members, map);\n        }\n\n        return result;\n    }\n\n    function prepareDataOnRows(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var rowsLength = indices.length;\n        var columnsLength = Math.max(data.length / rowsLength, 1);\n        var rowIndex, columnIndex, targetIndex, sourceIndex;\n        var calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            targetIndex = columnsLength * rowIndex;\n            sourceIndex = columnsLength * indices[rowIndex];\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function prepareDataOnColumns(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var columnsLength = indices.length;\n        var rowsLength = Math.max(data.length / columnsLength, 1);\n        var columnIndex, rowIndex, dataIndex, calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            dataIndex = columnsLength * rowIndex;\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = indices[columnIndex] + dataIndex;\n                result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function buildDataIndices(tuples) {\n        tuples = tuples.slice();\n        var result = [];\n        var tuple = tuples.shift();\n        var idx, length, spliceIndex, children, member;\n\n        while (tuple) {\n            //required for multiple measures\n            if (tuple.dataIndex !== undefined$1) {\n                result.push(tuple.dataIndex);\n            }\n\n            spliceIndex = 0;\n            for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                member = tuple.members[idx];\n                children = member.children;\n                if (member.measure) {\n                    [].splice.apply(tuples, [0, 0].concat(children));\n                } else {\n                    [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                }\n                spliceIndex += children.length;\n            }\n\n            tuple = tuples.shift();\n        }\n\n        return result;\n    }\n\n    PivotDataSourceV2.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n    };\n\n    PivotDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n    };\n\n    function baseHierarchyPath(memberName) {\n        var parts = memberName.split(\".\");\n        if (parts.length > 2) {\n            return parts[0] + \".\" + parts[1];\n        }\n        return memberName;\n    }\n\n    function expandMemberDescriptor(names, sort) {\n        var idx = names.length - 1;\n        var name = names[idx];\n        var sortDescriptor;\n\n        sortDescriptor = sortDescriptorForMember(sort, name);\n\n        if (sortDescriptor && sortDescriptor.dir) {\n            name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n        } else {\n            name += \".Children\";\n        }\n\n        names[idx] = name;\n\n        return names;\n    }\n\n    function sortDescriptorForMember(sort, member) {\n        for (var idx = 0, length = sort.length; idx < length; idx++) {\n            if (member.indexOf(sort[idx].field) === 0) {\n                return sort[idx];\n            }\n        }\n        return null;\n    }\n\n    function crossJoin(names) {\n        var result = \"CROSSJOIN({\";\n        var r;\n\n        if (names.length > 2) {\n            r = names.pop();\n            result += crossJoin(names);\n        } else {\n            result += names.shift();\n            r = names.pop();\n        }\n\n        result += \"},{\";\n        result += r;\n        result += \"})\";\n        return result;\n    }\n\n    function crossJoinCommand(members, measures) {\n        var tmp = members.slice(0);\n\n        if (measures.length > 1) {\n            tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n        }\n\n        return crossJoin(tmp);\n    }\n\n    function measureNames(measures) {\n        var idx = 0;\n        var length = measures.length;\n        var result = [];\n        var measure;\n\n        for (; idx < length; idx++) {\n            measure = measures[idx];\n            result.push(measure.name !== undefined$1 ? measure.name : measure);\n        }\n\n        return result;\n    }\n\n    function indexOf(name, items) {\n        var idx, length, index = -1;\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            if (getName(items[idx]) === name) {\n                index = idx;\n                break;\n            }\n        }\n        return index;\n    }\n\n    function getName(name) {\n        name = name.name || name;\n\n        if (toString.call(name) === \"[object Array]\") {\n            name = name[name.length - 1];\n        }\n\n        return name;\n    }\n\n    function getRootNames(members) {\n        var length = members.length;\n        var names = [];\n        var idx = 0;\n\n        for (; idx < length; idx++) {\n            names.push(members[idx].name[0]);\n        }\n\n        return names;\n    }\n\n    function mapNames(names, rootNames) {\n        var name;\n        var rootName;\n\n        var j;\n        var idx = 0;\n        var length = names.length;\n        var rootLength = rootNames.length;\n\n        rootNames = rootNames.slice(0);\n\n        for (; idx < length; idx++) {\n            name = names[idx];\n\n            for (j = 0; j < rootLength; j++) {\n                rootName = baseHierarchyPath(rootNames[j]);\n\n                if (name.indexOf(rootName) !== -1) {\n                    rootNames[j] = name;\n                    break;\n                }\n            }\n        }\n\n        return {\n            names: rootNames,\n            expandedIdx: j,\n            uniquePath: rootNames.slice(0, j + 1).join(\"\")\n        };\n    }\n\n    function parseDescriptors(members) {\n        var expanded = [];\n        var child = [];\n        var root = [];\n        var member;\n\n        var j, l;\n        var idx = 0;\n        var length = members.length;\n\n        var name;\n        var hierarchyName;\n\n        var found;\n\n        for (; idx < length; idx++) {\n            member = members[idx];\n            name = member.name;\n            found = false;\n\n            if (toString.call(name) !== \"[object Array]\") {\n                member.name = name = [name];\n            }\n\n            if (name.length > 1) {\n                child.push(member);\n            } else {\n                hierarchyName = baseHierarchyPath(name[0]);\n\n                for (j = 0, l = root.length; j < l; j++) {\n                    if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    root.push(member);\n                }\n\n                if (member.expand) {\n                    expanded.push(member);\n                }\n            }\n        }\n\n        expanded = expanded.concat(child);\n\n        return {\n            root: root,\n            expanded: expanded\n        };\n    }\n\n    function serializeMembers(members, measures, sort) {\n        var command = \"\";\n\n        members = members || [];\n\n        var expanded = parseDescriptors(members);\n        var root = expanded.root;\n\n        var rootNames = getRootNames(root);\n        var crossJoinCommands = [];\n\n        expanded = expanded.expanded;\n\n        var length = expanded.length;\n        var idx = 0;\n\n        var memberName;\n        var names = [];\n\n        if (rootNames.length > 1 || measures.length > 1) {\n            crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names = mapNames(memberName, rootNames).names;\n\n                crossJoinCommands.push(crossJoinCommand(names, measures));\n            }\n\n            command += crossJoinCommands.join(\",\");\n        } else {\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names.push(memberName[0]); //check if this is ok\n            }\n\n            command += rootNames.concat(names).join(\",\");\n        }\n\n        return command;\n    }\n\n    var filterFunctionFormats = {\n        contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n        doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n        startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n        neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n    };\n\n    function serializeExpression(expression) {\n        var command = \"\";\n        var value = expression.value;\n        var field = expression.field;\n        var operator = expression.operator;\n\n        if (operator == \"in\") {\n            command += \"{\";\n            command += value;\n            command += \"}\";\n        } else {\n            command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n            command += \"Filter(\";\n            command += field + \".MEMBERS\";\n            command += kendo.format(filterFunctionFormats[operator], field, value);\n            command += \")\";\n        }\n\n        return command;\n    }\n\n    function serializeFilters(filter, cube) {\n        var command = \"\", current;\n        var filters = filter.filters;\n        var length = filters.length;\n        var idx;\n\n        for (idx = length - 1; idx >= 0; idx--) {\n\n            current = \"SELECT (\";\n            current += serializeExpression(filters[idx]);\n            current += \") ON 0\";\n\n            if (idx == length - 1) {\n                current += \" FROM [\" + cube + \"]\";\n                command = current;\n            } else {\n                command = current + \" FROM ( \" + command + \" )\";\n            }\n        }\n\n        return command;\n    }\n\n    function serializeOptions(parentTagName, options, capitalize) {\n        var result = \"\";\n\n        if (options) {\n            result += \"<\" + parentTagName + \">\";\n            var value;\n            for (var key in options) {\n                value = options[key];\n                if (capitalize) {\n                    key = key.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                }\n                result += \"<\" + key + \">\" + value + \"</\" + key + \">\";\n            }\n            result += \"</\" + parentTagName + \">\";\n        } else {\n            result += \"<\" + parentTagName + \"/>\";\n        }\n        return result;\n    }\n\n    var xmlaDiscoverCommands = {\n        schemaCubes: \"MDSCHEMA_CUBES\",\n        schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n        schemaMeasures: \"MDSCHEMA_MEASURES\",\n        schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n        schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n        schemaLevels: \"MDSCHEMA_LEVELS\",\n        schemaMembers: \"MDSCHEMA_MEMBERS\",\n        schemaKPIs: \"MDSCHEMA_KPIS\"\n    };\n\n    var convertersMap = {\n        read: function(options) {\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n            command += \"SELECT NON EMPTY {\";\n\n            var columns = options.columns || [];\n            var rows = options.rows || [];\n\n            var measures = options.measures || [];\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n            var sort = options.sort || [];\n\n            if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columns = rows;\n                rows = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columns.length && !rows.length) {\n                measuresRowAxis = false;\n            }\n\n            if (columns.length) {\n                command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n            } else if (measures.length && !measuresRowAxis) {\n                command += measureNames(measures).join(\",\");\n            }\n\n            command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n            if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                command += \", NON EMPTY {\";\n\n                if (rows.length) {\n                    command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                } else {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n            }\n\n            if (options.filter) {\n                command += \" FROM \";\n                command += \"(\";\n                command += serializeFilters(options.filter, options.connection.cube);\n                command += \")\";\n            } else {\n                command += \" FROM [\" + options.connection.cube + \"]\";\n            }\n\n            if (measures.length == 1 && columns.length) {\n                command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n            }\n\n            command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n            return command.replace(/\\&/g, \"&amp;\");\n        },\n        discover: function(options) {\n            options = options || {};\n\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n            command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n            command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n            if (options.connection && options.connection.catalog) {\n                options.properties = $.extend({}, {\n                    Catalog: options.connection.catalog\n                }, options.properties);\n            }\n\n            command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n            command += '</Discover></Body></Envelope>';\n            return command;\n        }\n    };\n\n    var XmlaTransport = kendo.data.RemoteTransport.extend({\n        init: function(options) {\n            var originalOptions = options;\n\n            options = this.options = extend(true, {}, this.options, options);\n\n            kendo.data.RemoteTransport.call(this, options);\n\n            if (isFunction(originalOptions.discover)) {\n                this.discover = originalOptions.discover;\n            } else if (typeof originalOptions.discover === \"string\") {\n                this.options.discover = {\n                    url: originalOptions.discover\n                };\n            } else if (!originalOptions.discover) {\n                this.options.discover = this.options.read;\n            }\n        },\n        setup: function(options, type) {\n            options.data = options.data || {};\n            $.extend(true, options.data, { connection: this.options.connection });\n\n            return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n        },\n        options: {\n            read: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            discover: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            parameterMap: function(options, type) {\n                return convertersMap[type](options,type);\n            }\n        },\n\n        discover: function(options) {\n            return $.ajax(this.setup(options, \"discover\"));\n        }\n    });\n\n    var XmlaTransportV2 = Class.extend({\n        init: function(options) {\n            options = this.options = extend(true, {}, this.options, options);\n        },\n        setup: function(options) {\n            return $.extend(true, options || {}, { connection: this.options.connection });\n        },\n        read: function(options) {\n            var that = this,\n                success,\n                error;\n\n            var fetchOptions = that.setup(options.data, READ);\n\n            success = options.success || $.noop;\n            error = options.error || $.noop;\n\n            if (options.parameterMap) {\n                fetchOptions = that.parameterMap(fetchOptions, READ);\n            }\n\n            fetchData({ url: that.options.read }, fetchOptions)\n            .then(createDataState)\n            .then(function(newDataState) {\n                success(newDataState);\n            })\n            .catch(function(err) { error(err); });\n        },\n\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        },\n\n        discover: function(options) {\n            return fetchDiscover({ url: this.options.read }, options);\n        }\n    });\n\n    function asArray(object) {\n        if (object == null) {\n            return [];\n        }\n\n        var type = toString.call(object);\n        if (type !== \"[object Array]\") {\n            return [object];\n        }\n\n        return object;\n    }\n\n    function translateAxis(axis) {\n        var result = { tuples: [] };\n        var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n        var captionGetter = kendo.getter(\"Caption['#text']\");\n        var unameGetter = kendo.getter(\"UName['#text']\");\n        var levelNameGetter = kendo.getter(\"LName['#text']\");\n        var levelNumGetter = kendo.getter(\"LNum['#text']\");\n        var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n        var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n        var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n        for (var idx = 0; idx < tuples.length; idx++) {\n            var members = [];\n            var member = asArray(tuples[idx].Member);\n            for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                members.push({\n                    children: [],\n                    caption: captionGetter(member[memberIdx]),\n                    name: unameGetter(member[memberIdx]),\n                    levelName: levelNameGetter(member[memberIdx]),\n                    levelNum: levelNumGetter(member[memberIdx]),\n                    hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                    parentName: parentNameGetter(member[memberIdx]),\n                    hierarchy: hierarchyGetter(member[memberIdx])\n                });\n            }\n\n            result.tuples.push({ members: members });\n        }\n        return result;\n    }\n\n    var schemaDataReaderMap = {\n        cubes: {\n            name: kendo.getter(\"CUBE_NAME['#text']\", true),\n            caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n        },\n        catalogs: {\n            name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true)\n        },\n        measures: {\n            name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n            caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n            defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n        },\n        kpis: {\n            name: kendo.getter(\"KPI_NAME['#text']\", true),\n            caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n            value: kendo.getter(\"KPI_VALUE['#text']\", true),\n            goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n            status: kendo.getter(\"KPI_STATUS['#text']\", true),\n            trend: kendo.getter(\"KPI_TREND['#text']\", true),\n            statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n            trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n            description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n        },\n        dimensions: {\n            name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n            caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n            type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n//unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n        },\n        hierarchies: {\n            name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n            caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n            origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n            defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n        },\n        levels: {\n            name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n            caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n            orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n            origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n        },\n        members: {\n            name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n            caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n        }\n    };\n\n    var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n    var XmlaDataReader = kendo.data.XmlDataReader.extend({\n        init: function(options) {\n            kendo.data.XmlDataReader.call(this, options);\n\n            this._extend(options);\n        },\n        _extend: function(options) {\n            var idx = 0;\n            var length = xmlaReaderMethods.length;\n            var methodName;\n            var option;\n\n            for (; idx < length; idx++) {\n                methodName = xmlaReaderMethods[idx];\n                option = options[methodName];\n\n                if (option && option !== identity) {\n                    this[methodName] = option;\n                }\n            }\n        },\n        parse: function(xml) {\n            var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n            return kendo.getter(\"['Envelope']['Body']\", true)(result);\n        },\n        errors: function(root) {\n            var fault = kendo.getter(\"['Fault']\", true)(root);\n            if (fault) {\n                return [{\n                    faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                    faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                }];\n            }\n            return null;\n        },\n        axes: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n            var axis;\n\n            var result = {\n                columns: {},\n                rows: {}\n            };\n\n            for (var idx = 0; idx < axes.length; idx++) {\n                axis = axes[idx];\n\n                if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                    if (!result.columns.tuples) {\n                        result.columns = translateAxis(axis);\n                    } else {\n                        result.rows = translateAxis(axis);\n                    }\n                }\n            }\n\n            return result;\n        },\n        data: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n            var result = [];\n            var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n            var valueGetter = kendo.getter(\"Value['#text']\");\n            var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n            for (var idx = 0; idx < cells.length; idx++) {\n                result.push({\n                    value: valueGetter(cells[idx]),\n                    fmtValue: fmtValueGetter(cells[idx]),\n                    ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                });\n            }\n\n            return result;\n        },\n        _mapSchema: function(root, getters) {\n            root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n            var rows = asArray(kendo.getter(\"row\", true)(root));\n\n            var result = [];\n\n            for (var idx = 0; idx < rows.length; idx++) {\n                var obj = {};\n                for (var key in getters) {\n                    obj[key] = getters[key](rows[idx]);\n                }\n                result.push(obj);\n            }\n\n            return result;\n        },\n        measures: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.measures);\n        },\n        kpis: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.kpis);\n        },\n        hierarchies: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n        },\n        levels: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.levels);\n        },\n        dimensions: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.dimensions);\n        },\n        cubes: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.cubes);\n        },\n        catalogs: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.catalogs);\n        },\n        members: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.members);\n        }\n    });\n\n    extend(true, kendo.data, {\n       PivotDataSource: PivotDataSource,\n       PivotDataSourceV2: PivotDataSourceV2,\n       XmlaTransport: XmlaTransport,\n       XmlaDataReader: XmlaDataReader,\n       PivotCubeBuilder: PivotCubeBuilder,\n       transports: {\n           xmla: XmlaTransport\n       },\n       readers: {\n           xmla: XmlaDataReader\n       }\n    });\n\n    var sortExpr = function(expressions, name) {\n        if (!expressions) {\n            return null;\n        }\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field === name) {\n                return expressions[idx];\n            }\n        }\n\n        return null;\n    };\n\n    var removeExpr = function(expressions, name) {\n        var result = [];\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field !== name) {\n                result.push(expressions[idx]);\n            }\n        }\n\n        return result;\n    };\n\n    kendo.ui.PivotSettingTarget = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.element.addClass(\"k-pivot-setting\");\n\n            that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            if (!options.template) {\n                var actions = '';\n\n                if (that.options.enabled) {\n                    actions = `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n                }\n\n                that.options.template = (data) => ''\n                    + `<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${data.name || data}\">`\n                        + '<span class=\"k-chip-content\">'\n                            + `<span class=\"k-chip-text\">${data.name || data}</span>`\n                        + '</span>'\n                        + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                    + '</span>';\n            }\n\n            that.template = kendo.template(that.options.template);\n            that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                var target = $(e.target).closest(\":not(path,svg)\");\n                var action = target.closest('.k-chip-action');\n                var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                 .attr(kendo.attr(\"name\"));\n\n                if (!name) {\n                    return;\n                }\n\n                if (action.hasClass(\"k-setting-delete\")) {\n                    that.remove(name);\n                    return;\n                }\n\n                if (target.closest('.k-chip-actions').length > 0) {\n                    return;\n                }\n\n                if (that.options.sortable) {\n                    var sortDirection = $(e.currentTarget).closest(\":not(path,svg)\").find('.k-i-sort-asc-small,.k-svg-i-sort-asc-small').length ? 'desc' : 'asc';\n\n                    that.sort({\n                        field: name,\n                        dir: sortDirection\n                    });\n                }\n            });\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filter: \".k-setting-fieldmenu\",\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        options: {\n            name: \"PivotSettingTarget\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            emptyTemplate: (data) => `<div class='k-empty'>${data}</div>`,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            if (that.options.enabled) {\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.trigger(\"focus\").trigger(\"blur\");\n                    },\n                    change: function(e) {\n                        var name = e.item.attr(kendo.attr(\"name\"));\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            }\n        },\n\n        _isKPI: function(data) {\n            return data.type === \"kpi\" || data.measure;\n        },\n\n        validate: function(data) {\n            var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n            if (isMeasure) {\n                return this.options.setting === \"measures\";\n            }\n\n            if (this.options.setting === \"measures\") {\n                return isMeasure;\n            }\n\n            var items = this.dataSource[this.options.setting]();\n            var name = data.defaultHierarchy || data.uniqueName;\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            return true;\n        },\n\n        add: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        move: function(name, index) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        remove: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this.dataSource._filter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this.dataSource._filter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this.dataSource._sort = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        sort: function(expr) {\n            var sortable = this.options.sortable;\n            var allowUnsort = sortable === true || sortable.allowUnsort;\n            var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n            var expressions = (this.dataSource.sort() || []);\n            var result = removeExpr(expressions, expr.field);\n\n            if (skipExpr && expressions.length !== result.length) {\n                expr = null;\n            }\n\n            if (expr) {\n                result.push(expr);\n            }\n\n            this.dataSource.sort(result);\n        },\n\n        refresh: function() {\n            var html = \"\";\n            var items = this.dataSource[this.options.setting]();\n            var length = items.length;\n            var idx = 0;\n            var item;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined$1 ? { name: item } : item;\n\n                    html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                }\n            } else {\n                html = this.emptyTemplate(this.options.messages.empty);\n            }\n\n            this.element.html(html);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        _sortIcon: function(name) {\n            var expressions = this.dataSource.sort();\n            var expr = sortExpr(expressions, getName(name));\n            var icon = \"\";\n\n            if (expr) {\n                icon = \"sort-\" + expr.dir;\n            }\n\n            return icon;\n        }\n    });\n\n    kendo.ui.PivotSettingTargetV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            that.template = kendo.template(that.options.template);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, \".k-i-x-circle,.k-svg-i-x-circle\", function(e) {\n                var target = $(e.target).closest(\":not(path,svg)\");\n                var parent = target.closest(\".k-chip\");\n                var name = parent.find(\".k-chip-label\").text();\n\n                if (!name) {\n                    return;\n                }\n\n                that.remove(name);\n                parent.remove();\n                that.trigger(\"remove\", { name: name });\n            });\n\n            if (that.options.navigatable) {\n                that.element.on(\"keydown\" + NS, \".k-chip\", function(ev) {\n                    var chip = $(ev.target),\n                        key = ev.keyCode,\n                        name = chip.find(\".k-chip-label\").text();\n\n                    if (key === keys.DELETE || key === keys.BACKSPACE) {\n                        const targetIndex = that.options.configuratorNavigation ? that.options.configuratorNavigation.elements.indexOf(chip[0]) : -1;\n                        chip.find(\".k-i-x-circle,.k-svg-i-x-circle\").trigger(\"click\");\n                        if (!that.options.configuratorNavigation) {\n                            return;\n                        }\n\n                        that.options.configuratorNavigation.focusElement(\n                            that.options.configuratorNavigation.elements[targetIndex - 1],\n                        );\n                    } else if (key === keys.DOWN && ev.altKey) {\n                        chip.find(\".k-i-more-vertical,.k-svg-i-more-vertical\").trigger(\"click\");\n                    } else if (ev.ctrlKey && ev.shiftKey) {\n                        if (key == keys.LEFT) {\n                            that.move(name, Math.max(0, chip.index() - 1));\n\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.element.find(\".k-chip .k-chip-label\")\n                                    .filter((ind, el) => $(el).text() == name)\n                                    .closest(\".k-chip\")[0]\n                            );\n                        } else if (key == keys.RIGHT) {\n                            that.move(name, Math.min(chip.index() + 1, chip.parent().find(\"> .k-chip\").length - 1));\n\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.element.find(\".k-chip .k-chip-label\")\n                                    .filter((ind, el) => $(el).text() == name)\n                                    .closest(\".k-chip\")[0]\n                            );\n                        } else if ((key == keys.UP && that.options.setting == \"rows\") ||\n                            (key == keys.DOWN && that.options.setting == \"columns\")) {\n\n                            let otherTarget = that.sortable.options.connectWith.data(\"kendoPivotSettingTargetV2\");\n                            if (!otherTarget) {\n                                return;\n                            }\n\n                            that.remove(name);\n                            otherTarget.add(name);\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                otherTarget.element.find(\".k-chip\").last()[0]\n                            );\n                        }\n                    }\n                });\n            }\n\n            that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                messages: that.options.messages.fieldMenu,\n                filterable: options.filterable,\n                filter: \".k-i-more-vertical,.k-svg-i-more-vertical\",\n                sortable: options.sortable,\n                dataSource: that.dataSource,\n                setting: options.setting\n            });\n\n            that.refresh();\n        },\n\n        events: [\"remove\"],\n\n        options: {\n            name: \"PivotSettingTargetV2\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _applyState: function() {\n            if (this._sortState !== undefined$1) {\n                this.dataSource._sort = this._sortState;\n                this._sortState = undefined$1;\n            }\n\n            if (this._stateFilter !== undefined$1) {\n                this.dataSource._filter = this._stateFilter;\n                this._stateFilter = undefined$1;\n            }\n\n            this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n        },\n\n        _cancelChanges: function() {\n            this._sortState = undefined$1;\n            this._stateFilter = undefined$1;\n            this._savedState = kendo.deepExtend([], this._initialState);\n            this._redraw();\n        },\n\n        _state: function(newState, modifyInit) {\n            var that = this;\n\n            if (!newState) {\n                return that._savedState || [];\n            } else {\n                if (!that._savedState || modifyInit) {\n                    that._initialState = kendo.deepExtend([], newState);\n                }\n                that._savedState = kendo.deepExtend([], newState);\n            }\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            this.sortable = this.element.kendoSortable({\n                connectWith: this.options.connectWith,\n                hint: that.options.hint,\n                filter: \">*:not(.k-empty)\",\n                cursor: \"move\",\n                start: function(e) {\n                    e.item.focus().blur();\n                },\n                change: function(e) {\n                    var name = e.item.find(\".k-chip-label\").text();\n\n                    if (e.action == \"receive\") {\n                        that.add(name);\n                    } else if (e.action == \"remove\") {\n                        that.remove(name);\n                    } else if (e.action == \"sort\") {\n                        that.move(name, e.newIndex);\n                    }\n                }\n            }).data(\"kendoSortable\");\n        },\n\n        add: function(name) {\n            var items = this._state();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        move: function(name, index) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        remove: function(name) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this._savedFilter = this.dataSource._filter;\n                    this._savedFilter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this._savedFilter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this._sortState = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        _emptyState: function(enable) {\n            var that = this;\n            if (enable) {\n                that.element.html(this.options.messages.empty)\n                    .addClass(\"k-settings-description\")\n                    .removeClass(\"k-chip-list\");\n            } else {\n                that.element\n                    .removeClass(\"k-settings-description\")\n                    .addClass(\"k-chip-list\");\n            }\n        },\n\n        _redraw: function() {\n            var items = this._state() || [];\n            this._emptyState(!items.length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        _targetsHTML: function(items) {\n            var item;\n            var html = \"\";\n            var idx = 0;\n            var enabled = true;\n\n            if (items.length) {\n                for (; idx < items.length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined$1 ? { name: item } : item;\n\n                    html += this.template({ name: item.name, menuenabled: enabled });\n                }\n            }\n            return html;\n        },\n\n        refresh: function() {\n            if (this.dataSource._preventRefresh) {\n                return;\n            }\n            var items = this.dataSource[this.options.setting]();\n            this._state(items, true);\n            this._emptyState(!this._state().length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    var PivotConfiguratorButton = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n\n            that._element();\n            that._attachEvents();\n        },\n\n        options: {\n            name: \"PivotConfiguratorButton\",\n            text: \"Change settings\",\n            configurator: \"\"\n        },\n\n        destroy: function() {\n            this.element.off(NS);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        toggle: function() {\n            var attr = kendo.attr(\"role\");\n            var pivotEl = this.element\n                .closest(\"[\" + attr + \"=pivotcontainer]\")\n                .find(\"[\" + attr + \"=pivotgridv2]\");\n            var pivot;\n\n            $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n            if (pivotEl.length) {\n                pivot = pivotEl.getKendoPivotGridV2();\n                pivot._setContentWidth();\n                pivot._updateDimensions();\n            }\n        },\n\n        _attachEvents: function() {\n            this.element.on(\"click\" + NS, this.toggle.bind(this));\n        },\n\n        _element: function() {\n            var options = this.options;\n            this.element.addClass(\"k-pivotgrid-configurator-button\");\n            this.element.html(kendo.format(\"<span>{0}{1}</span>\",options.text, kendo.ui.icon('gear')));\n        }\n    });\n\n    var PivotContainer = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n            that.options = options;\n\n\n            that._addClasses();\n        },\n\n        options: {\n            name: \"PivotContainer\",\n            configuratorPosition: \"left\"\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        _addClasses: function() {\n            var options = this.options;\n            var className;\n            this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n            switch (options.configuratorPosition) {\n                case \"right\":\n                    className = \"k-flex-row\";\n                    break;\n                case \"left\":\n                    className = \"k-flex-row-reverse\";\n                    break;\n                case \"bottom\":\n                    className = \"k-flex-column\";\n                    break;\n                case \"top\":\n                    className = \"k-flex-column-reverse\";\n                    break;\n                default:\n                    className = \"k-flex-row\";\n            }\n\n            this.element\n                .addClass(\"k-d-flex k-pos-relative\")\n                .addClass(className);\n        }\n    });\n\n    var PivotGridV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._ariaId = that.element.attr(\"id\") || kendo.guid();\n            that._wrapper();\n\n            that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n            that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n            that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n            that.wrapper.append(that._columnHeadersWrapper);\n            that.wrapper.append(that._rowHeadersWrapper);\n            that.wrapper.append(that._contentWrapper);\n\n            that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\", ariaId: that._ariaId });\n            that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\", ariaId: that._ariaId });\n            that._contentBuilder = new ContentBuilderV2( { template: this.options.dataCellTemplate || DATACELL_TEMPLATE, ariaId: that._ariaId });\n\n            that._scrollable();\n            that._rowHeadersWrapper\n                .add(that._columnHeadersWrapper)\n                .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                    var button = $(this);\n                    var path = button.parent().attr(kendo.attr(\"key\"));\n                    var expanded = button.is(\".k-i-chevron-up,.k-svg-i-chevron-up\");\n                    var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                    var paths = path.split(\",\");\n                    var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                    if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                        return;\n                    }\n\n                    var reducerPayLoad = {\n                        type: \"HEADERS_ACTION_TOGGLE\",\n                        payload: paths,\n                        tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                    };\n                    var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                    var newHeaders = headersReducer(currentAxes, reducerPayLoad);\n\n                    that.dataSource._preventRefresh = true;\n\n                    if (isRow) {\n                        that.dataSource.rows(newHeaders);\n                    } else {\n                        that.dataSource.columns(newHeaders);\n                    }\n                 });\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            that._aria();\n\n            if (that.options.navigatable) {\n                that._initPivotGridNavigation();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGridV2\",\n            autoBind: true,\n            height: null,\n            columnWidth: null,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            messages: {\n                emptyCellLabel: \"PivotGrid Empty Cell\"\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            Widget.fn.destroy.call(that);\n\n            if (that._windowResizeHandler) {\n                $(window).off(RESIZE + NS, that._windowResizeHandler);\n                that._windowResizeHandler = null;\n            }\n        },\n\n        _aria: function() {\n            var that = this;\n            that.element.attr(\"role\", \"grid\");\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            this._bindConfigurator();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        _initPivotGridNavigation: function() {\n            var that = this;\n\n            that.navigation = new PivotGridNavigation({ tabIndex: 0 });\n            that.navigation.start(that.element[0]);\n\n            const firstCell = that.navigation.first;\n\n            if (firstCell) {\n                firstCell.setAttribute('tabindex', '0');\n            }\n        },\n\n        _matchAriaAttributes: function(wrapper) {\n            var that = this;\n            const rowHeaderRows = wrapper.querySelectorAll(\n                \".k-pivotgrid-row-headers .k-pivotgrid-row\"\n            );\n            const rowHeaderCols = !rowHeaderRows[0] ? [] : Array.from(rowHeaderRows[0].children).reduce(\n                (acc, curr) => (acc += curr.getAttribute(\"colspan\") !== null ? +curr.getAttribute(\"colspan\") : 1),\n                0\n            );\n            const colHeaderRows = wrapper.querySelectorAll(\n                \".k-pivotgrid-column-headers tr\"\n            );\n            const colHeaderCells = wrapper.querySelectorAll(\n                \".k-pivotgrid-column-headers th\"\n            );\n            const valueTableCells = wrapper.querySelectorAll(\".k-pivotgrid-values td\");\n            const emptyCell = wrapper.querySelector(\".k-pivotgrid-empty-cell\");\n\n            emptyCell.setAttribute(\"aria-rowspan\", colHeaderRows.length.toString());\n            emptyCell.setAttribute(\"aria-colspan\", rowHeaderCols.toString());\n\n            const firstColHeadersRow = colHeaderRows[0];\n            const firstColHeaderRowCellsIds = !firstColHeadersRow ? [] : Array.from(firstColHeadersRow.children)\n                .map(el => el.getAttribute(\"id\"))\n                .join(\" \");\n            firstColHeadersRow.setAttribute(\n                \"aria-owns\",\n                `${emptyCell.getAttribute(\"id\")} ${firstColHeaderRowCellsIds}`\n            );\n\n            rowHeaderRows.forEach((row, index) => {\n                const valueCellsIds = that.filterAndMap(\n                    Array.from(valueTableCells),\n                    c => {\n                        const idParts = c.getAttribute(\"id\").split(\"-\");\n                        return idParts[idParts.length - 2] === (index + 1).toString();\n                    },\n                    c => c.getAttribute(\"id\")\n                );\n\n                row.setAttribute(\"aria-owns\", valueCellsIds.join(\" \"));\n            });\n\n            valueTableCells.forEach(cell => {\n                const idParts = cell.getAttribute(\"id\").split(\"-\");\n                const cellColIndex = +idParts[idParts.length - 1];\n                const colHeaderCellsIds = that.filterAndMap(\n                    Array.from(colHeaderCells),\n                    c => {\n                        const idParts = c.getAttribute(\"id\").split(\"-\");\n                        const headerCellColIndex = +idParts[idParts.length - 1];\n                        const headerCellColspan = +c.getAttribute(\"colspan\");\n                        const colIndexIsEqual = cellColIndex === headerCellColIndex;\n                        const cellColIndexIsWithinHeaderCellRange =\n                            headerCellColspan > 1 &&\n                            headerCellColIndex < cellColIndex &&\n                            headerCellColIndex + headerCellColspan - 1 >= cellColIndex;\n\n                        return colIndexIsEqual || cellColIndexIsWithinHeaderCellRange;\n                    },\n                    c => c.getAttribute(\"id\")\n                );\n\n                cell.setAttribute(\"aria-describedby\", colHeaderCellsIds.join(\" \"));\n            });\n        },\n\n        filterAndMap: function(arr, predicate, mapper) {\n            return arr.reduce(\n                (acc, curr) => (predicate(curr) ? [...acc, mapper(curr)] : acc),\n                []\n            );\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _resize: function() {\n            var that = this;\n            that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that._columnHeadersWrapper;\n            var rowsHeader = that._rowHeadersWrapper;\n\n            that._resize();\n            that._windowResizeHandler = that._resize.bind(that);\n\n            that._contentWrapper.scroll(function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            $(window).on(RESIZE + NS, that._windowResizeHandler);\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this._contentWrapper.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                this._contentWrapper.scrollTop(scrollTop + (-delta));\n            }\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-pivotgrid\");\n            var emptyCell = $(`<span class=\"k-pivotgrid-empty-cell\" id=\"${this._ariaId}-empty-cell\" role=\"columnheader\"><span class=\"k-sr-only\">${this.options.messages.emptyCellLabel}</span></span>`);\n            this.wrapper.append(emptyCell);\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _updateDimensions: function() {\n            var that = this;\n            that.wrapper.css({\n                \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n            });\n        },\n\n        _setContentWidth: function() {\n            if (!this.options.columnWidth) {\n                return;\n            }\n            var contentTable = this._contentWrapper.find(\"table\");\n            var columnTable = this._columnHeadersWrapper.children(\"table\");\n            var rowTable = this._rowHeadersWrapper.children(\"table\");\n\n            contentTable.add(columnTable).add(rowTable).find(\"col\").width(this.options.columnWidth);\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var dataIndex;\n            var dataItem;\n\n            if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                return null;\n            }\n\n            dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n            dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n            return {\n                columnTuple: dataItem.columnTuple,\n                rowTuple: dataItem.rowTuple,\n                dataItem: dataItem.data\n            };\n        },\n\n        refresh: function() {\n            var that = this;\n\n            var dataSource = that.dataSource;\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            var lastFocusedCellID = kendo._activeElement() ? kendo._activeElement().id : null;\n            var lastCellIdWithTabIndex = that.wrapper.find(\"[tabindex=0]\").attr(\"id\");\n            that._columnBuilder.setTuples(dataSource._columnTuples);\n            that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n            that._rowBuilder.setTuples(dataSource._rowTuples);\n            that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n            that._contentBuilder.setRowColumnInfo({\n                columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                rowHeaderDepth: that._rowBuilder.getBreadth(),\n                data: dataSource._view\n            });\n\n            that._contentWrapper.html(that._contentBuilder.build());\n\n\n            that._setContentWidth();\n            that._updateDimensions();\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n            that._matchAriaAttributes(that.wrapper[0]);\n\n            if (!that.navigation) {\n                return;\n            }\n\n            if (lastCellIdWithTabIndex && that.element.find(`#${lastCellIdWithTabIndex}`).length > 0) {\n                that.element.find(`#${lastCellIdWithTabIndex}`).attr('tabindex', '0');\n            } else {\n                const firstCell = that.navigation.first;\n\n                if (firstCell) {\n                    firstCell.setAttribute('tabindex', '0');\n                }\n            }\n\n            if (lastFocusedCellID && lastFocusedCellID.indexOf(that._ariaId) == 0) {\n                that.navigation.focusElement(that.element.find(`#${lastFocusedCellID}`)[0]);\n            }\n        }\n    });\n\n    ui.plugin(PivotConfiguratorButton);\n    ui.plugin(PivotContainer);\n    ui.plugin(PivotGridV2);\n\n    var PivotGrid = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var columnBuilder;\n            var rowBuilder;\n\n            Widget.fn.init.call(that, element, options);\n\n            STATE_COLLAPSED_ICONNAME = kendo.support.isRtl(that.element) ? \"caret-alt-left\" : \"caret-alt-right\";\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._wrapper();\n            that._createLayout();\n\n            that._columnBuilder = columnBuilder = new ColumnBuilder();\n            that._rowBuilder = rowBuilder = new RowBuilder();\n            that._contentBuilder = new ContentBuilder();\n\n            that._templates();\n\n            that.columnsHeader\n                .add(that.rowsHeader)\n                .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                    var button = $(this);\n                    var builder = columnBuilder;\n                    var action = \"expandColumn\";\n                    var eventName;\n                    var path = button.attr(kendo.attr(\"path\"));\n                    var eventArgs = {\n                        axis: \"columns\",\n                        path: $.parseJSON(path)\n                    };\n\n                    if (button.parent().is(\"td\")) {\n                        builder = rowBuilder;\n                        action = \"expandRow\";\n                        eventArgs.axis = \"rows\";\n                    }\n\n                    var expanded = button.is(STATE_EXPANDED_SELECTOR);\n                    var metadata = builder.metadata[path];\n                    var request = metadata.expanded === undefined$1;\n\n                    eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                    eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                    if (that.trigger(eventName, eventArgs)) {\n                        return;\n                    }\n\n                    builder.metadata[path].expanded = !expanded;\n                    kendo.ui.icon(button,{ icon: !expanded ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME });\n\n                    if (!expanded && request) {\n                        that.dataSource[action](eventArgs.path);\n                    } else {\n                        that.refresh();\n                    }\n                });\n\n            that._scrollable();\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGrid\",\n            autoBind: true,\n            reorderable: true,\n            filterable: false,\n            sortable: false,\n            navigatable: false,\n            height: null,\n            columnWidth: 100,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            kpiStatusTemplate: null,\n            kpiTrendTemplate: null,\n            messages: {\n                measureFields: \"Drop Data Fields Here\",\n                columnFields: \"Drop Column Fields Here\",\n                rowFields: \"Drop Rows Fields Here\"\n            }\n        },\n\n        _templates: function() {\n            var columnTemplate = this.options.columnHeaderTemplate;\n            var rowTemplate = this.options.rowHeaderTemplate;\n            var dataTemplate = this.options.dataCellTemplate;\n            var kpiStatusTemplate = this.options.kpiStatusTemplate;\n            var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n            this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n            this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n            this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n            this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n            this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n            var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n            var dataIndex;\n\n            if (!columnInfo || !rowInfo) {\n                return null;\n            }\n\n            dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n            return {\n                columnTuple: columnInfo.tuple,\n                rowTuple: rowInfo.tuple,\n                measure: columnInfo.measure || rowInfo.measure,\n                dataItem: this.dataSource.view()[dataIndex]\n            };\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measuresTarget) {\n                this.measuresTarget.setDataSource(dataSource);\n            }\n\n            if (this.rowsTarget) {\n                this.rowsTarget.setDataSource(dataSource);\n            }\n\n            if (this.columnsTarget) {\n                this.columnsTarget.setDataSource(dataSource);\n            }\n\n            this._bindConfigurator();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._templates();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            clearTimeout(this._headerReflowTimeout);\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(STATERESET, that._stateResetHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._stateResetHandler = that._stateReset.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(STATERESET, that._stateResetHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _stateReset: function() {\n            this._columnBuilder.reset();\n            this._rowBuilder.reset();\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-pivot\");\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _measureFields: function() {\n            this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-measures\");\n\n            this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                setting: \"measures\",\n                messages: {\n                    empty: this.options.messages.measureFields\n                }\n            });\n        },\n\n        _createSettingTarget: function(element, options) {\n            var template,\n                pivotOptions = this.options;\n\n            template = ({ sortIcon, name }) => ''\n                + `<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" tabindex=\"0\" data-${kendo.ns}name=\"${name}\">`\n                    + '<span class=\"k-chip-content\">'\n                        + `<span class=\"k-chip-text\">${name}</span>`\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">'\n                        + getIcons(sortIcon, options, pivotOptions)\n                    + '</span>'\n                + '</span>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`,\n                enabled: this.options.reorderable\n            }, options));\n        },\n\n        _initSettingTargets: function() {\n            this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                connectWith: this.rowFields,\n                setting: \"columns\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.columnFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                connectWith: this.columnFields,\n                setting: \"rows\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.rowFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n        },\n\n        _createLayout: function() {\n            var that = this;\n            var layoutTable = $(LAYOUT_TABLE);\n            var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n            var rightContainer = layoutTable.find(\".k-pivot-table\");\n            var gridWrapper = $(DIV).addClass(\"k-grid\");\n\n            that._measureFields();\n            that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-columns\");\n\n            that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-rows\");\n            that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                    .wrap('<div class=\"k-grid-header\" />');\n\n            that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n            that.rowsHeader = $('<div class=\"k-grid k-alt\"/>');\n            that.content = $('<div class=\"k-grid-content\" />');\n\n            leftContainer.append(that.measureFields);\n            leftContainer.append(that.rowFields);\n            leftContainer.append(that.rowsHeader);\n\n            gridWrapper.append(that.columnsHeader.parent());\n            gridWrapper.append(that.content);\n\n            rightContainer.append(that.columnFields);\n            rightContainer.append(gridWrapper);\n\n            that.wrapper.append(layoutTable);\n\n            that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n            that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n            that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n            that._initSettingTargets();\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _resize: function() {\n            if (this.content[0].firstChild) {\n                this._setSectionsWidth();\n                this._setSectionsHeight();\n                this._setContentWidth();\n                this._setContentHeight();\n                this._columnHeaderReflow();\n            }\n        },\n\n        _columnHeaderReflow: function() {\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            if (!kendo.support.browser.mozilla) {\n                return;\n            }\n\n            clearTimeout(this._headerReflowTimeout);\n\n            columnTable.css(\"table-layout\", \"auto\");\n\n            this._headerReflowTimeout = setTimeout(function() {\n                columnTable.css(\"table-layout\", \"\");\n            });\n        },\n\n        _setSectionsWidth: function() {\n            var rowsHeader = this.rowsHeader;\n            var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n            var width;\n\n            width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n            width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n            leftColumn.width(width);\n        },\n\n        _setSectionsHeight: function() {\n            var measureFieldsHeight = this.measureFields.height(AUTO).height();\n            var columnFieldsHeight = this.columnFields.height(AUTO).height();\n            var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n            var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n            var padding = rowFieldsHeight - this.rowFields.height();\n\n            var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n            var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n            this.measureFields.height(firstRowHeight);\n            this.columnFields.height(firstRowHeight);\n            this.rowFields.height(secondRowHeight - padding);\n            this.columnsHeader.height(secondRowHeight);\n        },\n\n        _setContentWidth: function() {\n            var contentTable = this.content.find(\"table\");\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            var rowLength = contentTable.children(\"colgroup\").children().length;\n\n            var calculatedWidth = rowLength * this.options.columnWidth;\n            var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n            if (minWidth < 100) {\n                minWidth = 100;\n            }\n\n            contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n            this._resetColspan(columnTable);\n        },\n\n        _setContentHeight: function() {\n            var that = this;\n            var content = that.content;\n            var rowsHeader = that.rowsHeader;\n            var innerHeight = that.wrapper.innerHeight();\n            var scrollbar = kendo.support.scrollbar();\n            var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n            var height = that.options.height;\n\n            if (that.wrapper.is(\":visible\")) {\n                if (!innerHeight || !height) {\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    content.height(\"auto\");\n                    rowsHeader.height(content.height() - scrollbar);\n                    return;\n                }\n\n                innerHeight -= outerHeight(that.columnFields);\n                innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                    innerHeight = scrollbar * 2 + 1;\n                    if (!skipScrollbar) {\n                        innerHeight += scrollbar;\n                    }\n                }\n\n                content.height(innerHeight);\n\n                if (skipScrollbar) {\n                    scrollbar = 0;\n                }\n\n                rowsHeader.height(innerHeight - scrollbar);\n            }\n        },\n\n        _resetColspan: function(columnTable) {\n            var that = this;\n            var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n            if (that._colspan === undefined$1) {\n                that._colspan = cell.attr(\"colspan\");\n            }\n\n            cell.attr(\"colspan\", 1);\n\n            clearTimeout(that._layoutTimeout);\n\n            that._layoutTimeout = setTimeout(function() {\n                cell.attr(\"colspan\", that._colspan);\n                that._colspan = undefined$1;\n            });\n        },\n\n        _axisMeasures: function(axis) {\n            var result = [];\n            var dataSource = this.dataSource;\n            var measures = dataSource.measures();\n            var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n            if (dataSource.measuresAxis() === axis) {\n                if (dataSource[axis]().length === 0 || hasMeasure) {\n                    result = measures;\n                }\n            }\n\n            return result;\n        },\n\n        items: function() {\n            return [];\n        },\n\n        refresh: function() {\n            var that = this;\n            var dataSource = that.dataSource;\n\n            var axes = dataSource.axes();\n            var columns = (axes.columns || {}).tuples || [];\n            var rows = (axes.rows || {}).tuples || [];\n\n            var columnBuilder = that._columnBuilder;\n            var rowBuilder = that._rowBuilder;\n\n            var columnAxis = {};\n            var rowAxis = {};\n\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n            rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n            that.columnsHeaderTree.render(columnBuilder.build(columns));\n            that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n            columnAxis = {\n                indexes: columnBuilder._indexes,\n                measures: columnBuilder.measures,\n                metadata: columnBuilder.metadata\n            };\n\n            rowAxis = {\n                indexes: rowBuilder._indexes,\n                measures: rowBuilder.measures,\n                metadata: rowBuilder.metadata\n            };\n\n            that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n            that._resize();\n\n            if (that.touchScroller) {\n                that.touchScroller.contentResized();\n            } else {\n                var touchScroller = kendo.touchScroller(that.content);\n\n                if (touchScroller && touchScroller.movable) {\n                    that.touchScroller = touchScroller;\n\n                    touchScroller.movable.bind(\"change\", function(e) {\n                        kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                        that.rowsHeader.scrollTop(-e.sender.y);\n                    });\n                }\n            }\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that.columnsHeader;\n            var rowsHeader = that.rowsHeader;\n\n            that.content.on(\"scroll\", function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this.content.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                //In Firefox DOMMouseScroll event cannot be canceled\n                $(e.currentTarget).closest(\":not(path,svg)\").one(\"wheel\" + NS, false);\n\n                this.rowsHeader.scrollTop(scrollTop + (-delta));\n                this.content.scrollTop(scrollTop + (-delta));\n            }\n        }\n    });\n\n    var element = kendo.dom.element;\n    var htmlNode = kendo.dom.html;\n\n    var createMetadata = function(levelNum, memberIdx) {\n       return {\n            maxChildren: 0,\n            children: 0,\n            maxMembers: 0,\n            members: 0,\n            measures: 1,\n            levelNum: levelNum,\n            parentMember: memberIdx !== 0\n        };\n    };\n\n    var buildPath = function(tuple, index) {\n        var path = [];\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            path.push(tuple.members[idx].name);\n        }\n\n        return path;\n    };\n\n    var tupleName = function(tuple, index) {\n        var name = \"\";\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            name += tuple.members[idx].name;\n        }\n\n        return name;\n    };\n\n    var ContentBuilderV2 = Class.extend({\n        init: function(options) {\n            this.template = kendo.template(options.template);\n            this.ariaId = options.ariaId;\n            this.hash = [];\n        },\n\n        setRowColumnInfo: function(options) {\n            this.data = options.data;\n            this.columnHeaderLeafs = options.columnHeaderLeafs;\n            this.rowHeaderLeafs = options.rowHeaderLeafs;\n            this.columnHeaderBreadth = options.columnHeaderBreadth;\n            this.rowHeaderDepth = options.rowHeaderDepth;\n            this.hash.length = 0;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(data) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < data.length; index++) {\n                row = $(`<tr class=\"${tableStyles.tableRow} k-pivotgrid-row\" role='presentation'></tr>`);\n                body.append(row);\n                that.addColumCell(row, data[index], index);\n            }\n\n            this.rowsCount = data.length;\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                var cell = rowItem.cells[index];\n                if (cell) {\n                    var cellEl = $(`<td id=\"${that.ariaId}-cell-${rowIndex + 1}-${index + 1}\" class=\"${tableStyles.tableCell} k-pivotgrid-cell\" role=\"gridcell\"></td>`);\n                    if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                        cellEl.addClass(\"k-pivotgrid-header-total\");\n                    }\n                    cellEl.append(that.template({\n                        dataItem: cell.data,\n                        rowTuple: cell.rowTuple,\n                        columnTuple: cell.columnTuple\n                    }));\n                    this.hash.push(cell);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var data = toData((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n            var that = this;\n\n            var table = $(`<table class='${tableStyles.contentTable} k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='${tableStyles.tbody} k-pivotgrid-tbody' role='presentation'></tbody></table>`);\n\n            that.table = table;\n            that.addColElements(this.columnHeaderLeafs.length);\n            that.addRowElements(data);\n            this.rowsCount = data.length;\n            this.columnsCount = this.columnHeaderLeafs.length;\n\n            return that.table;\n        }\n    });\n\n    var ColumnRowBuilder = Class.extend({\n        init: function(options) {\n            this.tuples = options.tuples;\n            this.axes = options.axes;\n            this.ariaId = options.ariaId;\n            this.headerTemplate = kendo.template(HEADERTEMPLATE);\n            if (options.template) {\n                this.template = kendo.template(options.template);\n            }\n        },\n\n        setTuples: function(tuples) {\n            this.tuples = tuples;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(columnHeaderRows) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < columnHeaderRows.length; index++) {\n                row = $('<tr class=\"k-table-row k-pivotgrid-row\" role=\"row\"></tr>');\n                body.append(row);\n                that.addColumCell(row, columnHeaderRows[index], index);\n            }\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            var cellEl;\n            var cell;\n\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                cell = rowItem.cells[index];\n                if (cell) {\n                    cellEl = $(that.headerTemplate({\n                        id: `${that.ariaId}-${that.axes == \"columns\" ? \"ch\" : \"rh\"}-${rowIndex + 1}-${index + 1}`,\n                        rowspan: cell.rowSpan,\n                        colspan: cell.colSpan,\n                        key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                        iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                        expandable: cell.hasChildren && !cell.total,\n                        expanded: (cell.children && cell.children.length) ? \"true\" : \"false\",\n                        headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\", cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\"),\n                        role: that.axes == \"columns\" ? \"columnheader\" : \"rowheader\"\n                    }));\n                    cellEl.append(that.template ? that.template({ member: cell }) : cell.caption);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var tree = toTree((this.tuples || []).slice());\n            var treeData = this.axes == \"columns\" ? toColumns(tree) : toRows(tree);\n            var headerRows = treeData[0];\n            var headerLeafs = treeData[1];\n            var breadth = treeData[2];\n            var rowHeaderBreadth = treeData[3];\n            var that = this;\n            that._tree = tree;\n            that._breadth = breadth;\n            that._headerLeafs = headerLeafs;\n\n            var table = $(`<table class='${tableStyles.headerTable} k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='${tableStyles.tbody} k-pivotgrid-tbody' role='rowgroup'></tbody></table>`);\n\n            that.table = table;\n            that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n            that.addRowElements(headerRows);\n\n            return that.table;\n        },\n\n        getTree: function() {\n            return this._tree;\n        },\n\n        getBreadth: function() {\n            return this._breadth;\n        },\n\n        getHeaderLeafs: function() {\n            return this._headerLeafs;\n        }\n    });\n\n    var ColumnBuilder = Class.extend({\n        init: function() {\n            this.measures = 1;\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.headerTable }, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.map = {};\n            this.rows = [];\n            this.rootTuple = root;\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"th\", { className: tableStyles.header } , [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n            var row;\n\n            var cellsLength;\n            var cellIdx;\n            var cells;\n            var cell;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                if (row.rowSpan === 1) {\n                    continue;\n                }\n\n                cells = row.children;\n\n                cellIdx = 0;\n                cellsLength = cells.length;\n\n                for (; cellIdx < cellsLength; cellIdx++) {\n                    cell = cells[cellIdx];\n\n                    if (cell.tupleAll) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n                }\n            }\n        },\n\n        _rowIndex: function(row) {\n            var rows = this.rows;\n            var length = rows.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                if (rows[idx] === row) {\n                    break;\n                }\n            }\n\n            return idx;\n        },\n\n        _rowLength: function() {\n            var cells = this.rows[0] ? this.rows[0].children : [];\n            var length = cells.length;\n            var rowLength = 0;\n            var idx = 0;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    rowLength += cells[idx].attr.colSpan || 1;\n                }\n            }\n\n            if (!rowLength) {\n                rowLength = this.measures;\n            }\n\n            return rowLength;\n        },\n\n        _row: function(tuple, memberIdx, parentMember) {\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var levelNum = tuple.members[memberIdx].levelNum;\n            var rowKey = rootName + levelNum;\n            var map = this.map;\n            var parentRow;\n            var children;\n\n            var row = map[rowKey];\n\n            if (!row) {\n                row = element(\"tr\", { className: tableStyles.tableRow }, []);\n\n                row.parentMember = parentMember;\n                row.collapsed = 0;\n                row.colSpan = 0;\n                row.rowSpan = 1;\n\n                map[rowKey] = row;\n                parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                if (parentRow) {\n                    children = parentRow.children;\n\n                    if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                        row.notFirst = true;\n                    } else {\n                        row.notFirst = parentRow.notFirst;\n                    }\n                }\n\n                this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n            } else {\n                row.notFirst = false;\n\n                if (!row.parentMember || row.parentMember !== parentMember) {\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                }\n            }\n\n            return row;\n        },\n\n        _measures: function(measures, tuple, className) {\n            var map = this.map;\n            var row = map.measureRow;\n            var measure;\n\n            if (!row) {\n                row = element(\"tr\", { className: tableStyles.tableRow }, []);\n                map.measureRow = row;\n                this.rows.push(row);\n            }\n\n            for (var idx = 0, length = measures.length; idx < length; idx++) {\n                measure = measures[idx];\n                row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n            }\n\n            return length;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }), true);\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"th\", { className: tableStyles.header + \" \" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx, parentMember) {\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var row, childRow, children, childrenLength;\n            var cell, allCell, cellAttr;\n            var cellChildren = [];\n            var path;\n\n            var idx = 0;\n            var metadata;\n\n            var colSpan;\n            var collapsed = 0;\n            var memberCollapsed = 0;\n\n            if (member.measure) {\n                this._measures(member.children, tuple);\n                return;\n            }\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n            row = this._row(tuple, memberIdx, parentMember);\n\n            children = member.children;\n            childrenLength = children.length;\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    collapsed = metadata.maxChildren;\n                    row.collapsed += collapsed;\n\n                    metadata.children = 0;\n                    childrenLength = 0;\n                }\n\n                let cellIconEl = $(\"<span></span>\");\n                cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n            cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n            row.children.push(cell);\n            row.colSpan += 1;\n\n            if (childrenLength) {\n                allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                row.children.push(allCell);\n\n                for (; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx, member);\n                }\n\n                colSpan = childRow.colSpan;\n                collapsed = childRow.collapsed;\n\n                cell.attr.colSpan = colSpan;\n\n                metadata.children = colSpan;\n                metadata.members = 1;\n\n                row.colSpan += colSpan;\n                row.collapsed += collapsed;\n                row.rowSpan = childRow.rowSpan + 1;\n\n                if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    allCell.attr.colSpan = colSpan;\n                    colSpan -= 1;\n\n                    metadata.members += colSpan;\n                    row.colSpan += colSpan;\n                }\n            } else if (nextMember) {\n                if (nextMember.measure) {\n                    colSpan = this._measures(nextMember.children, tuple);\n                } else {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    colSpan = childRow.colSpan;\n\n                    row.collapsed += childRow.collapsed;\n                    memberCollapsed = childRow.collapsed;\n                }\n\n                metadata.members = colSpan;\n\n                if (colSpan > 1) {\n                    cell.attr.colSpan = colSpan;\n                    row.colSpan += colSpan - 1;\n                }\n            }\n\n            if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                metadata.maxMembers = metadata.members + memberCollapsed;\n            }\n\n            children = metadata.children + collapsed;\n\n            if (metadata.maxChildren < children) {\n                metadata.maxChildren = children;\n            }\n\n            (allCell || cell).tupleAll = true;\n\n            return row;\n        }\n    });\n\n    var RowBuilder = Class.extend({\n        init: function() {\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.table }, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _rowLength: function() {\n            var children = this.rows[0].children;\n            var length = 0;\n            var idx = 0;\n\n            var cell = children[idx];\n\n            while (cell) {\n                length += (cell.attr.colSpan || 1);\n                cell = children[++idx];\n            }\n\n            return length;\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.rootTuple = root;\n            this.rows = [];\n            this.map = {};\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n\n            var members = this.rootTuple.members;\n            var firstMemberName = members[0].name;\n            var membersLength = members.length;\n            var memberIdx = 0;\n\n            var row;\n            var cell;\n            var maxcolSpan;\n            var map = this.map;\n            var allRow;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                    maxcolSpan = this[members[memberIdx].name];\n                    cell = row.colSpan[\"dim\" + memberIdx];\n\n                    if (cell && cell.colSpan < maxcolSpan) {\n                        cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                    }\n                }\n            }\n\n            row = map[firstMemberName];\n            allRow = map[firstMemberName + \"all\"];\n\n            if (row) {\n                row.children[0].attr.className = tableStyles.tableCell + \" k-first\";\n            }\n\n            if (allRow) {\n                allRow.children[0].attr.className += \" k-first \" + tableStyles.tableCell;\n            }\n        },\n\n        _row: function(children) {\n            var row = element(\"tr\", { className: tableStyles.tableRow }, children);\n            row.rowSpan = 1;\n            row.colSpan = {};\n\n            this.rows.push(row);\n\n            return row;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }), true);\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"td\", { className: tableStyles.tableCell + \" \" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx) {\n            var map = this.map;\n            var path;\n\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var children = member.children;\n            var childrenLength = children.length;\n\n            var levelNum = Number(member.levelNum);\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n            var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n            var row = map[parentName + \"all\"] || map[parentName];\n            var colSpan = levelNum + 1;\n\n            var cell, allCell;\n            var childRow, allRow;\n            var metadata;\n            var className;\n            var cellChildren = [];\n            var expandIconAttr;\n            var idx;\n\n            if (!row || row.hasChild) {\n                row = this._row();\n            } else {\n                row.hasChild = true;\n            }\n\n            if (member.measure) {\n                className = row.allCell ? \"k-grid-footer\" : \"\";\n                row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                row.rowSpan = childrenLength;\n\n                for (idx = 1; idx < childrenLength; idx++) {\n                    this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                }\n\n                return row;\n            }\n\n            map[tuplePath + member.name] = row;\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                metadata.rootLevelNum = rootLevelNum;\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    childrenLength = 0;\n                    metadata.children = 0;\n                }\n\n                let cellIconEl = $(\"<span></span>\");\n                cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n\n            className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n            cell = this._cell(className, cellChildren, member);\n            cell.colSpan = colSpan;\n\n            row.children.push(cell);\n            row.colSpan[\"dim\" + memberIdx] = cell;\n\n            if (!this[rootName] || this[rootName] < colSpan) {\n                this[rootName] = colSpan;\n            }\n\n            if (childrenLength) {\n                row.allCell = false;\n                row.hasChild = false;\n\n                for (idx = 0; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx);\n\n                    if (row !== childRow) {\n                        row.rowSpan += childRow.rowSpan;\n                    }\n                }\n\n                if (row.rowSpan > 1) {\n                    cell.attr.rowSpan = row.rowSpan;\n                }\n\n                metadata.children = row.rowSpan;\n\n                allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                allCell.colSpan = colSpan;\n\n                allRow = this._row([ allCell ]);\n                allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                allRow.allCell = true;\n\n                map[tuplePath + member.name + \"all\"] = allRow;\n\n                if (nextMember) {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    allCell.attr.rowSpan = childRow.rowSpan;\n                }\n\n                row.rowSpan += allRow.rowSpan;\n\n                metadata.members = allRow.rowSpan;\n\n            } else if (nextMember) {\n                row.hasChild = false;\n                this._buildRows(tuple, memberIdx + 1);\n\n                (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                metadata.members = row.rowSpan;\n            }\n\n            if (metadata.maxChildren < metadata.children) {\n                metadata.maxChildren = metadata.children;\n            }\n\n            if (metadata.maxMembers < metadata.members) {\n                metadata.maxMembers = metadata.members;\n            }\n\n            return row;\n        }\n    });\n\n    var ContentBuilder = Class.extend({\n        init: function() {\n            this.columnAxis = {};\n            this.rowAxis = {};\n        },\n\n        build: function(data, columnAxis, rowAxis) {\n            var index = columnAxis.indexes[0];\n            var metadata = columnAxis.metadata[index ? index.path : undefined$1];\n\n            this.columnAxis = columnAxis;\n            this.rowAxis = rowAxis;\n\n            this.data = data;\n\n            this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n            if (!this.rowLength) {\n                this.rowLength = 1;\n            }\n\n            var tbody = this._tbody();\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.contentTable }, [colgroup, tbody])\n            ];\n        },\n\n        _colGroup: function() {\n            var length = this.columnAxis.measures.length || 1;\n            var children = [];\n            var idx = 0;\n\n            if (this.rows[0]) {\n                length = this.rows[0].children.length;\n            }\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function() {\n            this.rows = [];\n\n            if (this.data[0]) {\n                this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                this._buildRows();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _indexes: function(axisInfo, total) {\n            var result = [];\n            var axisInfoMember;\n            var indexes = axisInfo.indexes;\n            var metadata = axisInfo.metadata;\n            var measures = axisInfo.measures;\n            var measuresLength = measures.length || 1;\n\n            var current;\n            var dataIdx = 0;\n            var firstEmpty = 0;\n\n            var idx = 0;\n            var length = indexes.length;\n            var measureIdx;\n            var index;\n\n            var children;\n            var skipChildren;\n\n            if (!length) {\n                for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                    result[measureIdx] = {\n                        index: measureIdx,\n                        measure: measures[measureIdx],\n                        tuple: null\n                    };\n                }\n\n                return result;\n            }\n\n            for (; idx < length; idx++) {\n                axisInfoMember = indexes[idx];\n                current = metadata[axisInfoMember.path];\n                children = current.children + current.members;\n                skipChildren = 0;\n\n                if (children) {\n                    children -= measuresLength;\n                }\n\n                if (current.expanded === false && current.children !== current.maxChildren) {\n                    skipChildren = current.maxChildren;\n                }\n\n                if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                    children = -1;\n                }\n\n                if (children > -1) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        index = children + measureIdx;\n                        if (!current.children) {\n                            index += firstEmpty;\n                        }\n\n                        result[children + firstEmpty + measureIdx] = {\n                            children: children,\n                            index: dataIdx,\n                            measure: measures[measureIdx],\n                            tuple: axisInfoMember.tuple\n                        };\n                        dataIdx += 1;\n                    }\n\n                    while (result[firstEmpty] !== undefined$1) {\n                        firstEmpty += 1;\n                    }\n                }\n\n                if (firstEmpty === total) {\n                    break;\n                }\n\n                dataIdx += skipChildren;\n            }\n\n            return result;\n        },\n\n        _buildRows: function() {\n            var rowIndexes = this.rowIndexes;\n            var length = rowIndexes.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                var rowIndex = rowIndexes[idx];\n                if (rowIndex) {\n                    this.rows.push(this._buildRow(rowIndex));\n                }\n            }\n        },\n\n        _buildRow: function(rowInfo) {\n            var startIdx = rowInfo.index * this.rowLength;\n            var columnIndexes = this.columnIndexes;\n            var length = columnIndexes.length;\n            var columnInfo;\n            var cells = [];\n            var idx = 0;\n\n            var templateInfo;\n            var cell, cellContent;\n            var attr, dataItem, measure;\n\n            for (; idx < length; idx++) {\n                columnInfo = columnIndexes[idx];\n\n                if (columnInfo === undefined$1) {\n                    continue;\n                }\n\n                attr = { className: tableStyles.tableCell };\n                if (columnInfo.children) {\n                    attr.className += \" k-alt\";\n                }\n\n                cellContent = \"\";\n                dataItem = this.data[startIdx + columnInfo.index];\n                measure = columnInfo.measure || rowInfo.measure;\n\n                templateInfo = {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: measure,\n                    dataItem: dataItem\n                };\n\n                if (dataItem.value !== \"\" && measure && measure.type) {\n                    if (measure.type === \"status\") {\n                        cellContent = this.kpiStatusTemplate(templateInfo);\n                    } else if (measure.type === \"trend\") {\n                        cellContent = this.kpiTrendTemplate(templateInfo);\n                    }\n                }\n\n                if (!cellContent) {\n                    cellContent = this.dataTemplate(templateInfo);\n                }\n\n                cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                cell.value = dataItem.value;\n                cells.push(cell);\n            }\n\n            attr = { className: tableStyles.tableRow };\n            if (rowInfo.children) {\n                attr.className += \" k-grid-footer\";\n            }\n\n            return element(\"tr\", attr, cells);\n        }\n    });\n\n    ui.plugin(PivotGrid);\n\n    kendo.PivotExcelExporter = kendo.Class.extend({\n        init: function(options) {\n            this.options = options;\n\n            this.widget = options.widget;\n            this.dataSource = this.widget.dataSource;\n        },\n\n        _columns: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var width = this.widget.options.columnWidth;\n            var result = [];\n            var idx;\n\n            if (rowHeaderLength && this.dataSource.data()[0]) {\n                for (idx = 0; idx < rowHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: true\n                    });\n                }\n            }\n\n            for (idx = 0; idx < columnHeaderLength; idx++) {\n                result.push({\n                    autoWidth: false,\n                    width: width\n                });\n            }\n\n            return result;\n        },\n\n        _cells: function(rows, type, callback) {\n            var result = [];\n\n            var i = 0;\n            var length = rows.length;\n\n            var cellsLength;\n            var row, cells;\n            var j, cell;\n\n            for (; i < length; i++) {\n                row = [];\n                cells = rows[i].children;\n                cellsLength = cells.length;\n\n                for (j = 0; j < cellsLength; j++) {\n                    cell = cells[j];\n\n                    row.push({\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: cell.value,\n                        colSpan: cell.attr.colSpan || 1,\n                        rowSpan: cell.attr.rowSpan || 1\n                    });\n                }\n\n                if (callback) {\n                    callback(row, i);\n                }\n\n                result.push({\n                    cells: row,\n                    type: type\n                });\n            }\n\n            return result;\n        },\n\n        _rows: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n            var rowHeaderRows = rowHeaderTable.children[1].children;\n            var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n            var columnRows = this._cells(columnHeaderRows, \"header\");\n\n            if (rowHeaderLength) {\n                columnRows[0].cells.splice(0, 0, {\n                    background: \"#7a7a7a\",\n                    color: \"#fff\",\n                    value: \"\",\n                    colSpan: rowHeaderLength,\n                    rowSpan: columnHeaderRows.length\n                });\n            }\n\n            var dataCallback = function(row, index) {\n                var j = 0;\n                var cell, value;\n                var cells = contentRows[index].children;\n\n                for (; j < columnHeaderLength; j++) {\n                    cell = cells[j];\n                    value = Number(cell.value);\n\n                    if (isNaN(value)) {\n                        value = cell.value;\n                    }\n\n                    row.push({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: value,\n                        colSpan: 1,\n                        rowSpan: 1\n                    });\n                }\n            };\n\n            var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n            return columnRows.concat(rowRows);\n        },\n\n        _freezePane: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n\n            return {\n                colSplit: rowHeaderLength,\n                rowSplit: columnHeaderRows.length\n            };\n        },\n\n        workbook: function() {\n            var promise,\n                resolveFn = function() {\n                    return {\n                        sheets: [ {\n                            columns: this._columns(),\n                            rows: this._rows(),\n                            freezePane: this._freezePane(),\n                            filter: null\n                        } ]\n                    };\n                };\n\n            if (this.dataSource.view()[0]) {\n                promise = $.Deferred();\n                promise.resolve();\n            } else {\n                promise = this.dataSource.fetch();\n            }\n\n            return promise.then(resolveFn.bind(this));\n        }\n    });\n\n    var PivotExcelMixin = {\n        extend: function(proto) {\n           proto.events.push(\"excelExport\");\n           proto.options.excel = $.extend(proto.options.excel, this.options);\n           proto.saveAsExcel = this.saveAsExcel;\n        },\n        options: {\n            proxyURL: \"\",\n            filterable: false,\n            fileName: \"Export.xlsx\"\n        },\n        saveAsExcel: function() {\n            var excel = this.options.excel || {};\n\n            var exporter = new kendo.PivotExcelExporter({\n                widget: this\n            });\n\n            var resolveFn = function(book) {\n                if (!this.trigger(\"excelExport\", { workbook: book })) {\n                    var workbook = new kendo.ooxml.Workbook(book);\n\n                    workbook.toDataURLAsync().then(function(dataURI) {\n                        kendo.saveAs({\n                            dataURI: dataURI,\n                            fileName: book.fileName || excel.fileName,\n                            proxyURL: excel.proxyURL,\n                            forceProxy: excel.forceProxy\n                        });\n                    });\n                }\n            };\n\n            exporter.workbook().then(resolveFn.bind(this));\n        }\n    };\n\n    kendo.PivotExcelMixin = PivotExcelMixin;\n\n    if (kendo.ooxml && kendo.ooxml.Workbook) {\n        PivotExcelMixin.extend(PivotGrid.prototype);\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGrid.prototype);\n\n        PivotGrid.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n        PivotGridV2.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}