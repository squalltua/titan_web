{"version":3,"file":"kendo.window.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","templates","kendo","window","Widget","ui","TabKeyTrap","Popup","Draggable","isPlainObject","activeElement","_activeElement","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","each","template","BODY","NS","MODAL_NS","KWINDOW","KWINDOWTITLE","KWINDOWTITLEBAR","KWINDOWCONTENT","KWINDOWRESIZEHANDLES","KOVERLAY","KWINDOWMINIMIZED","KCONTENTFRAME","LOADINGICONCLASS","KHOVERSTATE","KFOCUSEDSTATE","MAXIMIZEDSTATE","INLINE_FLEX","VISIBLE","HIDDEN","CURSOR","OPEN","ACTIVATE","DEACTIVATE","CLOSE","REFRESH","RESIZESTART","RESIZEEND","DRAGSTART","DRAGEND","RESTORE","ERROR","OVERFLOW","DATADOCOVERFLOWRULE","ZINDEX","MINIMIZE_MAXIMIZEICONSELECTORS","KPINICONCLASSSELECTOR","KUNPINICONCLASSSELECTOR","PIN_UNPINICONCLASSSELECTOR","TITLEBAR_BUTTONSSELECTOR","REFRESHICONSELECTOR","WINDOWEVENTSHANDLED","zero","isLocalUrl","SIZE","small","medium","large","defined","x","toInt","element","property","parseInt","css","constrain","value","low","high","isNaN","toString","indexOf","Math","max","min","Infinity","executableScript","this","type","toLowerCase","getPosition","elem","result","top","offsetTop","left","offsetLeft","parent","offsetParent","parentOverflowX","parentOverflowY","scrollTop","scrollLeft","Window","init","options","wrapper","visibility","display","position","content","windowContent","globalWindow","that","offset","suppressActions","actions","length","fn","call","appendTo","containment","draggable","first","url","find","filter","remove","is","document","body","contains","visible","closest","themeColor","addClass","getValidCssClass","attr","_createWindow","title","_dimensions","_footerTemplate","append","_footerMessages","minTop","minLeft","maxTop","maxLeft","_position","refresh","toFront","modal","children","_overlay","opacity","on","_buttonEnter","bind","_buttonLeave","_windowActionHandler","_keydown","_focus","_blur","_keydownContent","data","widgetInstance","not","i","_resizable","_draggable","pinned","pin","role","add","support","mousedown","touchScroller","_resizeHandler","_onDocumentResize","_marker","guid","substring","trigger","notify","_tabKeyTrap","trap","shouldTrap","_showWatermarkOverlay","e","currentTarget","removeClass","width","height","maxHeight","sizeClass","size","dimensions","contentBoxSizing","lrBorderWidth","tbBorderWidth","paddingTop","_isPinned","_updateBoundaries","maxWidth","minWidth","minHeight","hide","containmentTop","containmentLeft","parseFloat","Number","replace","innerWidth","innerHeight","clientWidth","scrollbar","clientHeight","_animationOptions","animation","open","effects","close","_resize","resize","resizable","resizing","off","destroy","target","toggleMaximization","split","index","handler","resizeHandle","WindowResizing","dragging","WindowDragging","dragHandle","clickMoveClick","_actions","icon","container","windowSpecificCommands","icons","maximize","custom","map","action","html","render","setOptions","doc","cachedOptions","JSON","parse","stringify","_containerScrollTop","_containerScrollLeft","scrollable","restore","_enableDocumentScrolling","events","zoom","direction","fade","duration","properties","scale","autoFocus","isMaximized","isMinimized","_closable","inArray","keys","keyCode","ESC","stopPropagation","_close","handled","newWidth","newHeight","w","h","distance","_closing","altKey","unpin","UP","DOWN","minimize","getOffset","ctrlKey","LEFT","RIGHT","preventDefault","overlay","zIndex","insertBefore","preventScroll","_stopDocumentScrolling","_actionForIcon","exec","className","_modals","windowInstance","windowElements","modals","_object","push","sort","a","b","style","widget","center","newTop","newLeft","documentWindow","_scrollIsAppended","encoded","titleBar","titleElement","arguments","text","htmlEncode","prepend","titlebar","scrollContainer","empty","otherModalsVisible","showOptions","contentElement","kendoStop","Fade","overlayFx","fx","fadeIn","endValue","play","show","kendoAnimate","complete","_activate","_removeOverlay","suppressAnimation","hideOverlay","hideOptions","fadeOut","startValue","last","systemTriggered","defaultPrevented","userTriggered","reverse","_deactivate","iframe","lastModal","_actionable","_shouldFocus","active","avoidFocus","currentWindow","containmentContext","openAnimation","originalZIndex","windowObject","zIndexNew","setTimeout","focus","windowTop","restoreOptions","end","removeAttr","_sizingAction","actionId","callback","eq","before","toggle","_storeOverflowRule","$body","$html","_restoreOverflowRule","$element","_isOverflowStored","overflowRule","get","overflow","removeData","win","pinIcon","wnd","zoomLevel","showIframe","initOptions","src","contentFrame","_triggerRefresh","_ajaxRequest","toggleClass","_ajaxComplete","clearTimeout","_loadingIconTimeout","_ajaxError","xhr","status","_ajaxSuccess","contentTemplate","prop","_showLoading","ajax","dataType","cache","error","success","_destroy","unbind","iframeSrcAttributes","contentHtml","isRtl","getAttribute","editor","owner","_preventDragging","group","dragstart","drag","dragend","userEvents","addOverlay","removeOverlay","dragcancel","iconName","renderButton","fillMode","prototype","elementPadding","initialPosition","resizeDirection","initialSize","containerOffset","marginTop","marginLeft","test","wrapperPosition","relativeElMarginLeft","relativeElMarginTop","_relativeElMarginLeft","_relativeElMarginTop","windowBottom","windowRight","rtl","leftRtlOffset","scrollOffset","location","y","newWindowTop","reset","initialWindowPosition","initialPointerPosition","startPosition","client","axis","transforms","_finishDrag","plugin","jQuery","kendo$1"],"sources":["kendo.window.js"],"mappings":"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","sourcesContent":["import './kendo.draganddrop.js';\nimport './kendo.popup.js';\nimport './kendo.icons.js';\nimport './kendo.html.button.js';\n\nvar __meta__ = {\n        id: \"window\",\n        name: \"Window\",\n        category: \"web\",\n        description: \"The Window widget displays content in a modal or non-modal HTML window.\",\n        depends: [ \"draganddrop\", \"popup\", \"icons\" ],\n        features: [ {\n            id: \"window-fx\",\n            name: \"Animation\",\n            description: \"Support for animation\",\n            depends: [ \"fx\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n            Draggable = kendo.ui.Draggable,\n            isPlainObject = $.isPlainObject,\n            activeElement = kendo._activeElement,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            each = $.each,\n            template = kendo.template,\n            BODY = \"body\",\n            templates,\n            NS = \".kendoWindow\",\n            MODAL_NS = \".kendoWindowModal\",\n            // classNames\n            KWINDOW = \".k-window\",\n            KWINDOWTITLE = \".k-window-title\",\n            KWINDOWTITLEBAR = KWINDOWTITLE + \"bar\",\n            KWINDOWCONTENT = \".k-window-content\",\n            KDIALOGCONTENT = \".k-dialog-content\",\n            KWINDOWRESIZEHANDLES = \".k-resize-handle\",\n            KOVERLAY = \".k-overlay\",\n            KWINDOWMINIMIZED = \"k-window-minimized\",\n            KCONTENTFRAME = \"k-content-frame\",\n            LOADINGICONCLASS = \"k-i-loading\",\n            KHOVERSTATE = \"k-hover\",\n            KFOCUSEDSTATE = \"k-focus\",\n            MAXIMIZEDSTATE = \"k-window-maximized\",\n            INLINE_FLEX = \"k-display-inline-flex\",\n            // constants\n            VISIBLE = \":visible\",\n            HIDDEN = \"hidden\",\n            CURSOR = \"cursor\",\n            // events\n            OPEN = \"open\",\n            ACTIVATE = \"activate\",\n            DEACTIVATE = \"deactivate\",\n            CLOSE = \"close\",\n            REFRESH = \"refresh\",\n            MINIMIZE = \"minimize\",\n            MAXIMIZE = \"maximize\",\n            RESIZESTART = \"resizeStart\",\n            RESIZE = \"resize\",\n            RESIZEEND = \"resizeEnd\",\n            DRAGSTART = \"dragstart\",\n            DRAGEND = \"dragend\",\n            RESTORE = \"restore\",\n            KENDOKEYDOWN = \"kendoKeydown\",\n            ERROR = \"error\",\n            OVERFLOW = \"overflow\",\n            DATADOCOVERFLOWRULE = \"original-overflow-rule\",\n            ZINDEX = \"zIndex\",\n            MINIMIZE_MAXIMIZEICONSELECTORS = \".k-window-titlebar-actions .k-i-window-minimize,.k-window-titlebar-actions .k-i-window,.k-window-titlebar-actions .k-svg-i-window-minimize,.k-window-titlebar-actions .k-svg-i-window\",\n            KPINICONCLASSSELECTOR = \".k-i-pin,.k-svg-i-pin\",\n            KUNPINICONCLASSSELECTOR = \".k-i-unpin,.k-svg-i-unpin\",\n            PIN_UNPINICONCLASSSELECTOR = KPINICONCLASSSELECTOR + \",\" + KUNPINICONCLASSSELECTOR,\n            TITLEBAR_BUTTONSSELECTOR = \".k-window-titlebar .k-window-titlebar-action\",\n            REFRESHICONSELECTOR = \".k-window-titlebar .k-i-arrow-rotate-cw,.k-window-titlebar .k-svg-i-arrow-rotate-cw\",\n            WINDOWEVENTSHANDLED = \"WindowEventsHandled\",\n            zero = /^0[a-z]*$/i,\n            isLocalUrl = kendo.isLocalUrl,\n            SIZE = {\n                small: \"k-window-sm\",\n                medium: \"k-window-md\",\n                large: \"k-window-lg\"\n            };\n\n        function defined(x) {\n            return (typeof x != \"undefined\");\n        }\n\n        function toInt(element, property) {\n            return parseInt(element.css(property), 10) || 0;\n        }\n\n        function constrain(value, low, high) {\n            var normalizedValue;\n\n            if (value && isNaN(value) && value.toString().indexOf(\"px\") < 0) {\n                normalizedValue = value;\n            } else {\n                normalizedValue = Math.max(\n                    Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)),\n                    low === -Infinity ? low : parseInt(low, 10)\n                );\n            }\n\n            return normalizedValue;\n        }\n\n        function executableScript() {\n            return !this.type || this.type.toLowerCase().indexOf(\"script\") >= 0;\n        }\n\n\n        function getPosition(elem) {\n            var result = { top: elem.offsetTop, left: elem.offsetLeft },\n                parent = elem.offsetParent;\n\n            while (parent) {\n                result.top += parent.offsetTop;\n                result.left += parent.offsetLeft;\n\n                var parentOverflowX = $(parent).css(\"overflowX\");\n                var parentOverflowY = $(parent).css(\"overflowY\");\n\n                if (parentOverflowY === \"auto\" || parentOverflowY === \"scroll\") {\n                    result.top -= parent.scrollTop;\n                }\n\n                if (parentOverflowX === \"auto\" || parentOverflowX === \"scroll\") {\n                    result.left -= parent.scrollLeft;\n                }\n\n                parent = parent.offsetParent;\n            }\n\n            return result;\n        }\n\n        var Window = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    wrapper,\n                    offset = {},\n                    visibility, display, position,\n                    isVisible = false,\n                    content,\n                    windowContent,\n                    windowFrame,\n                    globalWindow,\n                    suppressActions = options && options.actions && !options.actions.length,\n                    id;\n\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                position = options.position;\n                element = that.element;\n                content = options.content;\n                globalWindow = $(window);\n\n                if (suppressActions) {\n                    options.actions = [];\n                }\n\n                that.appendTo = $(options.appendTo);\n\n                that.containment = options.draggable.containment ? $(options.draggable.containment).first() : null;\n\n                if (content && !isPlainObject(content)) {\n                    content = options.content = { url: content };\n                }\n\n                // remove script blocks to prevent double-execution\n                element.find(\"script\").filter(executableScript).remove();\n\n                if (!element.parent().is(that.appendTo) && !that.containment && (position.top === undefined$1 || position.left === undefined$1)) {\n                    if (element.is(VISIBLE)) {\n                        offset = element.offset();\n                        isVisible = true;\n                    } else {\n                        visibility = element.css(\"visibility\");\n                        display = element.css(\"display\");\n\n                        element.css({ visibility: HIDDEN, display: \"\" });\n\n                        if (document.body.contains(element[0])) {\n                            offset = element.offset();\n                        } else {\n                            offset = { top: 0, left: 0 };\n                        }\n\n                        element.css({ visibility: visibility, display: display });\n                    }\n\n                    if (position.top === undefined$1) {\n                        position.top = offset.top;\n                    }\n                    if (position.left === undefined$1) {\n                        position.left = offset.left;\n                    }\n                }\n\n                if (!defined(options.visible) || options.visible === null) {\n                    options.visible = element.is(VISIBLE);\n                }\n\n                wrapper = that.wrapper = element.closest(KWINDOW);\n\n                if (options.themeColor && options.themeColor !== \"none\") {\n                    wrapper.addClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", options.themeColor));\n                }\n\n                if (!element.is(\".k-window-content\") || !wrapper[0]) {\n                    element.addClass(\"k-window-content\");\n                    element.attr(\"tabindex\", 0);\n                    that._createWindow(element, options);\n                    wrapper = that.wrapper = element.closest(KWINDOW);\n\n                    that.title(that.options.title);\n                    that._dimensions();\n\n                    if (options._footerTemplate) {\n                        that.wrapper.append(kendo.template(options._footerTemplate)(options._footerMessages));\n                    }\n                }\n\n                that.minTop = that.minLeft = -Infinity;\n                that.maxTop = that.maxLeft = Infinity;\n                that._position();\n\n                if (content) {\n                    that.refresh(content);\n                }\n\n                if (options.visible) {\n                    that.toFront(null, !options.modal);\n                }\n\n                windowContent = wrapper.children(KWINDOWCONTENT);\n\n                if (options.visible && options.modal) {\n                    that._overlay(wrapper.is(VISIBLE)).css({ opacity: 0.5 });\n                }\n\n                wrapper\n                    .on(\"mouseenter\" + NS, TITLEBAR_BUTTONSSELECTOR, that._buttonEnter.bind(that))\n                    .on(\"mouseleave\" + NS, TITLEBAR_BUTTONSSELECTOR, that._buttonLeave.bind(that))\n                    .on(\"click\" + NS, \"> \" + TITLEBAR_BUTTONSSELECTOR, that._windowActionHandler.bind(that))\n                    .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                    .on(\"focus\" + NS, that._focus.bind(that))\n                    .on(\"blur\" + NS, that._blur.bind(that));\n\n                windowContent\n                    .on(\"keydown\" + NS, that, that._keydownContent.bind(that));\n\n                windowFrame = windowContent.find(\".\" + KCONTENTFRAME)[0];\n\n                if (windowFrame && !globalWindow.data(WINDOWEVENTSHANDLED)) {\n\n                    globalWindow.on(\"blur\" + NS, function() {\n                        var element = $(document.activeElement).parent(KWINDOWCONTENT);\n                        if (element.length) {\n                            var windowInstance = kendo.widgetInstance(element);\n                            windowInstance._focus();\n                        }\n                    });\n\n                    globalWindow.on(\"focus\" + NS, function() {\n                        $(KWINDOWCONTENT).not(KDIALOGCONTENT).each(function(i, element) {\n                            kendo.widgetInstance($(element))._blur();\n                        });\n                    });\n\n                    globalWindow.data(WINDOWEVENTSHANDLED, true);\n                }\n\n                this._resizable();\n\n                this._draggable();\n\n                if (options.pinned && this.wrapper.is(\":visible\")) {\n                    that.pin();\n                }\n\n                id = element.attr(\"id\");\n                if (id) {\n                    id = id + \"_wnd_title\";\n                    wrapper.attr({\n                            \"role\": \"dialog\",\n                            \"aria-labelledby\": id\n                        }).children(KWINDOWTITLEBAR)\n                        .children(KWINDOWTITLE)\n                        .attr(\"id\", id);\n                }\n\n                wrapper.add(wrapper.children(\".k-resize-handle,\" + KWINDOWTITLEBAR))\n                    .on(kendo.support.mousedown + NS, that.toFront.bind(that));\n\n                that.touchScroller = kendo.touchScroller(element);\n\n                that._resizeHandler = that._onDocumentResize.bind(that);\n\n                that._marker = kendo.guid().substring(0, 8);\n\n                $(window).on(\"resize\" + NS + that._marker, that._resizeHandler);\n\n                if (options.visible) {\n                    that.trigger(OPEN);\n                    that.trigger(ACTIVATE);\n                }\n\n                kendo.notify(that);\n\n                if (this.options.modal) {\n                    this._tabKeyTrap = new TabKeyTrap(wrapper);\n                    this._tabKeyTrap.trap();\n                    this._tabKeyTrap.shouldTrap = function() {\n                        return wrapper.data(\"isFront\");\n                    };\n                }\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.wrapper[0]);\n                }\n            },\n\n            _buttonEnter: function(e) {\n                $(e.currentTarget).addClass(KHOVERSTATE);\n            },\n\n            _buttonLeave: function(e) {\n                $(e.currentTarget).removeClass(KHOVERSTATE);\n            },\n\n            _focus: function() {\n                this.wrapper.addClass(KFOCUSEDSTATE);\n            },\n\n            _blur: function() {\n                this.wrapper.removeClass(KFOCUSEDSTATE);\n            },\n\n            _dimensions: function() {\n                var wrapper = this.wrapper;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var maxHeight = options.maxHeight;\n                var sizeClass = options.size;\n                var dimensions = [\"minWidth\",\"minHeight\",\"maxWidth\",\"maxHeight\"];\n                var contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\";\n\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                if (this.containment && !this._isPinned) {\n                    this._updateBoundaries();\n                    options.maxHeight = Math.min(this.containment.height - (tbBorderWidth + paddingTop), maxHeight);\n                    options.maxWidth = Math.min(this.containment.width - lrBorderWidth, options.maxWidth);\n                }\n\n                for (var i = 0; i < dimensions.length; i++) {\n                    var value = options[dimensions[i]] || \"\";\n                    if (value != Infinity) {\n                        wrapper.css(dimensions[i], value);\n                    }\n                }\n\n                if (maxHeight != Infinity) {\n                    this.element.css(\"maxHeight\", maxHeight);\n                }\n\n                if (width) {\n                    wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                }\n                else {\n                    wrapper.outerWidth(\"\");\n                }\n\n                if (height) {\n                    wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                }\n                else {\n                    wrapper.outerHeight(\"\");\n                }\n\n                if (!options.visible) {\n                    wrapper.removeClass(INLINE_FLEX).hide();\n                }\n\n                if (sizeClass && SIZE[sizeClass]) {\n                    wrapper.addClass(SIZE[sizeClass]);\n                }\n            },\n\n            _position: function() {\n                var wrapper = this.wrapper,\n                    position = this.options.position,\n                    containmentTop, containmentLeft;\n\n                this._updateBoundaries();\n\n                if (this.containment) {\n                    position.top = position.top || 0;\n                    position.left = position.left || 0;\n\n                    containmentTop = position.top.toString().indexOf(\"%\") > 0 ?\n                        parseInt(this.containment.height * (parseFloat(position.top) / 100), 10) :\n                        position.top;\n\n                    containmentLeft = position.left.toString().indexOf(\"%\") > 0 ?\n                        parseInt(this.containment.width * (parseFloat(position.left) / 100), 10) :\n                        position.left;\n\n                    position.top = constrain(containmentTop, this.minTop, this.maxTop);\n                    position.left = constrain(containmentLeft, this.minLeft, this.maxLeft);\n                }\n\n                if (position.top && position.top.toString().indexOf(\"px\") > 0) {\n                    position.top = Number(position.top.replace(\"px\", \"\"));\n                }\n\n                if (position.left && position.left.toString().indexOf(\"px\") > 0) {\n                    position.left = Number(position.left.replace(\"px\", \"\"));\n                }\n\n                if (position.top === 0) {\n                    position.top = position.top.toString();\n                }\n\n                if (position.left === 0) {\n                    position.left = position.left.toString();\n                }\n\n                wrapper.css({\n                    top: position.top || \"\",\n                    left: position.left || \"\"\n                });\n            },\n\n            _updateBoundaries: function() {\n                var containment = this.containment;\n\n                if (!containment) {\n                    return null;\n                }\n\n                containment.width = containment.innerWidth();\n                containment.height = containment.innerHeight();\n\n                if (parseInt(containment.width, 10) > containment[0].clientWidth) {\n                    containment.width -= kendo.support.scrollbar();\n                }\n\n                if (parseInt(containment.height, 10) > containment[0].clientHeight) {\n                    containment.height -= kendo.support.scrollbar();\n                }\n\n                containment.position = getPosition(containment[0]);\n\n                if (this._isPinned) {\n                    this.minTop = this.minLeft = -Infinity;\n                    this.maxTop = this.maxLeft = Infinity;\n                } else {\n                    this.minTop = containment.scrollTop();\n                    this.minLeft = containment.scrollLeft();\n                    this.maxLeft = this.minLeft + containment.width - outerWidth(this.wrapper, true);\n                    this.maxTop = this.minTop + containment.height - outerHeight(this.wrapper, true);\n                }\n            },\n\n            _animationOptions: function(id) {\n                var animation = this.options.animation;\n                var basicAnimation = {\n                    open: { effects: {} },\n                    close: { hide: true, effects: {} }\n                };\n\n                return animation && animation[id] || basicAnimation[id];\n            },\n\n            _resize: function() {\n                kendo.resize(this.element.children());\n            },\n\n            _resizable: function() {\n                var resizable = this.options.resizable;\n                var wrapper = this.wrapper;\n\n                if (this.resizing) {\n                    wrapper\n                        .off(\"dblclick\" + NS)\n                        .children(KWINDOWRESIZEHANDLES).remove();\n\n                    this.resizing.destroy();\n                    this.resizing = null;\n                }\n\n                if (resizable) {\n                    wrapper.on(\"dblclick\" + NS, KWINDOWTITLEBAR, (function(e) {\n                        if (!$(e.target).closest(\".k-window-titlebar-action\").length) {\n                            this.toggleMaximization();\n                        }\n                    }).bind(this));\n\n                    each(\"n e s w se sw ne nw\".split(\" \"), function(index, handler) {\n                        wrapper.append(templates.resizeHandle(handler));\n                    });\n\n                    this.resizing = new WindowResizing(this);\n                }\n\n                wrapper = null;\n            },\n\n            _draggable: function() {\n                var draggable = this.options.draggable;\n\n                if (this.dragging) {\n                    this.dragging.destroy();\n                    this.dragging = null;\n                }\n                if (draggable) {\n                    this.dragging = new WindowDragging(this, draggable.dragHandle || KWINDOWTITLEBAR, draggable.clickMoveClick);\n                }\n            },\n\n            _actions: function() {\n                var options = this.options;\n                var actions = options.actions;\n                var pinned = options.pinned;\n                var titlebar = this.wrapper.children(KWINDOWTITLEBAR);\n                var container = titlebar.find(\".k-window-titlebar-actions\");\n                var windowSpecificCommands = [ \"minimize\", \"maximize\" ];\n                var icons = {\n                    \"maximize\": \"window\",\n                    \"refresh\": \"arrow-rotate-cw\",\n                    \"custom\": \"gear\"\n                };\n                var icon;\n\n                actions = $.map(actions, function(action) {\n                    action = pinned && action.toLowerCase() === \"pin\" ? \"unpin\" : action;\n                    icon = icons[action.toLowerCase()] || \"\";\n                    return { name: (windowSpecificCommands.indexOf(action.toLowerCase()) > - 1) ? \"window-\" + action : action, icon: action.toLowerCase() == \"close\" ? \"x\" : icon };\n                });\n\n                container.html(kendo.render(templates.action, actions));\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                var sizeClass = that.options.size;\n                var doc = this.containment && !that._isPinned ? this.containment : $(document);\n                // make a deep extend over options.position telerik/kendo-ui-core#844\n                var cachedOptions = JSON.parse(JSON.stringify(options));\n\n                that.wrapper.removeClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", that.options.themeColor));\n\n                extend(options.position, that.options.position);\n                extend(options.position, cachedOptions.position);\n\n                that._containerScrollTop = doc.scrollTop();\n                that._containerScrollLeft = doc.scrollLeft();\n\n                Widget.fn.setOptions.call(that, options);\n                var scrollable = that.options.scrollable !== false;\n\n                that.restore();\n\n                if (typeof options.title !== \"undefined\") {\n                    that.title(options.title);\n                }\n\n                that.wrapper.removeClass(SIZE[sizeClass]);\n                that._dimensions();\n\n                that._position();\n                that._resizable();\n                that._draggable();\n                that._actions();\n\n                if (that.options.themeColor && that.options.themeColor !== \"none\") {\n                    that.wrapper.addClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", that.options.themeColor));\n                }\n\n                if (typeof options.modal !== \"undefined\") {\n                    var visible = that.options.visible !== false;\n                    that._enableDocumentScrolling();\n                    that._overlay(options.modal && visible);\n                }\n\n                that.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n            },\n\n            events: [\n                OPEN,\n                ACTIVATE,\n                DEACTIVATE,\n                CLOSE,\n                MINIMIZE,\n                MAXIMIZE,\n                REFRESH,\n                RESTORE,\n                RESIZESTART,\n                RESIZE,\n                RESIZEEND,\n                DRAGSTART,\n                DRAGEND,\n                KENDOKEYDOWN,\n                ERROR\n            ],\n\n            options: {\n                name: \"Window\",\n                animation: {\n                    open: {\n                        effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                        duration: 350\n                    },\n                    close: {\n                        effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                        duration: 350,\n                        hide: true\n                    }\n                },\n                title: \"\",\n                themeColor: \"\",\n                actions: [\"Close\"],\n                autoFocus: true,\n                modal: false,\n                size: \"auto\",\n                resizable: true,\n                draggable: true,\n                minWidth: 90,\n                minHeight: 50,\n                maxWidth: Infinity,\n                maxHeight: Infinity,\n                pinned: false,\n                scrollable: true,\n                position: {},\n                content: null,\n                visible: null,\n                height: null,\n                width: null,\n                appendTo: \"body\",\n                isMaximized: false,\n                isMinimized: false\n            },\n\n            _closable: function() {\n                return $.inArray(\"close\", $.map(this.options.actions, function(x) { return x.toLowerCase(); })) > -1;\n            },\n\n            _keydownContent: function(e) {\n                var that = this,\n                    keys = kendo.keys,\n                    keyCode = e.keyCode;\n\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    options = that.options,\n                    keys = kendo.keys,\n                    keyCode = e.keyCode,\n                    wrapper = that.wrapper,\n                    offset, handled,\n                    distance = 10,\n                    isMaximized = options.isMaximized,\n                    isMinimized = options.isMinimized,\n                    newWidth, newHeight, w, h;\n\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n\n                if (e.target != e.currentTarget || that._closing) {\n                    return;\n                }\n\n                 // Refresh\n                if (e.altKey && keyCode == 82) {// Alt + R\n                    that.refresh();\n                }\n\n                // Pin/Unpin\n                if (e.altKey && keyCode == 80) {// Alt + P\n                    if (that.options.pinned) {\n                        that.unpin();\n                    } else {\n                        that.pin();\n                    }\n                }\n\n                // Maximize/Restore/Miminimize\n                if (e.altKey && keyCode == keys.UP) {\n                    if (isMinimized) {\n                        that.restore();\n                        that.wrapper.trigger(\"focus\");\n                    } else if (!isMaximized) {\n                        that.maximize();\n                        that.wrapper.trigger(\"focus\");\n                    }\n                } else if (e.altKey && keyCode == keys.DOWN) {\n                    if (!isMinimized && !isMaximized) {\n                        that.minimize();\n                        that.wrapper.trigger(\"focus\");\n                    } else if (isMaximized) {\n                        that.restore();\n                        that.wrapper.trigger(\"focus\");\n                    }\n                }\n\n                offset = kendo.getOffset(wrapper);\n\n                if (that.containment && !that._isPinned) {\n                    offset = that.options.position;\n                }\n\n                if (options.draggable && !e.ctrlKey && !e.altKey && !isMaximized) {\n                    that._updateBoundaries();\n                    if (keyCode == keys.UP) {\n                        offset.top = constrain(offset.top - distance, that.minTop, that.maxTop);\n                        handled = wrapper.css(\"top\", offset.top);\n                    } else if (keyCode == keys.DOWN) {\n                        offset.top = constrain(offset.top + distance, that.minTop, that.maxTop);\n                        handled = wrapper.css(\"top\", offset.top);\n                    } else if (keyCode == keys.LEFT) {\n                        offset.left = constrain(offset.left - distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css(\"left\", offset.left);\n                    } else if (keyCode == keys.RIGHT) {\n                        offset.left = constrain(offset.left + distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css(\"left\", offset.left);\n                    }\n                }\n\n                if (options.resizable && e.ctrlKey && !isMaximized && !isMinimized) {\n                    if (keyCode == keys.UP) {\n                        handled = true;\n                        newHeight = wrapper.outerHeight() - distance;\n                    } else if (keyCode == keys.DOWN) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newHeight = Math.min(wrapper.outerHeight() + distance,\n                                that.containment.height - offset.top - toInt(wrapper, \"padding-top\") -\n                                toInt(wrapper, \"borderBottomWidth\") - toInt(wrapper, \"borderTopWidth\"));\n                        } else {\n                            newHeight = wrapper.outerHeight() + distance;\n                        }\n                    } if (keyCode == keys.LEFT) {\n                        handled = true;\n                        newWidth = wrapper.outerWidth() - distance;\n                    } else if (keyCode == keys.RIGHT) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newWidth = Math.min(wrapper.outerWidth() + distance,\n                                                that.containment.width - offset.left -\n                                                toInt(wrapper, \"borderLeftWidth\") - toInt(wrapper, \"borderRightWidth\"));\n                        } else {\n                            newWidth = wrapper.outerWidth() + distance;\n                        }\n                    }\n\n                    if (handled) {\n                        w = constrain(newWidth, options.minWidth, options.maxWidth);\n                        h = constrain(newHeight, options.minHeight, options.maxHeight);\n\n                        if (!isNaN(w)) {\n                            wrapper.outerWidth(w);\n                            that.options.width = w + \"px\";\n                        }\n                        if (!isNaN(h)) {\n                            wrapper.outerHeight(h);\n                            that.options.height = h + \"px\";\n                        }\n\n                        that.resize();\n                    }\n                }\n\n                if (handled) {\n                    e.preventDefault();\n                }\n            },\n\n            _overlay: function(visible) {\n                var overlay = this.containment ? this.containment.children(KOVERLAY) : this.appendTo.children(KOVERLAY),\n                    wrapper = this.wrapper,\n                    display = visible ? \"inline-flex\" : \"none\",\n                    zIndex = parseInt(wrapper.css(ZINDEX), 10) - 1;\n\n                if (!overlay.length) {\n                    overlay = $(\"<div class='k-overlay' />\");\n                }\n\n                overlay\n                    .insertBefore(wrapper[0])\n                    .css({\n                        zIndex: zIndex,\n                        display: display\n                    });\n\n                if (this.options.modal.preventScroll && !this.containment) {\n                    this._stopDocumentScrolling();\n                }\n\n                return overlay;\n            },\n\n            _actionForIcon: function(icon) {\n                var iconClass = /\\bk(-svg)?-i(-\\w+)+\\b/.exec(icon[0].className)[0];\n                return {\n                    \"x\": \"_close\",\n                    \"window\": \"maximize\",\n                    \"window-minimize\": \"minimize\",\n                    \"window-restore\": \"restore\",\n                    \"arrow-rotate-cw\": \"refresh\",\n                    \"pin\": \"pin\",\n                    \"unpin\": \"unpin\"\n                }[iconClass.replace(/(k-i-|k-svg-i-)/, \"\")];\n            },\n\n            _windowActionHandler: function(e) {\n                if (this._closing) {\n                    return;\n                }\n                var icon = $(e.target).closest(\".k-window-titlebar-action\").find(\".k-icon,.k-svg-icon\");\n                var action = this._actionForIcon(icon);\n\n                if (action) {\n                    e.preventDefault();\n                    this[action]();\n                    return false;\n                }\n            },\n\n            _modals: function() {\n                var that = this,\n                    windowElements = $(KWINDOW + VISIBLE),\n                    windowInstance,\n                    modals = [];\n\n                for (var i = 0; i < windowElements.length; i += 1) {\n                    windowInstance = that._object($(windowElements[i]));\n\n                    if (windowInstance &&\n                        windowInstance.options &&\n                        windowInstance.options.modal &&\n                        windowInstance.options.visible &&\n                        windowInstance.options.appendTo === that.options.appendTo &&\n                        (!windowInstance.containment || (that.containment && windowInstance.containment[0] === that.containment[0]))) {\n                            modals.push(windowInstance.wrapper[0]);\n                    }\n                }\n\n                modals.sort(function(a, b) {\n                    return a.style.zIndex - b.style.zIndex;\n                });\n\n                that = null;\n\n                return $(modals);\n            },\n\n            _object: function(element) {\n                var content = element.children(KWINDOWCONTENT);\n                var widget = kendo.widgetInstance(content);\n\n                if (widget) {\n                    return widget;\n                }\n\n                return undefined$1;\n            },\n\n            center: function() {\n                var that = this,\n                    position = that.options.position,\n                    wrapper = that.wrapper,\n                    documentWindow = $(window),\n                    scrollTop = 0,\n                    scrollLeft = 0,\n                    newTop, newLeft;\n\n                if (that.options.isMaximized) {\n                    return that;\n                }\n\n                if (that.options.pinned && !that._isPinned) {\n                    that.pin();\n                }\n\n                if (!that.options.pinned) {\n                    scrollTop = documentWindow.scrollTop();\n                    scrollLeft = documentWindow.scrollLeft();\n                }\n\n                if (this.containment && !that.options.pinned) {\n                    newTop = this.minTop + (this.maxTop - this.minTop) / 2;\n                    newLeft = this.minLeft + (this.maxLeft - this.minLeft) / 2;\n                } else {\n                    that._scrollIsAppended = true;\n                    newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.outerWidth()) / 2);\n                    newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.outerHeight() - toInt(wrapper, \"paddingTop\")) / 2);\n                }\n\n                wrapper.css({\n                    left: newLeft,\n                    top: newTop\n                });\n\n                position.top = newTop;\n                position.left = newLeft;\n\n                return that;\n            },\n\n            title: function(title) {\n                var that = this,\n                    value,\n                    encoded = true,\n                    wrapper = that.wrapper,\n                    titleBar = wrapper.children(KWINDOWTITLEBAR),\n                    titleElement = titleBar.children(KWINDOWTITLE);\n\n                if (!arguments.length) {\n                    return titleElement.html();\n                }\n\n                if ($.isPlainObject(title)) {\n                    value = typeof title.text !== \"undefined\" ? title.text : \"\";\n                    encoded = title.encoded !== false;\n                } else {\n                    value = title;\n                }\n\n                if (value === false) {\n                    wrapper.addClass(\"k-window-titleless\");\n                    wrapper.css(\"padding-top\", 0);\n                    titleBar.remove();\n                } else {\n                    if (!titleBar.length) {\n                        wrapper.prepend(templates.titlebar({\n                            title: encoded ? kendo.htmlEncode(value) : value\n                        }));\n                        that._actions();\n                        titleBar = wrapper.children(KWINDOWTITLEBAR);\n                    } else {\n                        titleElement.html(encoded ? kendo.htmlEncode(value) : value);\n                    }\n                }\n\n                that.options.title = value;\n\n                return that;\n            },\n\n            content: function(html, data) {\n                var content = this.wrapper.children(KWINDOWCONTENT),\n                    scrollContainer = content.children(\".km-scroll-container\");\n\n                content = scrollContainer[0] ? scrollContainer : content;\n\n                if (!defined(html)) {\n                    return content.html();\n                }\n\n                kendo.destroy(this.element.children());\n\n                content.empty().html(html);\n\n                return this;\n            },\n\n            open: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    contentElement = wrapper.children(KWINDOWCONTENT),\n                    overlay, otherModalsVisible,\n                    containmentContext = this.containment && !that._isPinned,\n                    doc = containmentContext ? this.containment : $(document);\n\n                if (!that.trigger(OPEN)) {\n                    if (that._closing) {\n                        wrapper.kendoStop(true, true);\n                    }\n\n                    that._closing = false;\n\n                    that.toFront();\n\n                    if (options.autoFocus) {\n                        that.wrapper.trigger(\"focus\");\n                    }\n\n                    options.visible = true;\n\n                    if (options.modal) {\n                        otherModalsVisible = !!that._modals().length;\n                        overlay = that._overlay(otherModalsVisible);\n\n                        overlay.kendoStop(true, true);\n\n                        if (showOptions.duration && kendo.effects.Fade && !otherModalsVisible) {\n                            var overlayFx = kendo.fx(overlay).fadeIn();\n                            overlayFx.duration(showOptions.duration || 0);\n                            overlayFx.endValue(0.5);\n                            overlayFx.play();\n                        } else {\n                            overlay.css(\"opacity\", 0.5);\n                        }\n\n                        overlay.show();\n\n                        $(window).on(\"focus\" + MODAL_NS, function() {\n                            if (wrapper.data(\"isFront\") && !$(document.activeElement).closest(wrapper).length) {\n                               that.wrapper.trigger(\"focus\");\n                            }\n                        });\n                    }\n\n                    if (!wrapper.is(VISIBLE)) {\n                        contentElement.css(OVERFLOW, HIDDEN);\n\n                        that.wrapper.find(TITLEBAR_BUTTONSSELECTOR).addClass(\"k-button-flat\");\n\n                        wrapper.css({ display: \"inline-flex\" });\n                        wrapper.kendoStop().kendoAnimate({\n                            effects: showOptions.effects,\n                            duration: showOptions.duration,\n                            complete: this._activate.bind(this)\n                        });\n                    }\n                }\n\n                if (options.isMaximized) {\n                    that._containerScrollTop = doc.scrollTop();\n                    that._containerScrollLeft = doc.scrollLeft();\n                    that._stopDocumentScrolling();\n                }\n\n                if (this.options.pinned && !this._isPinned) {\n                    this.pin();\n                }\n\n                return that;\n            },\n\n            _activate: function() {\n                var scrollable = this.options.scrollable !== false;\n\n                if (this.options.autoFocus) {\n                    this.wrapper.trigger(\"focus\");\n                }\n\n                this.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n                kendo.resize(this.element.children());\n\n                this.trigger(ACTIVATE);\n            },\n\n            _removeOverlay: function(suppressAnimation) {\n                var modals = this._modals();\n                var options = this.options;\n                var hideOverlay = options.modal && !modals.length;\n                var hideOptions = this._animationOptions(\"close\");\n\n                if (hideOverlay) {\n                    if (!suppressAnimation && hideOptions.duration && kendo.effects.Fade) {\n                        var overlayFx = kendo.fx(options.modal ? this._overlay(true) : $(undefined$1)).fadeOut();\n                        overlayFx.duration(hideOptions.duration || 0);\n                        overlayFx.startValue(0.5);\n                        overlayFx.play();\n                    } else {\n                        this._overlay(false).remove();\n                    }\n                    if (options.modal.preventScroll) {\n                        this._enableDocumentScrolling();\n                    }\n                } else if (modals.length) {\n                    this._object(modals.last())._overlay(true);\n\n                    if (options.modal.preventScroll) {\n                        this._stopDocumentScrolling();\n                    }\n                }\n            },\n\n            _close: function(systemTriggered) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    hideOptions = this._animationOptions(\"close\"),\n                    containmentContext = this.containment && !that._isPinned,\n                    doc = containmentContext ? this.containment : $(document),\n                    defaultPrevented;\n\n                if (that._closing) {\n                    return;\n                }\n\n                defaultPrevented = that.trigger(CLOSE, { userTriggered: !systemTriggered });\n                that._closing = !defaultPrevented;\n\n                if (wrapper.is(VISIBLE) && !defaultPrevented) {\n                    options.visible = false;\n\n                    $(KWINDOW).each(function(i, element) {\n                        var contentElement = $(element).children(KWINDOWCONTENT);\n\n                        // Remove overlay set by toFront\n                        if (element != wrapper && contentElement.find(\"> .\" + KCONTENTFRAME).length > 0) {\n                            contentElement.children(KOVERLAY).remove();\n                        }\n                    });\n\n                    this._removeOverlay();\n\n                    // Prevent close animation from stopping\n                    that.wrapper.find(TITLEBAR_BUTTONSSELECTOR).removeClass(\"k-button-flat\");\n\n                    wrapper.kendoStop().kendoAnimate({\n                        effects: hideOptions.effects || showOptions.effects,\n                        reverse: hideOptions.reverse === true,\n                        duration: hideOptions.duration,\n                        complete: this._deactivate.bind(this)\n                    });\n                    $(window).off(MODAL_NS);\n                }\n\n                if (that.options.isMaximized) {\n                    that._enableDocumentScrolling();\n                    if (that._containerScrollTop && that._containerScrollTop > 0) {\n                        doc.scrollTop(that._containerScrollTop);\n                    }\n                    if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                        doc.scrollLeft(that._containerScrollLeft);\n                    }\n                }\n\n                if (that.options.iframe) {\n                    that.wrapper.trigger(\"blur\");\n                }\n            },\n\n            _deactivate: function() {\n                var that = this;\n\n                that.wrapper\n                    .removeClass(INLINE_FLEX)\n                    .hide()\n                    .css(\"opacity\", \"\");\n\n                that.trigger(DEACTIVATE);\n\n                if (that.options.modal) {\n                    var lastModal = that._object(that._modals().last());\n                    if (lastModal) {\n                        lastModal.toFront();\n                    }\n                }\n            },\n\n            close: function() {\n                this._close(true);\n                return this;\n            },\n\n            _actionable: function(element) {\n                return $(element).is(`${TITLEBAR_BUTTONSSELECTOR}, :input, a, .k-input, .k-icon, .k-svg-icon, .k-svg-icon>svg, .k-svg-icon>svg>path, .k-icon-button, [role='gridcell'], .k-input-inner, .k-input-value-text`);\n            },\n\n            _shouldFocus: function(target) {\n                var active = activeElement(),\n                    element = this.wrapper;\n\n                return this.options.autoFocus &&\n                    !$(active).is(element) &&\n                    !this._actionable(target) &&\n                    (!element.find(active).length || !element.find(target).length);\n            },\n\n            toFront: function(e, avoidFocus) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    currentWindow = wrapper[0],\n                    containmentContext = that.containment && !that._isPinned,\n                    openAnimation = this._animationOptions(\"open\"),\n                    zIndex = +wrapper.css(ZINDEX),\n                    originalZIndex = zIndex,\n                    target = (e && e.target) || null;\n\n                $(KWINDOW).each(function(i, element) {\n                    var windowObject = $(element),\n                        zIndexNew = windowObject.css(ZINDEX),\n                        contentElement = windowObject.children(KWINDOWCONTENT);\n\n                    if (!isNaN(zIndexNew)) {\n                        zIndex = Math.max(+zIndexNew, zIndex);\n                    }\n\n                    wrapper.data(\"isFront\", element == currentWindow);\n                    // Add overlay to windows with iframes and lower z-index to prevent\n                    // trapping of events when resizing / dragging\n\n                    if (element != currentWindow &&\n                        contentElement.find(\".\" + KCONTENTFRAME).length &&\n                        !contentElement.find(KOVERLAY).length) {\n                        contentElement.append(templates.overlay);\n                    }\n                });\n\n                if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                    wrapper.css(ZINDEX, zIndex + 2);\n                }\n                that.element.find(\"> .k-overlay\").remove();\n\n                if (that._shouldFocus(target)) {\n                    if (!avoidFocus) {\n                        setTimeout(function() {\n                            that.wrapper.focus();\n                        }, openAnimation ? openAnimation.duration : 0);\n                    }\n\n                    var scrollTop = containmentContext ? that.containment.scrollTop() : $(window).scrollTop(),\n                        windowTop = parseInt(wrapper.position().top, 10);\n\n                    if (!that.options.pinned && windowTop > 0 && windowTop < scrollTop) {\n                        if (scrollTop > 0) {\n                            $(window).scrollTop(windowTop);\n                        } else {\n                            wrapper.css(\"top\", scrollTop);\n                        }\n                    }\n                }\n\n                wrapper = null;\n\n                return that;\n            },\n\n            toggleMaximization: function() {\n                if (this._closing) {\n                    return this;\n                }\n\n                return this[this.options.isMaximized ? \"restore\" : \"maximize\"]();\n            },\n\n            restore: function() {\n                var that = this;\n                var options = that.options;\n                var minHeight = options.minHeight;\n                var restoreOptions = that.restoreOptions;\n                var shouldRestrictTop;\n                var container = that.containment && !that._isPinned ? that.containment : $(document);\n\n                if (!options.isMaximized && !options.isMinimized) {\n                    return that;\n                }\n\n                if (minHeight && minHeight != Infinity) {\n                    that.wrapper.css(\"min-height\", minHeight);\n                }\n\n                if (restoreOptions && !options.isMaximized) {\n                    restoreOptions.height = constrain(restoreOptions.height, that.options.minHeight, that.options.maxHeight);\n\n                    shouldRestrictTop = options.position.top + parseInt(restoreOptions.height, 10) > that.maxTop;\n\n                    if (shouldRestrictTop) {\n                        options.position.top = constrain(options.position.top, that.minTop, that.maxTop - parseInt(restoreOptions.height, 10));\n\n                        extend(restoreOptions, {\n                            left: options.position.left,\n                            top: options.position.top\n                        });\n                    }\n                }\n\n                that.wrapper\n                    .css({\n                        position: options.pinned ? \"fixed\" : \"absolute\",\n                        left: restoreOptions.left,\n                        top: restoreOptions.top,\n                        width: restoreOptions.width,\n                        height: restoreOptions.height\n                    })\n                    .removeClass(MAXIMIZEDSTATE)\n                    .removeClass(KWINDOWMINIMIZED)\n                    .find(\".k-window-content,.k-resize-handle\").show().end()\n                    .find(\".k-window-titlebar .k-i-window-restore,.k-window-titlebar .k-svg-i-window-restore\").parent().remove().end().end()\n                    .find(MINIMIZE_MAXIMIZEICONSELECTORS).parent().show().end().end()\n                    .find(PIN_UNPINICONCLASSSELECTOR).parent().show();\n\n                if (options.isMaximized) {\n                    that.wrapper.find(\".k-i-window,.k-svg-i-window\").parent().trigger(\"focus\");\n                } else if (options.isMinimized) {\n                    that.wrapper.find(\".k-i-window-minimize,.k-svg-i-window-minimize\").parent().trigger(\"focus\");\n                }\n\n                that.options.width = restoreOptions.width;\n                that.options.height = restoreOptions.height;\n\n                if (!that.options.modal.preventScroll) {\n                    that._enableDocumentScrolling();\n                }\n\n                if (that._containerScrollTop && that._containerScrollTop > 0) {\n                    container.scrollTop(that._containerScrollTop);\n                }\n                if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                    container.scrollLeft(that._containerScrollLeft);\n                }\n\n                options.isMaximized = options.isMinimized = false;\n\n                that.wrapper.removeAttr(\"aria-labelled-by\");\n\n                that.resize();\n\n                that.trigger(RESTORE);\n\n                return that;\n            },\n\n            _sizingAction: function(actionId, callback) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    style = wrapper[0].style,\n                    options = that.options;\n\n                if (options.isMaximized || options.isMinimized) {\n                    return that;\n                }\n\n                that.restoreOptions = {\n                    width: style.width,\n                    height: style.height\n                };\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).hide().end()\n                    .children(KWINDOWTITLEBAR).find(MINIMIZE_MAXIMIZEICONSELECTORS).parent().hide()\n                    .eq(0).before(templates.action({ name: \"window-restore\" }));\n\n                callback.call(that);\n\n                that.wrapper.children(KWINDOWTITLEBAR).find(PIN_UNPINICONCLASSSELECTOR).parent().toggle(actionId !== \"maximize\");\n\n                that.trigger(actionId);\n\n                wrapper.find(\".k-i-window-restore,.k-svg-i-window-restore\").parent().trigger(\"focus\");\n\n                return that;\n            },\n\n            maximize: function() {\n                this._sizingAction(\"maximize\", function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        containmentContext = this.containment && !that._isPinned,\n                        position = wrapper.position(),\n                        doc = $(document);\n\n                    extend(that.restoreOptions, {\n                        left: position.left + (containmentContext ? this.containment.scrollLeft() : 0),\n                        top: position.top + (containmentContext ? this.containment.scrollTop() : 0)\n                    });\n\n                    this._containerScrollTop = containmentContext ? this.containment.scrollTop() : doc.scrollTop();\n                    this._containerScrollLeft = containmentContext ? this.containment.scrollLeft() : doc.scrollLeft();\n\n                    that._stopDocumentScrolling();\n\n                    wrapper\n                        .css({\n                            top: containmentContext ? this.containment.scrollTop() : 0,\n                            left: containmentContext ? this.containment.scrollLeft() : 0,\n                            position: containmentContext ? \"absolute\" : \"fixed\"\n                        })\n                        .addClass(MAXIMIZEDSTATE);\n\n                    that.options.isMaximized = true;\n\n                    that._onDocumentResize();\n                });\n\n                return this;\n            },\n\n            _stopDocumentScrolling: function() {\n                var that = this;\n                var containment = that.containment;\n\n                if (containment && !that._isPinned) {\n                    that._storeOverflowRule(containment);\n                    containment.css(OVERFLOW, HIDDEN);\n                    that.wrapper.css({\n                        maxWidth: containment.innerWidth(),\n                        maxHeight: containment.innerHeight()\n                    });\n                    return;\n                }\n\n                var $body = $(\"body\");\n                that._storeOverflowRule($body);\n                $body.css(OVERFLOW, HIDDEN);\n\n                var $html = $(\"html\");\n                that._storeOverflowRule($html);\n                $html.css(OVERFLOW, HIDDEN);\n            },\n\n            _enableDocumentScrolling: function() {\n                var that = this;\n                var containment = that.containment;\n\n                if (containment && !that._isPinned) {\n                    that._restoreOverflowRule(containment);\n                    that.wrapper.css({\n                        maxWidth: containment.width,\n                        maxHeight: containment.height\n                    });\n                    return;\n                }\n\n                that._restoreOverflowRule($(document.body));\n                that._restoreOverflowRule($(\"html\"));\n            },\n\n            _storeOverflowRule: function($element) {\n                if (this._isOverflowStored($element)) {\n                    return;\n                }\n\n                var overflowRule = $element.get(0).style.overflow;\n\n                if (typeof overflowRule === \"string\") {\n                    $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                }\n            },\n\n            _isOverflowStored: function($element) {\n                return typeof $element.data(DATADOCOVERFLOWRULE) === \"string\";\n            },\n\n            _restoreOverflowRule: function($element) {\n                var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n                if (overflowRule !== null && overflowRule !== undefined$1) {\n                    $element.css(OVERFLOW, overflowRule);\n                    $element.removeData(DATADOCOVERFLOWRULE);\n                } else {\n                    $element.css(OVERFLOW, \"\");\n                }\n            },\n\n            isMaximized: function() {\n                return this.options.isMaximized;\n            },\n\n            minimize: function() {\n                this._sizingAction(\"minimize\", function() {\n                    var that = this;\n\n                    that.wrapper.css({\n                        height: \"\",\n                        minHeight: \"\"\n                    });\n\n                    that.element.hide();\n\n                    that.options.isMinimized = true;\n                });\n\n                this.wrapper.attr(\"aria-labelled-by\", this.element.attr(\"aria-labelled-by\"));\n                this.wrapper.addClass(KWINDOWMINIMIZED);\n\n                this._updateBoundaries();\n\n                return this;\n            },\n\n            isMinimized: function() {\n                return this.options.isMinimized;\n            },\n\n            pin: function() {\n                var that = this,\n                    win = $(window),\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    position = options.position,\n                    top = this.containment ? getPosition(wrapper[0]).top + toInt(this.containment, \"borderTopWidth\") : toInt(wrapper, \"top\"),\n                    left = this.containment ? getPosition(wrapper[0]).left + toInt(this.containment, \"borderLeftWidth\") : toInt(wrapper, \"left\");\n\n                if (!that.options.isMaximized) {\n                    position.top = top;\n                    position.left = left;\n\n                    if (that._scrollIsAppended && (!this.containment || this.containment.css(\"position\") !== \"fixed\")) {\n\n                        position.top -= win.scrollTop();\n                        position.left -= win.scrollLeft();\n                        that._scrollIsAppended = false;\n                    }\n\n                    wrapper.css(extend(position, { position: \"fixed\" }));\n                    var pinIcon = wrapper.children(KWINDOWTITLEBAR).find(KPINICONCLASSSELECTOR).eq(0);\n                    if (pinIcon.length > 0) {\n                        kendo.ui.icon(pinIcon, { icon: \"unpin\" });\n                    }\n\n                    that._isPinned = true;\n                    that.options.pinned = true;\n\n                    if (this.containment) {\n                        options.maxWidth = options.maxHeight = Infinity;\n                        wrapper.css({\n                            maxWidth: \"\",\n                            maxHeight: \"\"\n                        });\n                    }\n                }\n            },\n\n            unpin: function() {\n                var that = this,\n                    win = $(window),\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    position = that.options.position,\n                    containment = that.containment,\n                    top = parseInt(wrapper.css(\"top\"), 10) + win.scrollTop(),\n                    left = parseInt(wrapper.css(\"left\"), 10) + win.scrollLeft();\n\n                if (!that.options.isMaximized) {\n                    that._isPinned = false;\n                    that._scrollIsAppended = true;\n                    that.options.pinned = false;\n\n                    if (containment) {\n                        that._updateBoundaries();\n\n                        options.maxWidth = Math.min(containment.width, options.maxWidth);\n                        options.maxHeight = Math.min(containment.height - toInt(wrapper, \"padding-top\"), options.maxHeight);\n\n                        wrapper.css({\n                            maxWidth: options.maxWidth,\n                            maxHeight: options.maxHeight\n                        });\n\n                        if (top < containment.position.top) {\n                            top = that.minTop;\n                        } else if (top > containment.position.top + containment.height) {\n                            top = that.maxTop;\n                        } else {\n                            top = top + containment.scrollTop() - (containment.position.top + toInt(containment, \"border-top-width\"));\n                        }\n\n                        if (left < containment.position.left) {\n                            left = that.minLeft;\n                        } else if (left > containment.position.left + containment.width) {\n                            left = that.maxLeft;\n                        } else {\n                            left = left + containment.scrollLeft() - (containment.position.left + toInt(containment, \"border-left-width\"));\n                        }\n\n                    }\n\n                    position.top = constrain(top, that.minTop, that.maxTop);\n                    position.left = constrain(left, that.minLeft, that.maxLeft);\n\n                    wrapper.css(extend(position, { position: \"\" }));\n                    var pinIcon = wrapper.children(KWINDOWTITLEBAR).find(KUNPINICONCLASSSELECTOR).eq(0);\n                    if (pinIcon.length > 0) {\n                        kendo.ui.icon(pinIcon, { icon: \"pin\" });\n                    }\n                }\n            },\n\n            _onDocumentResize: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    wnd = $(window),\n                    zoomLevel = kendo.support.zoomLevel(),\n                    contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\",\n                    w, h;\n\n                if (!that.options.isMaximized) {\n                    return;\n                }\n\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                if (that.containment && !that._isPinned) {\n                    w = that.containment.innerWidth() - lrBorderWidth;\n                    h = that.containment.innerHeight() - (tbBorderWidth + paddingTop);\n                } else {\n                    w = wnd.width() / zoomLevel - lrBorderWidth;\n                    h = wnd.height() / zoomLevel - (tbBorderWidth + paddingTop);\n                }\n\n                wrapper.css({\n                    width: w,\n                    height: h\n                });\n                that.options.width = w;\n                that.options.height = h;\n\n                that.resize();\n            },\n\n            refresh: function(options) {\n                var that = this,\n                    initOptions = that.options,\n                    element = $(that.element),\n                    iframe,\n                    showIframe,\n                    url;\n\n                if (!isPlainObject(options)) {\n                    options = { url: options };\n                }\n\n                options = extend(initOptions.content, options);\n\n                showIframe = defined(initOptions.iframe) ? initOptions.iframe : options.iframe;\n\n                url = options.url;\n\n                if (url) {\n                    if (!defined(showIframe)) {\n                        showIframe = !isLocalUrl(url);\n                    }\n\n                    if (!showIframe) {\n                        // perform AJAX request\n                        that._ajaxRequest(options);\n                    } else {\n                        iframe = element.find(\".\" + KCONTENTFRAME)[0];\n\n                        if (iframe) {\n                            // refresh existing iframe\n                            iframe.src = url || iframe.src;\n                        } else {\n                            // render new iframe\n                            element.html(templates.contentFrame(extend({}, initOptions, { content: options })));\n                        }\n\n                        element.find(\".\" + KCONTENTFRAME)\n                            .off(\"load\" + NS)\n                            .on(\"load\" + NS, this._triggerRefresh.bind(this));\n                    }\n                } else {\n                    if (options.template) {\n                        // refresh template\n                        that.content(template(options.template)({}));\n                    }\n\n                    that.trigger(REFRESH);\n                }\n\n                element.toggleClass(\"k-window-iframecontent\", !!showIframe);\n\n                return that;\n            },\n\n            _triggerRefresh: function() {\n                this.trigger(REFRESH);\n            },\n\n            _ajaxComplete: function() {\n                clearTimeout(this._loadingIconTimeout);\n                this.wrapper.find(REFRESHICONSELECTOR).removeClass(LOADINGICONCLASS);\n            },\n\n            _ajaxError: function(xhr, status) {\n                this.trigger(ERROR, { status: status, xhr: xhr });\n            },\n\n            _ajaxSuccess: function(contentTemplate) {\n                return function(data) {\n                    var html = data;\n                    if (contentTemplate) {\n                        html = template(contentTemplate)(data || {});\n                    }\n\n                    this.content(html, data);\n                    this.element.prop(\"scrollTop\", 0);\n\n                    this.trigger(REFRESH);\n                };\n            },\n\n            _showLoading: function() {\n                this.wrapper.find(REFRESHICONSELECTOR).addClass(LOADINGICONCLASS);\n            },\n\n            _ajaxRequest: function(options) {\n                this._loadingIconTimeout = setTimeout(this._showLoading.bind(this), 100);\n\n                $.ajax(extend({\n                    type: \"GET\",\n                    dataType: \"html\",\n                    cache: false,\n                    error: this._ajaxError.bind(this),\n                    complete: this._ajaxComplete.bind(this),\n                    success: this._ajaxSuccess(options.template).bind(this)\n                }, options));\n            },\n\n            _destroy: function() {\n                if (this.resizing) {\n                    this.resizing.destroy();\n                }\n\n                if (this.dragging) {\n                    this.dragging.destroy();\n                }\n\n                this.wrapper.off(NS)\n                    .children(KWINDOWCONTENT).off(NS).end()\n                    .find(\".k-resize-handle,.k-window-titlebar\").off(NS);\n\n                $(window).off(\"resize\" + NS + this._marker);\n                $(window).off(MODAL_NS);\n                $(window).off(NS);\n\n                clearTimeout(this._loadingIconTimeout);\n\n                Widget.fn.destroy.call(this);\n\n                this.unbind(undefined$1);\n\n                kendo.destroy(this.wrapper);\n            },\n\n            destroy: function() {\n                this._destroy();\n\n                if (this.options.modal) {\n                    this._removeOverlay(true);\n                }\n\n                this.wrapper.empty().remove();\n\n                this.wrapper = this.appendTo = this.element = $();\n            },\n\n            _createWindow: function() {\n                var contentHtml = this.element,\n                    options = this.options,\n                    iframeSrcAttributes,\n                    wrapper,\n                    isRtl = kendo.support.isRtl(contentHtml);\n\n                if (options.scrollable === false) {\n                    contentHtml.css(\"overflow\", \"hidden\");\n                }\n\n                wrapper = $(templates.wrapper(options));\n\n                // Collect the src attributes of all iframes and then set them to empty string.\n                // This seems to fix this IE9 \"feature\": http://msdn.microsoft.com/en-us/library/gg622929%28v=VS.85%29.aspx?ppud=4\n                iframeSrcAttributes = contentHtml.find(\"iframe:not(.k-content-frame)\").map(function() {\n                    var src = this.getAttribute(\"src\");\n                    this.src = \"\";\n                    return src;\n                });\n\n                // Make sure the wrapper is appended to the body only once. IE9+ will throw exceptions if you move iframes in DOM\n                wrapper\n                    .toggleClass(\"k-rtl\", isRtl)\n                    .attr(\"tabindex\", 0)\n                    .append(contentHtml)\n                    .find(\"iframe:not(.k-content-frame)\").each(function(index) {\n                    // Restore the src attribute of the iframes when they are part of the live DOM tree\n                    this.src = iframeSrcAttributes[index];\n                });\n\n                if (this.containment) {\n                    this.containment.prepend(wrapper);\n                } else if (this.appendTo) {\n                    wrapper.appendTo(this.appendTo);\n                }\n\n                wrapper.find(\".k-window-title\")\n                    .css(isRtl ? \"left\" : \"right\", outerWidth(wrapper.find(\".k-window-titlebar-actions\")) + 10);\n\n                contentHtml.css(\"visibility\", \"\").show();\n\n                contentHtml.find(\"[data-role=editor]\").each(function() {\n                    var editor = $(this).data(\"kendoEditor\");\n\n                    if (editor) {\n                        editor.refresh();\n                    }\n                });\n\n                wrapper = contentHtml = null;\n            }\n        });\n\n        templates = {\n            wrapper: template(() => \"<div class='k-window'></div>\"),\n            action: template(({ name, icon }) => {\n                let iconName = (icon || \"\").toLowerCase() || name.toLowerCase();\n                if (iconName == \"restore\") { iconName = \"window-restore\"; }\n\n                return kendo.html.renderButton(`<button role='button' class='k-window-titlebar-action' aria-label='${name}'></button>`, { icon: iconName, fillMode: \"flat\" });\n            }),\n            titlebar: template(({ title }) =>\n                \"<div class='k-window-titlebar k-hstack'>\" +\n                    `<span class='k-window-title'>${title}</span>` +\n                    \"<div class='k-window-titlebar-actions'></div>\" +\n                \"</div>\"\n            ),\n            overlay: \"<div class='k-overlay'></div>\",\n            contentFrame: template(({ title, content }) =>\n                `<iframe frameborder='0' title='${title}' class='${KCONTENTFRAME}' ` +\n                `src='${content.url}'>` +\n                \"This page requires frames in order to show content\" +\n                \"</iframe>\"\n            ),\n            resizeHandle: template((data) => `<div aria-hidden='true' class='k-resize-handle k-resize-${data}'></div>`)\n        };\n\n\n        function WindowResizing(wnd) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: \">\" + KWINDOWRESIZEHANDLES,\n                group: wnd.wrapper.id + \"-resizing\",\n                dragstart: that.dragstart.bind(that),\n                drag: that.drag.bind(that),\n                dragend: that.dragend.bind(that)\n            });\n\n            that._draggable.userEvents.bind(\"press\", that.addOverlay.bind(that));\n            that._draggable.userEvents.bind(\"release\", that.removeOverlay.bind(that));\n        }\n\n        WindowResizing.prototype = {\n            addOverlay: function() {\n                this.owner.wrapper.append(templates.overlay);\n            },\n            removeOverlay: function() {\n                this.owner.wrapper.find(KOVERLAY).remove();\n            },\n            dragstart: function(e) {\n                var that = this;\n                var wnd = that.owner;\n                var wrapper = wnd.wrapper;\n\n                that._preventDragging = wnd.trigger(RESIZESTART);\n                if (that._preventDragging) {\n                    return;\n                }\n\n                that.elementPadding = parseInt(wrapper.css(\"padding-top\"), 10);\n                that.initialPosition = kendo.getOffset(wrapper, \"position\");\n\n                that.resizeDirection = e.currentTarget.prop(\"className\").replace(\"k-resize-handle k-resize-\", \"\");\n\n                that.initialSize = {\n                    width: wrapper.outerWidth(),\n                    height: wrapper.outerHeight()\n                };\n\n                wnd._updateBoundaries();\n\n                that.containerOffset = wnd.containment ? wnd.containment.position : kendo.getOffset(wnd.appendTo);\n\n                var offsetParent = wrapper.offsetParent();\n\n                if (offsetParent.is(\"html\")) {\n                    that.containerOffset.top = that.containerOffset.left = 0;\n                } else {\n                    var marginTop = offsetParent.css(\"margin-top\");\n                    var marginLeft = offsetParent.css(\"margin-left\");\n                    var hasMargin = !zero.test(marginTop) || !zero.test(marginLeft);\n                    if (hasMargin) {\n                        var wrapperPosition = getPosition(wrapper[0]);\n                        var relativeElMarginLeft = wrapperPosition.left - that.containerOffset.left - that.initialPosition.left;\n                        var relativeElMarginTop = wrapperPosition.top - that.containerOffset.top - that.initialPosition.top;\n\n                        that._relativeElMarginLeft = relativeElMarginLeft > 1 ? relativeElMarginLeft : 0;\n                        that._relativeElMarginTop = relativeElMarginTop > 1 ? relativeElMarginTop : 0;\n\n                        that.initialPosition.left += that._relativeElMarginLeft;\n                        that.initialPosition.top += that._relativeElMarginTop;\n                    }\n                }\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).hide();\n\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n            drag: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                var that = this,\n                    wnd = that.owner,\n                    wrapper = wnd.wrapper,\n                    options = wnd.options,\n                    position = options.position,\n                    direction = that.resizeDirection,\n                    containerOffset = that.containerOffset,\n                    initialPosition = that.initialPosition,\n                    initialSize = that.initialSize,\n                    containmentContext = wnd.containment && !wnd._isPinned,\n                    rtl = kendo.support.isRtl(wnd.containment),\n                    leftRtlOffset = containmentContext && rtl && wnd.containment.innerWidth() > wnd.containment.width ? kendo.support.scrollbar() : 0,\n                    scrollOffset = containmentContext ? { top: wnd.containment.scrollTop(), left: wnd.containment.scrollLeft() } : { top: 0, left: 0 },\n                    newWidth, newHeight,\n                    windowBottom, windowRight,\n                    x = Math.max(e.x.location, 0),\n                    y = Math.max(e.y.location, 0);\n\n                    if (direction.indexOf(\"e\") >= 0) {\n\n                        if (wnd.containment && x - initialSize.width >= wnd.maxLeft - scrollOffset.left + containerOffset.left + leftRtlOffset) {\n                            newWidth = wnd.maxLeft + leftRtlOffset - initialPosition.left + initialSize.width - scrollOffset.left;\n                        } else {\n                            newWidth = x - initialPosition.left - containerOffset.left;\n                        }\n\n                        wrapper.outerWidth(constrain(newWidth, options.minWidth, options.maxWidth));\n                    } else if (direction.indexOf(\"w\") >= 0) {\n                        windowRight = initialPosition.left + initialSize.width + containerOffset.left;\n                        newWidth = constrain(windowRight - x, options.minWidth, options.maxWidth);\n                        position.left = windowRight - newWidth - containerOffset.left - leftRtlOffset - (that._relativeElMarginLeft || 0) + scrollOffset.left;\n\n                        if (wnd.containment && position.left <= wnd.minLeft) {\n                            position.left = wnd.minLeft;\n                            newWidth = constrain(windowRight - leftRtlOffset - position.left - containerOffset.left + scrollOffset.left, options.minWidth, options.maxWidth);\n                        }\n\n                        wrapper.css({\n                            left: position.left,\n                            width: newWidth\n                        });\n                    }\n\n                    var newWindowTop = y;\n                    if (wnd.options.pinned) {\n                        newWindowTop -= $(window).scrollTop();\n                    }\n                    if (direction.indexOf(\"s\") >= 0) {\n                        newHeight = newWindowTop - initialPosition.top - that.elementPadding - containerOffset.top;\n\n                        if (newWindowTop - initialSize.height - that.elementPadding >= wnd.maxTop + containerOffset.top - scrollOffset.top) {\n                            newHeight = wnd.maxTop - initialPosition.top + initialSize.height - scrollOffset.top;\n                        }\n\n                        wrapper.outerHeight(constrain(newHeight, options.minHeight, options.maxHeight));\n                    } else if (direction.indexOf(\"n\") >= 0) {\n                        windowBottom = initialPosition.top + initialSize.height + containerOffset.top;\n                        newHeight = constrain(windowBottom - newWindowTop, options.minHeight, options.maxHeight);\n                        position.top = windowBottom - newHeight - containerOffset.top - (that._relativeElMarginTop || 0) + scrollOffset.top;\n\n                        if (position.top <= wnd.minTop && wnd.containment) {\n                            position.top = wnd.minTop;\n                            newHeight = constrain(windowBottom - position.top - containerOffset.top + scrollOffset.top, options.minHeight, options.maxHeight);\n                        }\n\n                        wrapper.css({\n                            top: position.top,\n                            height: newHeight\n                        });\n                    }\n\n                    if (newWidth) {\n                        wnd.options.width = newWidth + \"px\";\n                    }\n                    if (newHeight) {\n                        wnd.options.height = newHeight + \"px\";\n                    }\n\n                    wnd.resize();\n            },\n            dragend: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n\n                var that = this,\n                    wnd = that.owner,\n                    wrapper = wnd.wrapper;\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).show();\n\n                $(BODY).css(CURSOR, \"\");\n\n                if (wnd.touchScroller) {\n                    wnd.touchScroller.reset();\n                }\n\n                if (e.keyCode == 27) {\n                    wrapper.css(that.initialPosition)\n                        .css(that.initialSize);\n                }\n\n                wnd.trigger(RESIZEEND);\n\n                return false;\n            },\n            destroy: function() {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n\n                this._draggable = this.owner = null;\n            }\n        };\n\n        function WindowDragging(wnd, dragHandle, clickMoveClick) {\n            var that = this,\n                filter = dragHandle;\n\n            if (clickMoveClick) {\n                filter += \",.k-overlay\";\n            }\n\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: dragHandle,\n                group: wnd.wrapper.id + \"-moving\",\n                clickMoveClick: clickMoveClick,\n                dragstart: that.dragstart.bind(that),\n                drag: that.drag.bind(that),\n                dragend: that.dragend.bind(that),\n                dragcancel: that.dragcancel.bind(that)\n            });\n\n            that._draggable.userEvents.stopPropagation = false;\n        }\n\n        WindowDragging.prototype = {\n            dragstart: function(e) {\n                var wnd = this.owner,\n                    draggable = wnd.options.draggable,\n                    element = wnd.element,\n                    actions = element.find(\".k-window-titlebar-actions\"),\n                    containerOffset = kendo.getOffset(wnd.appendTo);\n\n                this._preventDragging = wnd.trigger(DRAGSTART) || !draggable;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                wnd.initialWindowPosition = kendo.getOffset(wnd.wrapper, \"position\");\n\n                wnd.initialPointerPosition = {\n                    left: wnd.options.position.left,\n                    top: wnd.options.position.top\n                };\n\n                wnd.startPosition = {\n                    left: e.x.client - wnd.initialWindowPosition.left,\n                    top: e.y.client - wnd.initialWindowPosition.top\n                };\n\n                wnd._updateBoundaries();\n                if (!wnd.containment) {\n                    if (actions.length > 0) {\n                        wnd.minLeft = outerWidth(actions) + parseInt(actions.css(\"right\"), 10) - outerWidth(element);\n                    } else {\n                        wnd.minLeft = 20 - outerWidth(element); // at least 20px remain visible\n                    }\n\n                    wnd.minLeft -= containerOffset.left;\n                    wnd.minTop = -containerOffset.top;\n                }\n\n                $(templates.overlay).appendTo(wnd.wrapper).css({ opacity: 0 });\n\n                wnd.wrapper.children(KWINDOWRESIZEHANDLES).hide();\n\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n\n            drag: function(e) {\n                var wnd = this.owner;\n                var position = wnd.options.position;\n                var axis = wnd.options.draggable.axis;\n                var left;\n                var top;\n\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                if (!axis || axis.toLowerCase() === \"x\") {\n                    left = e.x.client - wnd.startPosition.left;\n\n                    if (wnd.containment && !wnd._isPinned) {\n                        left += wnd.containment.scrollLeft();\n                    }\n\n                    position.left = constrain(left, wnd.minLeft, wnd.maxLeft);\n                }\n\n                if (!axis || axis.toLowerCase() === \"y\") {\n                    top = e.y.client - wnd.startPosition.top;\n\n                    if (wnd.containment && !wnd._isPinned) {\n                        top += wnd.containment.scrollTop();\n                    }\n\n                    position.top = constrain(top, wnd.minTop, wnd.maxTop);\n                }\n\n                if (kendo.support.transforms) {\n                    $(wnd.wrapper).css(\n                        \"transform\", \"translate(\" +\n                        (position.left - wnd.initialPointerPosition.left) + \"px, \" +\n                        (position.top - wnd.initialPointerPosition.top) + \"px)\"\n                    );\n                } else {\n                    $(wnd.wrapper).css(position);\n                }\n\n            },\n\n            _finishDrag: function() {\n                var wnd = this.owner;\n\n                wnd.wrapper\n                    .children(KWINDOWRESIZEHANDLES).toggle(!wnd.options.isMinimized).end()\n                    .find(KOVERLAY).remove();\n\n                $(BODY).css(CURSOR, \"\");\n            },\n\n            dragcancel: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                this._finishDrag();\n\n                e.currentTarget.closest(KWINDOW).css(this.owner.initialWindowPosition);\n            },\n\n            dragend: function() {\n                var wnd = this.owner;\n\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                $(wnd.wrapper)\n                    .css(wnd.options.position)\n                    .css(\"transform\", \"\");\n\n                this._finishDrag();\n\n                wnd.trigger(DRAGEND);\n\n                return false;\n            },\n            destroy: function() {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n\n                this._draggable = this.owner = null;\n            }\n        };\n\n        kendo.ui.plugin(Window);\n\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}