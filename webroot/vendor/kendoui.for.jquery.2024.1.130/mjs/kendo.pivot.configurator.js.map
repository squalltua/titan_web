{"version":3,"file":"kendo.pivot.configurator.js","names":["Navigation","constructor","options","this","tabIndex","root","eventHandlers","update","elements","Array","from","querySelectorAll","selectors","join","first","querySelector","last","all","length","current","find","el","matches","start","eventType","mouseEvents","ev","target","Element","closest","call","undefined","addEventListener","keyboardEvents","key","stop","removeEventListener","focusElement","element","previous","removeAttribute","classList","remove","setAttribute","String","focus","preventScroll","scrollableValuesSel","scrollableColumnHeaderSel","scrollableRowHeaderSel","emptyCellSel","tableSel","cellSel","scrollables","selectors$1","onEnter","nav","icon","index","indexOf","click","preventDefault","tryScrollLeft","scrollable","elToScroll","offsetLeft","scrollLeft","tryScrollRight","offsetWidth","tryScrollUp","scrollTop","offsetTop","tryScrollDown","offsetHeight","scrollTo","scrollFunc","forEach","scroll","tableMap","table","rows","colsCount","cells","map","c","colSpan","reduce","prev","cur","row","r","curColSpan","colSp","rowSp","rowSpan","ind","findIndex","val","curInd","navigationMap","columnHeader","rowHeader","values","emptyCell","emptyCellRow","fill","i","push","concat","getTargetPos","ctrlKey","metaKey","cellAt","pos","targetPos","nextPos","next","keyboardEvents$1","keydown","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","o","_target","_ev","nextElementSibling","HTMLElement","parentNode","setTimeout","confHeader","Enter","Space","Home","ro","Boolean","x","End","mouseEvents$1","hasAttribute","PivotGridNavigation","super","arguments","onEscape","pivot","previousElementSibling","confButton","pivotCell","navigate","dir","onDelete","Tab","shiftKey","Escape","Delete","Backspace","ConfiguratorNavigation","__meta__","id","name","category","depends","hidden","$","undefined$1","kendo","window","ui","encode","htmlEncode","Widget","common","pivotgrid","fetchDiscover","configuratorReducer","PIVOT_CONFIGURATOR_ACTION","ns","HOVER_EVENTS","SETTING_CONTAINER_TEMPLATE","addKPI","data","found","idx","type","splice","caption","defaultHierarchy","uniqueName","kpiNode","node","normalizeKPIs","settingTargetFromNode","PivotConfiguratorV2","extend","init","fn","_ariaId","attr","guid","addClass","role","_dataSource","navigatable","_initPivotGridConfiguratorNavigation","_layout","refresh","height","notify","events","orientation","filterable","sortable","messages","title","cancelButtonText","applyButtonText","measures","columns","setDataSource","dataSource","that","configuratorNavigation","firstCell","_refreshHandler","unbind","_errorHandler","_progressHandler","_error","bind","_requestStart","PivotDataSourceV2","create","horizontal","panel","append","headerTextId","SETTINGS_TEMPLATE","appendTo","formClass","ariaId","CONTENT_TEMPLATE","each","elm","html","renderChipList","_fields","cancelText","applyText","ACTIONS_TEMPLATE","_targets","on","_actions","e","currentTarget","_applyState","read","_cancelChanges","treeView","targetItemTemplate","menuenabled","chip","renderChip","TARGET_ITEM_TEMPLATE","fillMode","themeColor","rounded","removable","removeIcon","actions","_createTarget","template","connectWith","empty","fieldMenu","setting","PivotSettingTargetV2","hint","clone","item","wrapper","dataItem","getByUid","checked","container","kendoTreeView","checkboxes","checkChildren","result","hasChildren","aggregator","local","uid","dataTextField","autoBind","check","sender","action","toggleSelection","payload","state","columnAxes","_state","rowAxes","measureAxes","cubeSchema","restoreMeasure","items","_checkMembers","trigger","_redraw","_treeViewDataSource","off","_clickHandler","HierarchicalDataSource","schema","model","transport","fields","dsMeasures","catalog","cube","fetchOptions","url","members","isEmptyObject","dimensions","success","connection","restrictions","catalogName","cubeName","command","then","newFields","get","_getKPIOptions","buildKPImeasures","_loadFieldsCommand","newData","hash","field","dimensionUniqueName","hierarchyUniqueName","_progress","toggle","progress","destroy","fetch","plugin","PivotConfigurator","outerHeight","measuresLabel","columnsLabel","rowsLabel","fieldsLabel","PivotDataSource","kpi","schemaDimensions","done","cubeBuilder","fail","error","schemaKPIs","schemaMeasures","schemaLevels","schemaHierarchies","form","dragAndDrop","dragstart","sourceNode","measure","drag","status","dropTarget","validate","setStatusClass","drop","add","sortIcon","getIcons","PivotSettingTarget","emptyTemplate","columnsContainer","rowsContainer","measuresContainer","_toggleHover","toggleClass","_resize","_cube","_catalog","kpiMeasure","value","goal","trend","cssProperties","registerPrefix","registerValues","prop","roundedValues","jQuery","kendo$1"],"sources":["kendo.pivot.configurator.js"],"mappings":"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","sourcesContent":["import './kendo.dom.js';\nimport './kendo.html.chip.js';\nimport './kendo.html.chiplist.js';\nimport './kendo.pivot.common.js';\nimport './kendo.icons.js';\n\nclass Navigation {\n    constructor(options) {\n        this.tabIndex = 0;\n        this.root = null;\n        this.eventHandlers = {};\n        this.update = () => { };\n        this.tabIndex = options.tabIndex;\n    }\n    get elements() {\n        return this.root ? Array.from(this.root.querySelectorAll(this.selectors.join(','))) : [];\n    }\n    get first() {\n        return (this.root && this.root.querySelector(this.selectors.join(','))) || null;\n    }\n    get last() {\n        const all = this.elements;\n        return all[all.length - 1] || null;\n    }\n    get current() {\n        return this.elements.find(el => el.matches(':focus'));\n    }\n    start(root) {\n        this.root = root;\n        for (const eventType in this.mouseEvents) {\n            if (this.mouseEvents[eventType]) {\n                this.eventHandlers[eventType] = (ev => {\n                    const target = ev.target instanceof Element && ev.target.closest(this.selectors.join(','));\n                    if (target) {\n                        this.mouseEvents[eventType].call(undefined, target, this, ev);\n                    }\n                });\n                root.addEventListener(eventType, this.eventHandlers[eventType]);\n            }\n        }\n        for (const eventType in this.keyboardEvents) {\n            if (this.keyboardEvents[eventType]) {\n                this.eventHandlers[eventType] = (ev => {\n                    const target = ev.target instanceof Element && ev.target.closest(this.selectors.join(','));\n                    const key = ev.key === ' ' ? 'Space' : ev.key;\n                    if (target && this.keyboardEvents[eventType][key]) {\n                        this.keyboardEvents[eventType][key].call(undefined, target, this, ev);\n                    }\n                });\n                root.addEventListener(eventType, this.eventHandlers[eventType]);\n            }\n        }\n    }\n    stop() {\n        if (this.root) {\n            for (const eventType in this.eventHandlers) {\n                if (this.eventHandlers[eventType]) {\n                    this.root.removeEventListener(eventType, this.eventHandlers[eventType]);\n                }\n            }\n        }\n        this.root = null;\n    }\n    focusElement(element, previous) {\n        if (element) {\n            if (previous) {\n                previous.removeAttribute('tabindex');\n                previous.classList.remove('k-focus');\n            }\n            element.setAttribute('tabindex', String(this.tabIndex));\n            element.focus({ preventScroll: true });\n        }\n    }\n}\n\nconst scrollableValuesSel = '.k-pivotgrid .k-pivotgrid-values';\nconst scrollableColumnHeaderSel = '.k-pivotgrid .k-pivotgrid-column-headers';\nconst scrollableRowHeaderSel = '.k-pivotgrid .k-pivotgrid-row-headers';\nconst emptyCellSel = '.k-pivotgrid > .k-pivotgrid-empty-cell';\nconst tableSel = 'table.k-pivotgrid-table';\nconst cellSel = '.k-pivotgrid-cell';\nconst scrollables = [scrollableValuesSel, scrollableColumnHeaderSel, scrollableRowHeaderSel].join(',');\nconst selectors$1 = [\n    emptyCellSel,\n    [scrollableColumnHeaderSel, tableSel, cellSel].join(' '),\n    [scrollableRowHeaderSel, tableSel, cellSel].join(' '),\n    [scrollableValuesSel, tableSel, cellSel].join(' ')\n];\nconst onEnter = (target, nav, ev) => {\n    const icon = target.querySelector('.k-icon, .k-svg-icon');\n    if (icon) {\n        const index = nav.elements.indexOf(target);\n        nav.update = () => {\n            nav.focusElement(nav.elements[index], null);\n            nav.update = () => { };\n        };\n        icon.click();\n        ev.preventDefault();\n    }\n};\nconst tryScrollLeft = (target, scrollable, elToScroll) => {\n    if (target.offsetLeft < scrollable.scrollLeft) {\n        elToScroll.scrollLeft = target.offsetLeft;\n    }\n};\nconst tryScrollRight = (target, scrollable, elToScroll) => {\n    if (target.offsetLeft + target.offsetWidth > scrollable.scrollLeft + scrollable.offsetWidth &&\n        target.offsetWidth < scrollable.offsetWidth) {\n        elToScroll.scrollLeft = target.offsetLeft + target.offsetWidth - scrollable.offsetWidth;\n    }\n};\nconst tryScrollUp = (target, scrollable, elToScroll) => {\n    if (scrollable.scrollTop && target.offsetTop < scrollable.scrollTop) {\n        elToScroll.scrollTop = target.offsetTop;\n    }\n};\nconst tryScrollDown = (target, scrollable, elToScroll) => {\n    if (target.offsetTop + target.offsetHeight > scrollable.scrollTop + scrollable.offsetHeight &&\n        target.offsetHeight < scrollable.offsetHeight) {\n        elToScroll.scrollTop = target.offsetTop + target.offsetHeight - scrollable.offsetHeight;\n    }\n};\nconst scrollTo = (target, root, scrollFunc) => {\n    const elToScroll = root.querySelector(scrollableValuesSel);\n    const scrollable = target && target.closest(scrollables);\n    if (!elToScroll || !scrollable || !target) {\n        return;\n    }\n    scrollFunc.forEach(scroll => scroll(target, scrollable, elToScroll));\n};\nconst tableMap = (table) => {\n    const rows = Array.from(table.rows);\n    const colsCount = Array.from((rows && rows[0] && rows[0].cells) || [])\n        .map(c => c.colSpan)\n        .reduce((prev, cur) => prev + cur, 0);\n    const map = rows.map(() => new Array(colsCount));\n    rows.forEach((row, r) => {\n        let curColSpan = 0;\n        Array.from(row.cells).forEach((c) => {\n            for (let colSp = 0; colSp < c.colSpan; colSp++) {\n                for (let rowSp = 0; rowSp < c.rowSpan; rowSp++) {\n                    const ind = map[r + rowSp].findIndex((val, curInd) => curInd >= curColSpan && !val);\n                    map[r + rowSp][ind] = c;\n                }\n                curColSpan++;\n            }\n        });\n    });\n    return map;\n};\nconst navigationMap = (root) => {\n    const columnHeader = tableMap(root.querySelector([scrollableColumnHeaderSel, tableSel].join(' ')));\n    const rowHeader = tableMap(root.querySelector([scrollableRowHeaderSel, tableSel].join(' ')));\n    const values = tableMap(root.querySelector([scrollableValuesSel, tableSel].join(' ')));\n    const emptyCell = root.querySelector(emptyCellSel);\n    const emptyCellRow = new Array(rowHeader[0].length).fill(emptyCell);\n    const map = [];\n    for (let i = 0; i < columnHeader.length; i++) {\n        map.push(emptyCellRow.concat(columnHeader[i]));\n    }\n    for (let i = 0; i < rowHeader.length; i++) {\n        map.push(rowHeader[i].concat(values[i]));\n    }\n    return map;\n};\nconst getTargetPos = (map, target) => {\n    for (let r = 0; r < map.length; r++) {\n        for (let c = 0; c < map[r].length; c++) {\n            if (map[r][c] === target) {\n                return [r, c];\n            }\n        }\n    }\n    return [-1, -1];\n};\nconst ctrlKey = (ev) => ev.ctrlKey || ev.metaKey;\nconst cellAt = (root, target, pos) => {\n    const map = navigationMap(root);\n    let targetPos = getTargetPos(map, target);\n    let nextPos = [targetPos[0] + pos[0], targetPos[1] + pos[1]];\n    let next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n    while (next && next === target) {\n        nextPos = [nextPos[0] + pos[0], nextPos[1] + pos[1]];\n        next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n    }\n    return next;\n};\nconst keyboardEvents$1 = {\n    keydown: {\n        ArrowLeft: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [0, -1]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n        },\n        ArrowRight: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [0, 1]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollDown, tryScrollUp]);\n        },\n        ArrowUp: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [-1, 0]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n        },\n        ArrowDown: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [1, 0]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollUp, tryScrollDown]);\n        },\n        o: (_target, nav, _ev) => {\n            if (!nav.root) {\n                return;\n            }\n            // FIX: ADDED manually to fix an issue where depending on the order of the config element and button\n            // you either can open the configurator with Ctrl+O, or you can close the configurator with ESC\n            let next = nav.root.nextElementSibling;\n            if (!(next && next instanceof HTMLElement)) {\n                return;\n            }\n\n            if (!next.matches('div.k-pivotgrid-configurator-button')) {\n                next = next.nextElementSibling;\n            }\n\n            if (next && next instanceof HTMLElement && next.matches('div.k-pivotgrid-configurator-button')) {\n                if (!nav.root.parentNode || nav.root.parentNode.querySelector(\".k-pivotgrid-configurator.k-hidden\")) {\n                    next.click();\n                }\n\n                setTimeout(() => {\n                    if (nav.root.parentNode) {\n                        const confHeader = nav.root.parentNode.querySelector('.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview');\n                        if (confHeader instanceof HTMLElement) {\n                            confHeader.setAttribute('tabindex', String(nav.tabIndex));\n                            confHeader.focus();\n                        }\n                    }\n                }, 0);\n            }\n        },\n        Enter: onEnter,\n        Space: onEnter,\n        Home: (target, nav, ev) => {\n            const map = navigationMap(nav.root);\n            const ctrl = ctrlKey(ev);\n            let row = ctrl ? map[0] : (map.find(ro => Boolean(ro.find(x => x === target))) || []);\n            let next = row[0];\n            if (next) {\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n                ev.preventDefault();\n            }\n        },\n        End: (target, nav, ev) => {\n            const map = navigationMap(nav.root);\n            const ctrl = ctrlKey(ev);\n            let row = ctrl ? map[map.length - 1] : (map.find(ro => Boolean(ro.find(x => x === target))) || []);\n            let next = row && row[row.length - 1] || null;\n            if (next) {\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollUp, tryScrollDown]);\n                ev.preventDefault();\n            }\n        }\n    }\n};\nconst mouseEvents$1 = {\n    click: (target, nav) => {\n        if (target && target instanceof HTMLElement) {\n            const prev = nav.elements.find(c => c.hasAttribute('tabindex')) || null;\n            nav.focusElement(target, prev);\n        }\n    }\n};\n/**\n * The PivotGrid keyboard navigation functionality.\n *\n * Usage:\n *\n * On Initialize\n * const navigation = new PivotGridNavigation({ tabindex: 0 });\n *\n * Turn on\n * navigation.start(rootDomElement);\n *\n * On After Update\n * navigation.update();\n *\n * On Destroy / Turn off\n * navigation.stop();\n */\nclass PivotGridNavigation extends Navigation {\n    constructor() {\n        super(...arguments);\n        this.selectors = selectors$1;\n        this.mouseEvents = mouseEvents$1;\n        this.keyboardEvents = keyboardEvents$1;\n    }\n}\n\nconst selectors = [\n    '.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview',\n    '.k-pivotgrid-configurator-content .k-chip',\n    '.k-pivotgrid-configurator-actions button'\n];\nconst onEscape = (_target, nav, ev) => {\n    if (ev.target instanceof HTMLElement) {\n        if (nav.root) {\n            const pivot = nav.root.previousElementSibling;\n            const confButton = nav.root.nextElementSibling;\n            const pivotCell = Array.from(pivot instanceof HTMLElement ? pivot.querySelectorAll('[tabindex]') : []).find((c) => c.tabIndex >= 0);\n            if (pivotCell instanceof HTMLElement) {\n                pivotCell.focus();\n                if (confButton instanceof HTMLElement) {\n                    confButton.click();\n                }\n            }\n        }\n    }\n};\nconst navigate = (target, nav, ev, dir) => {\n    ev.preventDefault();\n    const all = nav.elements;\n    let index = all.indexOf(target) + dir;\n    if (index < 0) {\n        index = all.length - 1;\n    }\n    nav.focusElement(all[index % all.length], target);\n};\nconst onDelete = (target, nav, ev) => {\n    if (ev.target instanceof HTMLElement) {\n        const deleteButton = ev.target.querySelector('.k-icon.k-i-x-circle, .k-svg-icon.k-svg-i-x-circle');\n        if (deleteButton instanceof HTMLElement) {\n            ev.preventDefault();\n            navigate(target, nav, ev, -1);\n        }\n    }\n};\nconst keyboardEvents = {\n    keydown: {\n        Tab: (target, nav, ev) => {\n            navigate(target, nav, ev, ev.shiftKey ? -1 : 1);\n        },\n        Escape: onEscape,\n        Delete: onDelete,\n        Backspace: onDelete\n    }\n};\nconst mouseEvents = {\n    click: (target, nav) => {\n        if (target && target instanceof HTMLElement) {\n            const prev = nav.elements.find((c) => c.hasAttribute('tabindex')) || null;\n            nav.focusElement(target, prev);\n        }\n    }\n};\n/**\n * The PivotGrid Configurator keyboard navigation functionality.\n *\n * Usage:\n *\n * On Initialize\n * const navigation = new ConfiguratorNavigation({ tabindex: 0 });\n *\n * Turn on\n * navigation.start(rootDomElement);\n *\n * On After Update\n * navigation.update();\n *\n * On Destroy / Turn off\n * navigation.stop();\n */\nclass ConfiguratorNavigation extends Navigation {\n    constructor() {\n        super(...arguments);\n        this.selectors = selectors;\n        this.mouseEvents = mouseEvents;\n        this.keyboardEvents = keyboardEvents;\n    }\n}\n\nvar __meta__ = {\n    id: \"pivot.configurator\",\n    name: \"PivotConfigurator\",\n    category: \"web\",\n    depends: [ \"dropdownlist\", \"treeview\", \"treeview.draganddrop\", \"pivot.fieldmenu\", \"html.chip\", \"html.chiplist\", \"pivot.common\", \"icons\" ],\n    hidden: true\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Widget = ui.Widget,\n        common = window.kendo.pivotgrid.common,\n        fetchDiscover = common.fetchDiscover,\n        configuratorReducer = common.configuratorReducer,\n        PIVOT_CONFIGURATOR_ACTION = common.PIVOT_CONFIGURATOR_ACTION,\n        ns = \".kendoPivotConfigurator\",\n        HOVER_EVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        SETTINGS_TEMPLATE = ({ title, headerTextId }) => '<div class=\"k-pivotgrid-configurator-header\">' +\n                                            `<div class=\"k-pivotgrid-configurator-header-text\" id=\"${headerTextId}\">${encode(title)}</div>` +\n                                          '</div>',\n        CONTENT_TEMPLATE = ({ formClass, horizontal, ariaId }) => '<div class=\"k-pivotgrid-configurator-content\">' +\n            `<form class=\"${encode(formClass)}\">` +\n                `${horizontal ? '<div class=\"k-form-field-wrapper\">' : ''}` +\n                '<div class=\"k-form-field\">' +\n                    `<label class=\"k-label\" id=\"${ariaId}-configurator-fields\">Fields</label>` +\n                '</div>' +\n                '<div class=\"k-form-field\">' +\n                  '<div class=\"k-fields-list-wrapper\"></div>' +\n                '</div>' +\n                `${horizontal ? '</div><div class=\"k-form-field-wrapper\">' : ''}` +\n                '<div class=\"k-form-field\">' +\n                    `<label class=\"k-label\" id=\"${ariaId}-configurator-columns\">Columns</label>` +\n                '</div>' +\n                '<div class=\"k-chip-list k-column-fields\"></div>' +\n                '<div class=\"k-form-field\">' +\n                    `<label class=\"k-label\" id=\"${ariaId}-configurator-rows\">Rows</label>` +\n                '</div>' +\n                '<div class=\"k-chip-list k-row-fields\"></div>' +\n                `${horizontal ? '</div><div class=\"k-form-field-wrapper\">' : ''}` +\n                '<div class=\"k-form-field\">' +\n                    `<label class=\"k-label\" id=\"${ariaId}-configurator-values\">Values</label>` +\n                '</div>' +\n                '<div class=\"k-chip-list k-column-fields\"></div>' +\n                `${horizontal ? '</div>' : ''}` +\n            '</form>' +\n        '</div>',\n        TARGET_ITEM_TEMPLATE = ({ name }) => '<span>' +\n                `<span class=\"k-chip-label\">${encode(name)}</span>` +\n            '</span>',\n        ACTIONS_TEMPLATE = ({ cancelText, applyText }) =>\n                '<div class=\"k-pivotgrid-configurator-actions k-actions k-hstack k-justify-content-end\">' +\n                  '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" aria-disabled=\"false\">' +\n                    `<span class=\"k-button-text\">${encode(cancelText)}</span>` +\n                  '</button>' +\n                  '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary\" aria-disabled=\"false\">' +\n                    `<span class=\"k-button-text\">${encode(applyText)}</span>` +\n                  '</button>' +\n                '</div>',\n        SETTING_CONTAINER_TEMPLATE = ({ name }) => `<div class=\"k-pivotgrid-target k-pivotgrid-configurator-section\"><strong>${encode(name)}</strong><div class=\"k-pivotgrid-target-wrap\"></div>`;\n\n    function addKPI(data) {\n        var found;\n        var idx = 0;\n        var length = data.length;\n\n        for (; idx < length; idx++) {\n            if (data[idx].type == 2) {\n                found = true;\n                break;\n            }\n        }\n\n        if (found) {\n            data.splice(idx + 1, 0, {\n                caption: \"KPIs\",\n                defaultHierarchy: \"[KPIs]\",\n                name: \"KPIs\",\n                uniqueName: \"[KPIs]\"\n            });\n        }\n    }\n\n    function kpiNode(node) {\n        return {\n            name: node.uniqueName,\n            type: node.type\n        };\n    }\n\n    function normalizeKPIs(data) {\n        for (var idx = 0, length = data.length; idx < length; idx++) {\n            data[idx].uniqueName = data[idx].name;\n            data[idx].type = \"kpi\";\n        }\n\n        return data;\n    }\n\n    function settingTargetFromNode(node) {\n        var target = $(node).closest(\".k-pivot-setting\");\n\n        if (target.length) {\n            return target.data(\"kendoPivotSettingTarget\");\n        }\n        return null;\n    }\n\n    function getIcons(sortIcon, options) {\n        var sortable = options.sortable;\n        var result = '';\n\n        if (sortable) {\n            result += sortIcon ? `<span class=\"k-chip-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n        }\n\n        if (options.filterable || sortable) {\n            result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n        }\n\n        result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n\n        return result;\n    }\n\n    var PivotConfiguratorV2 = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this._ariaId = this.element.attr(\"id\") || kendo.guid();\n            this.element.addClass(\"k-widget k-pivotgrid-configurator k-pos-relative\");\n            this.element.attr({\n                \"role\": \"dialog\",\n                \"aria-hidden\": true,\n                \"aria-labelledby\": `${this._ariaId}-configurator-header`\n            });\n\n            this._dataSource();\n\n            if (this.options.navigatable) {\n                this._initPivotGridConfiguratorNavigation();\n            }\n\n            this._layout();\n\n            this.refresh();\n\n            if (options.height) {\n                this.element.height(options.height);\n            }\n\n            kendo.notify(this);\n        },\n\n        events: [],\n\n        options: {\n            name: \"PivotConfiguratorV2\",\n            orientation: \"vertical\",\n            filterable: false,\n            sortable: false,\n            messages: {\n                title: \"Settings\",\n                cancelButtonText: \"Cancel\",\n                applyButtonText: \"Apply\",\n                measures: \"Select some fields to begin setup\",\n                columns: \"Select some fields to begin setup\",\n                rows: \"Select some fields to begin setup\"\n            }\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measures) {\n                this.measures.setDataSource(dataSource);\n            }\n\n            if (this.rows) {\n                this.rows.setDataSource(dataSource);\n            }\n\n            if (this.columns) {\n                this.columns.setDataSource(dataSource);\n            }\n\n            this.refresh();\n        },\n\n        _initPivotGridConfiguratorNavigation: function() {\n            var that = this;\n            that.configuratorNavigation = new ConfiguratorNavigation({ tabIndex: 0 });\n            that.configuratorNavigation.start(that.element[0]);\n\n            const firstCell = that.configuratorNavigation.first;\n\n            if (firstCell) {\n                firstCell.setAttribute('tabindex', '0');\n            }\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler)\n                               .unbind(\"error\", that._errorHandler)\n                               .unbind(\"progress\", that._progressHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(that.options.dataSource);\n            that.dataSource.bind(\"change\", that._refreshHandler)\n                           .bind(\"error\", that._errorHandler)\n                           .bind(\"progress\", that._progressHandler);\n        },\n\n        _layout: function() {\n\n            var that = this;\n            var options = that.options;\n            var messages = options.messages;\n            var horizontal = options.orientation == \"horizontal\";\n\n            var panel = $(\"<div class='k-pivotgrid-configurator-panel k-pivotgrid-configurator-push'></div>\");\n\n            panel.addClass(horizontal ? \"k-pivotgrid-configurator-horizontal\" : \"k-pivotgrid-configurator-vertical\");\n\n            that.element.append(panel);\n\n            that.panel = panel;\n\n            $(SETTINGS_TEMPLATE({ title: this.options.messages.title, headerTextId: `${that._ariaId}-configurator-header` })).appendTo(that.panel);\n\n            $(CONTENT_TEMPLATE({ formClass: horizontal ? \"k-form k-form-horizontal\" : \"k-form\", filterable: options.filterable, horizontal: horizontal, ariaId: that._ariaId }))\n                .appendTo(that.panel).find(\".k-chip-list\")\n                .each(function(index, elm) {\n                    kendo.html.renderChipList(elm, $.extend({}, options));\n                    $(elm).attr({\n                        \"role\": \"listbox\",\n                        \"aria-orientation\": \"horizontal\",\n                    });\n                });\n\n            that._fields();\n            $(ACTIONS_TEMPLATE({ cancelText: messages.cancelButtonText, applyText: messages.applyButtonText })).appendTo(that.panel);\n            that._targets();\n\n            that.element.on(\"click\" + ns, \".k-pivotgrid-configurator-actions > button\", that._actions.bind(that));\n        },\n\n        _actions: function(e) {\n            e.preventDefault();\n\n            var target = $(e.currentTarget).closest(\":not(path,svg)\");\n            if (target.index()) {\n                this.columns._applyState();\n                this.rows._applyState();\n                this.measures._applyState();\n                this.dataSource.read();\n            } else {\n                this.columns._cancelChanges();\n                this.rows._cancelChanges();\n                this.measures._cancelChanges();\n                this.treeView.dataSource.read();\n            }\n        },\n\n        _targets: function() {\n            var that = this;\n            var columns = that.panel.find(\".k-column-fields\").first();\n            var rows = that.panel.find(\".k-row-fields\");\n            var measures = that.panel.find(\".k-chip-list\").last();\n            var options = this.options;\n\n            var targetItemTemplate = ({ name, menuenabled }) => {\n                    var chip = kendo.html.renderChip(TARGET_ITEM_TEMPLATE({ name, menuenabled }), $.extend({}, options, {\n                        fillMode: \"solid\",\n                        themeColor: \"base\",\n                        rounded: \"full\",\n                        removable: true,\n                        removeIcon: \"x-circle\",\n                        actions: menuenabled ? [\n                            { icon: \"more-vertical\" }\n                        ] : null\n                    }));\n\n                    return chip;\n                };\n\n            this.columns = this._createTarget(columns, {\n                navigatable: options.navigatable,\n                filterable: options.filterable,\n                sortable: options.sortable,\n                template: targetItemTemplate,\n                connectWith: rows,\n                messages: {\n                    empty: options.messages.columns,\n                    fieldMenu: this.options.messages.fieldMenu\n                },\n                configuratorNavigation: that.configuratorNavigation\n            });\n            this.columns.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-columns`);\n\n            this.rows = this._createTarget(rows, {\n                navigatable: options.navigatable,\n                filterable: options.filterable,\n                sortable: options.sortable,\n                template: targetItemTemplate,\n                setting: \"rows\",\n                connectWith: columns,\n                messages: {\n                    empty: this.options.messages.rows,\n                    fieldMenu: this.options.messages.fieldMenu\n                },\n                configuratorNavigation: that.configuratorNavigation\n            });\n            this.rows.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-rows`);\n\n            this.measures = this._createTarget(measures, {\n                navigatable: options.navigatable,\n                filterable: false,\n                sortable: false,\n                setting: \"measures\",\n                template: targetItemTemplate,\n                messages: {\n                    empty: options.messages.measures,\n                    fieldMenu: this.options.messages.fieldMenu\n                },\n                configuratorNavigation: that.configuratorNavigation\n            });\n\n            this.measures.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-values`);\n\n            [this.columns, this.rows, this.measures].forEach(x=> x.element.find(\".k-chip\").attr(\"role\", \"option\"));\n        },\n\n        _createTarget: function(element, options) {\n            var that = this;\n            return new kendo.ui.PivotSettingTargetV2(element, $.extend({\n                dataSource: this.dataSource,\n                hint: function(element) {\n                    return element.clone();\n                },\n                remove: function(e) {\n                    var item = that.treeView.wrapper\n                        .find(\"[data-name='\" + e.name + \"']\")\n                        .closest(\"li\");\n                    var id = item.attr(kendo.attr(\"uid\"));\n                    var dataItem = that.treeView.dataSource.getByUid(id);\n\n                    if (dataItem) {\n                        dataItem.checked = false;\n                        item.find(\"input\").attr(\"checked\", false);\n                    }\n                },\n                template: options.template\n            }, options));\n        },\n\n        _fields: function() {\n            var that = this;\n            var container = that.element.find(\".k-fields-list-wrapper\");\n\n            this.treeView = $(`<div aria-labelledby=\"${this._ariaId}-configurator-header ${this._ariaId}-configurator-fields\" />`).appendTo(container)\n                .kendoTreeView({\n                    checkboxes: {\n                        checkChildren: true,\n                        template: ({ item }) => {\n                            var result = '';\n\n                            if ((item.hasChildren || item.aggregator || item.local) && item.uniqueName !== \"[KPIs]\" && item.uniqueName !== \"[Measures]\" && item.uniqueName !== \"Measures\") {\n                                result += `<input type=\"checkbox\" data-name=\"${encode(item.uniqueName)}\" ${item.checked ? \"checked\" : \"\"} class=\"k-checkbox k-checkbox-md k-rounded-md\" id=\"${encode(item.uid)}\" tabindex=\"-1\">`;\n                            }\n\n                            return result;\n                        }\n                    },\n                    dataTextField: \"caption\",\n                    autoBind: false,\n                    check: function(e) {\n                      var dataItem = e.sender.dataItem(e.node);\n                      var action = {\n                        type: PIVOT_CONFIGURATOR_ACTION.toggleSelection,\n                        payload: dataItem\n                      };\n                      var state = {\n                        columnAxes: that.columns._state(),\n                        rowAxes: that.rows._state(),\n                        measureAxes: that.measures._state()\n                      };\n                      var result = configuratorReducer(state, action);\n\n                      if (that.dataSource.cubeSchema && result.measureAxes && result.measureAxes.length &&\n                        result.measureAxes.length > state.measureAxes.length) {\n                          that.dataSource.cubeSchema.restoreMeasure(result.measureAxes, dataItem);\n                      }\n\n                      if (dataItem.defaultHierarchy && dataItem.items && dataItem.items.length) {\n                          that._checkMembers([{ name: dataItem.defaultHierarchy }], dataItem.items);\n                          dataItem.items.trigger(\"change\");\n                      }\n\n                      if (result.columnAxes) {\n                          that.columns._state(result.columnAxes);\n                          that.columns._redraw();\n                      }\n                      if (result.rowAxes) {\n                          that.rows._state(result.rowAxes);\n                          that.rows._redraw();\n                      }\n                      if (result.measureAxes) {\n                          that.measures._state(result.measureAxes);\n                          that.measures._redraw();\n                      }\n                    },\n                    dataSource: this._treeViewDataSource()\n                 })\n                .data(\"kendoTreeView\");\n\n            this.treeView.wrapper.off(\"click\", this.treeView._clickHandler);\n        },\n\n        _treeViewDataSource: function() {\n            var that = this;\n\n            return kendo.data.HierarchicalDataSource.create({\n                schema: {\n                    model: {\n                        id: \"uniqueName\",\n                        hasChildren: function(item) {\n                            if (that.dataSource.cubeSchema && item.uniqueName !== \"Measures\") {\n                                item.local = true;\n                                return false;\n                            }\n                            return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                        }\n                    }\n                },\n                transport: {\n                    read: function(options) {\n                        var node;\n                        var transport = that.dataSource.transport;\n                        var catalog = transport.catalog();\n                        var cube = transport.cube();\n                        var fetchOptions = {\n                            url: transport.options.read\n                        };\n                        var columns = that.columns._state();\n                        var rows = that.rows._state();\n                        var measures = that.measures._state();\n                        var members = columns.concat(rows).concat(measures);\n                        var fields;\n                        var dsMeasures;\n                        var fetchOpts;\n\n                        if ($.isEmptyObject(options.data)) {\n                            if (that.dataSource.cubeSchema) {\n                                fields = that.dataSource.cubeSchema.dimensions();\n                                that._checkMembers(members, fields);\n                                options.success(fields);\n                            } else {\n                                fetchOpts = {\n                                    connection: {\n                                        catalog: catalog,\n                                        cube: cube\n                                    },\n                                    restrictions: {\n                                        catalogName: catalog,\n                                        cubeName: cube\n                                    },\n                                    command: 'schemaDimensions'\n                                };\n\n                                fetchDiscover(fetchOptions, fetchOpts)\n                                    .then(function(newFields) {\n                                        that._checkMembers(members, newFields);\n                                        addKPI(newFields);\n                                        options.success(newFields);\n                                     });\n                            }\n                        } else {\n                            //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                            node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                            if (that.dataSource.cubeSchema) {\n                                dsMeasures = that.dataSource.measures();\n                                that._checkMembers(members, dsMeasures);\n                                options.success(dsMeasures);\n                            } else {\n                                if (node.uniqueName === \"[KPIs]\") {\n                                    fetchDiscover(fetchOptions, that._getKPIOptions(catalog, cube))\n                                    .then(function(newFields) {\n                                        options.success(normalizeKPIs(newFields));\n                                    });\n                                } else if (node.type == \"kpi\") {\n                                    options.success(buildKPImeasures(node));\n                                } else {\n                                    fetchDiscover(fetchOptions ,that._loadFieldsCommand(node, catalog, cube))\n                                    .then(function(newFields) {\n                                        that._checkMembers(members, newFields);\n                                        options.success(newFields);\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        },\n\n        _checkMembers: function(members, newData) {\n            var hash = {};\n            var index = 0;\n\n            for (index = 0; index < members.length; index++) {\n                hash[members[index].name] = true;\n            }\n\n            for (index = 0; index < newData.length; index++) {\n                if (hash[newData[index].uniqueName]) {\n                    newData[index].checked = true;\n                }\n            }\n        },\n\n        _getKPIOptions: function(catalog, cube) {\n            return {\n                connection: {\n                    catalog: catalog,\n                    cube: cube\n                },\n                restrictions: {\n                    catalogName: catalog,\n                    cubeName: cube\n                },\n                command: 'schemaKPIs'\n            };\n        },\n\n        _loadFieldsCommand: function(field, catalog, cube) {\n            var command;\n            var dimensionUniqueName;\n            var hierarchyUniqueName;\n\n            if (field.type === 2) {\n                command = 'schemaMeasures';\n            } else if (field.dimensionUniqueName) {\n                command = 'schemaLevels';\n                hierarchyUniqueName = field.uniqueName;\n            } else {\n                command = 'schemaHierarchies';\n                dimensionUniqueName = field.uniqueName;\n            }\n\n            var options = {\n                connection: {\n                    catalog: catalog,\n                    cube: cube\n                },\n                restrictions: {\n                    catalogName: catalog,\n                    cubeName: cube,\n                    hierarchyUniqueName: hierarchyUniqueName,\n                    dimensionUniqueName: dimensionUniqueName\n                },\n                command: command\n            };\n\n            return options;\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.element, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(\"change\", this._refreshHandler);\n\n            this.element.off(ns);\n\n            this.rows.destroy();\n            this.columns.destroy();\n            this.measures.destroy();\n            this.treeView.destroy();\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        refresh: function() {\n            if (this.treeView) {\n                this.treeView.dataSource.fetch();\n            }\n\n            this._progress(false);\n        }\n\n    });\n\n    ui.plugin(PivotConfiguratorV2);\n\n    var PivotConfigurator = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this.element.addClass(\"k-pivotgrid-configurator-panel kendo-jquery\");\n\n            if (this.options.height) {\n                this.element.outerHeight(this.options.height);\n            }\n\n            this._dataSource();\n\n            this._layout();\n\n            this.refresh();\n\n            kendo.notify(this);\n        },\n\n        events: [],\n\n        options: {\n            name: \"PivotConfigurator\",\n            filterable: false,\n            sortable: false,\n            messages: {\n                measures: \"Drop Data Fields Here\",\n                columns: \"Drop Column Fields Here\",\n                rows: \"Drop Rows Fields Here\",\n                measuresLabel: \"Measures\",\n                columnsLabel: \"Columns\",\n                rowsLabel: \"Rows\",\n                fieldsLabel: \"Fields\"\n            }\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler)\n                               .unbind(\"error\", that._errorHandler)\n                               .unbind(\"progress\", that._progressHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(that.options.dataSource);\n            that.dataSource.bind(\"change\", that._refreshHandler)\n                           .bind(\"error\", that._errorHandler)\n                           .bind(\"progress\", that._progressHandler);\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measures) {\n                this.measures.setDataSource(dataSource);\n            }\n\n            if (this.rows) {\n                this.rows.setDataSource(dataSource);\n            }\n\n            if (this.columns) {\n                this.columns.setDataSource(dataSource);\n            }\n\n            this.refresh();\n        },\n\n        _treeViewDataSource: function() {\n            var that = this;\n\n            return kendo.data.HierarchicalDataSource.create({\n                schema: {\n                    model: {\n                        id: \"uniqueName\",\n                        hasChildren: function(item) {\n                            return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                        }\n                    }\n                },\n                transport: {\n                    read: function(options) {\n                        var promise;\n                        var node;\n                        var kpi;\n\n                        if ($.isEmptyObject(options.data)) {\n                            promise = that.dataSource.schemaDimensions();\n\n                            promise.done(function(data) {\n                                        if (!that.dataSource.cubeBuilder) {\n                                            addKPI(data);\n                                        }\n                                        options.success(data);\n                                    })\n                                    .fail(options.error);\n                        } else {\n                            //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                            node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                            if (node.uniqueName === \"[KPIs]\") {\n                                kpi = true;\n                                promise = that.dataSource.schemaKPIs();\n                                promise.done(function(data) {\n                                            options.success(normalizeKPIs(data));\n                                       })\n                                       .fail(options.error);\n                            } else if (node.type == \"kpi\") {\n                                kpi = true;\n                                options.success(buildKPImeasures(node));\n                            }\n\n                            if (!kpi) {\n                                if (node.type == 2) { //measure\n                                    promise = that.dataSource.schemaMeasures();\n                                } else if (node.dimensionUniqueName) { // hierarchy\n                                    promise = that.dataSource.schemaLevels(options.data.uniqueName);\n                                } else { // dimension\n                                    promise = that.dataSource.schemaHierarchies(options.data.uniqueName);\n                                }\n\n                                promise.done(options.success)\n                                        .fail(options.error);\n                            }\n                        }\n                    }\n                }\n            });\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.element, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _layout: function() {\n            $('<div class=\"k-pivotgrid-configurator\"><div class=\"k-pivotgrid-configurator-content\"></div></div>').appendTo(this.element);\n            this.form = this.element.find('.k-pivotgrid-configurator-content');\n\n            this._fields();\n            this._targets();\n        },\n\n        _fields: function() {\n            var container = $('<div class=\"k-pivotgrid-fields k-pivotgrid-configurator-section\"><strong>' + encode(this.options.messages.fieldsLabel) + '</strong><div class=\"k-fields-list-wrapper\"></div></div>').appendTo(this.form);\n\n            var template = ({ item }) => {\n                var result = '';\n\n                if (item.type == 2 || item.uniqueName == \"[KPIs]\") {\n                    result += kendo.ui.icon(item.type == 2 ? \"sum\" : \"caret-alt-expand\"/* \"kpi\" */);\n                } else if (item.type && item.type !== \"kpi\") {\n                    result += kendo.ui.icon(\"arrows-axes\");\n                }\n\n                result += `${encode(item.caption || item.name)}`;\n\n                return result;\n            };\n\n            this.treeView = $(\"<div/>\").appendTo(container.find('.k-fields-list-wrapper'))\n                .kendoTreeView({\n                    template: template,\n                    dataTextField: \"caption\",\n                    dragAndDrop: true,\n                    autoBind: false,\n                    dataSource: this._treeViewDataSource(),\n                    dragstart: function(e) {\n                        var dataItem = this.dataItem(e.sourceNode);\n\n                        if ((!dataItem.hasChildren && !dataItem.aggregator && !dataItem.measure) || (dataItem.type == 2) || dataItem.uniqueName === \"[KPIs]\") {\n                            e.preventDefault();\n                        }\n                    },\n                    drag: function(e) {\n                        var status = \"cancel\";\n                        var setting = settingTargetFromNode(e.dropTarget);\n\n                        if (setting && setting.validate(this.dataItem(e.sourceNode))) {\n                            status = \"plus\";\n                        }\n\n                        e.setStatusClass(status);\n                    },\n                    drop: function(e) {\n                        e.preventDefault();\n\n                        var setting = settingTargetFromNode(e.dropTarget);\n                        var node = this.dataItem(e.sourceNode);\n                        var idx, length, measures;\n                        var name;\n\n                        if (setting && setting.validate(node)) {\n                            name = node.defaultHierarchy || node.uniqueName;\n\n                            if (node.type === \"kpi\") {\n                                measures = buildKPImeasures(node);\n                                length = measures.length;\n                                name = [];\n\n                                for (idx = 0; idx < length; idx++) {\n                                    name.push(kpiNode(measures[idx]));\n                                }\n                            } else if (node.kpi) {\n                                name = [kpiNode(node)];\n                            }\n\n                            setting.add(name);\n                        }\n                    }\n                 })\n                .data(\"kendoTreeView\");\n        },\n\n        _createTarget: function(element, options) {\n            var template;\n\n            template = ({ name, sortIcon }) => ''\n                + `<div class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${name}\">`\n                    + '<span class=\"k-chip-content\">'\n                        + `<span class=\"k-chip-label\">${name}</span>`\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">'\n                    + getIcons(sortIcon, options)\n                    + '</span>'\n                + '</div>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`\n            }, options));\n        },\n\n        _targets: function() {\n            var container = $('<div class=\"k-pivotgrid-targets\"/>').appendTo(this.form);\n\n            var columnsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.columnsLabel, icon: \"columns\" })).appendTo(container);\n            var columns = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(columnsContainer.find('.k-pivotgrid-target-wrap'));\n\n            var rowsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.rowsLabel, icon: \"rows\" })).appendTo(container);\n            var rows = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(rowsContainer.find('.k-pivotgrid-target-wrap'));\n\n            var measuresContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.measuresLabel, icon: \"sum\" })).appendTo(container);\n            var measures = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(measuresContainer.find('.k-pivotgrid-target-wrap'));\n\n            var options = this.options;\n\n            this.columns = this._createTarget(columns, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                connectWith: rows,\n                messages: {\n                    empty: options.messages.columns,\n                    fieldMenu: options.messages.fieldMenu\n                }\n            });\n\n            this.rows = this._createTarget(rows, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                setting: \"rows\",\n                connectWith: columns,\n                messages: {\n                    empty: this.options.messages.rows,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.measures = this._createTarget(measures, {\n                setting: \"measures\",\n                messages: {\n                    empty: options.messages.measures\n                }\n            });\n\n            columns\n                .add(rows)\n                .add(measures)\n                .on(HOVER_EVENTS, \".k-item:not(.k-empty)\", this._toggleHover);\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).closest(\":not(path,svg)\").toggleClass(\"k-hover\", e.type === \"mouseenter\");\n        },\n\n        _resize: function() {\n            var element = this.element;\n            var height = this.options.height;\n\n            if (!height) {\n                return;\n            }\n\n            element.outerHeight(height);\n        },\n\n        refresh: function() {\n            var dataSource = this.dataSource;\n\n            if (dataSource.cubeBuilder || this._cube !== dataSource.cube() || this._catalog !== dataSource.catalog()) {\n                this.treeView.dataSource.fetch();\n            }\n\n            this._catalog = this.dataSource.catalog();\n            this._cube = this.dataSource.cube();\n\n            this._resize();\n\n            this._progress(false);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(\"change\", this._refreshHandler);\n\n            this.form.find(\".k-pivot-setting\").off(ns);\n\n            this.rows.destroy();\n            this.columns.destroy();\n            this.measures.destroy();\n            this.treeView.destroy();\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    function kpiMeasure(name, measure, type) {\n        return {\n            hierarchyUniqueName: name,\n            uniqueName: measure,\n            caption: measure,\n            measure: measure,\n            name: measure,\n            type: type,\n            kpi: true\n        };\n    }\n\n    function buildKPImeasures(node) {\n        var name = node.name;\n        return [\n            kpiMeasure(name, node.value, \"value\"),\n            kpiMeasure(name, node.goal, \"goal\"),\n            kpiMeasure(name, node.status, \"status\"),\n            kpiMeasure(name, node.trend, \"trend\")\n        ];\n    }\n\n    kendo.cssProperties.registerPrefix(\"HTMLChip\", \"k-chip-\");\n\n    kendo.cssProperties.registerValues(\"HTMLChip\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(PivotConfigurator);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}